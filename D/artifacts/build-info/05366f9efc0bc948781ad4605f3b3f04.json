{
	"id": "05366f9efc0bc948781ad4605f3b3f04",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"D/decentralized autonomous initial coin offering.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/// @title DAICO - Decentralized Autonomous Initial Coin Offering\ncontract DAICO is Ownable, ReentrancyGuard, ERC20 {\n    uint256 public rate;  // Tokens per ETH\n    uint256 public fundingGoal;\n    uint256 public fundsRaised;\n    bool public isFundingActive;\n\n    // Mapping to track contributions\n    mapping(address => uint256) public contributions;\n\n    // Voting mechanism\n    mapping(address => bool) public hasVoted;\n    uint256 public totalVotes;\n    uint256 public requiredVotesPercentage; // scaled by 10000 (50% = 5000)\n\n    // Events\n    event Contribution(address indexed investor, uint256 amount, uint256 tokens);\n    event FundsWithdrawn(address indexed team, uint256 amount);\n    event VotingStarted();\n    event Voted(address indexed voter);\n    event FundingEnded();\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint256 _rate,\n        uint256 _fundingGoal,\n        uint256 _requiredVotesPercentage\n    )\n        ERC20(_name, _symbol)\n        Ownable(msg.sender)\n    {\n        require(_rate > 0, \"Rate must be greater than 0\");\n        require(_fundingGoal > 0, \"Goal must be greater than 0\");\n        require(_requiredVotesPercentage <= 10000, \"Votes percent max 100%\");\n\n        rate = _rate;\n        fundingGoal = _fundingGoal;\n        requiredVotesPercentage = _requiredVotesPercentage;\n        isFundingActive = true;\n    }\n\n    /// @notice Investors contribute ETH to the DAICO\n    function contribute() external payable nonReentrant {\n        require(isFundingActive, \"Funding is closed\");\n        require(msg.value > 0, \"Contribution must be greater than 0\");\n\n        uint256 tokensToMint = msg.value * rate;\n        contributions[msg.sender] += msg.value;\n        fundsRaised += msg.value;\n\n        _mint(msg.sender, tokensToMint);\n        emit Contribution(msg.sender, msg.value, tokensToMint);\n\n        if (fundsRaised >= fundingGoal) {\n            isFundingActive = false;\n            emit FundingEnded();\n        }\n    }\n\n    /// @notice Investors initiate a vote to allow team withdrawal\n    function voteForFundRelease() external nonReentrant {\n        require(contributions[msg.sender] > 0, \"Must be an investor\");\n        require(!hasVoted[msg.sender], \"Already voted\");\n\n        hasVoted[msg.sender] = true;\n        totalVotes += contributions[msg.sender];\n\n        emit Voted(msg.sender);\n    }\n\n    /// @notice Owner (project team) withdraws funds after receiving enough votes\n    function withdrawFunds() external onlyOwner nonReentrant {\n        require(!isFundingActive, \"Funding still active\");\n        uint256 requiredVotes = (fundsRaised * requiredVotesPercentage) / 10000;\n        require(totalVotes >= requiredVotes, \"Not enough votes\");\n\n        uint256 amount = address(this).balance;\n        require(amount > 0, \"No funds to withdraw\");\n\n        (bool success,) = payable(owner()).call{value: amount}(\"\");\n        require(success, \"Withdrawal failed\");\n\n        emit FundsWithdrawn(owner(), amount);\n    }\n\n    /// @notice Check if sufficient votes received\n    function hasEnoughVotes() public view returns (bool) {\n        uint256 requiredVotes = (fundsRaised * requiredVotesPercentage) / 10000;\n        return totalVotes >= requiredVotes;\n    }\n\n    /// @notice Ends funding period manually (only by owner)\n    function endFundingManually() external onlyOwner {\n        require(isFundingActive, \"Funding already ended\");\n        isFundingActive = false;\n        emit FundingEnded();\n    }\n\n    /// @notice Retrieve contract's ETH balance\n    function contractBalance() external view returns (uint256) {\n        return address(this).balance;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"D/decentralized autonomous initial coin offering.sol": {
				"DAICO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_fundingGoal",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_requiredVotesPercentage",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "Contribution",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "FundingEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "team",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "FundsWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "Voted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "VotingStarted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contribute",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "contributions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endFundingManually",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fundingGoal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fundsRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasEnoughVotes",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasVoted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFundingActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requiredVotesPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "voteForFundRelease",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "DAICO - Decentralized Autonomous Initial Coin Offering",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"D/decentralized autonomous initial coin offering.sol\":297:3871  contract DAICO is Ownable, ReentrancyGuard, ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"D/decentralized autonomous initial coin offering.sol\":1020:1616  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"D/decentralized autonomous initial coin offering.sol\":1207:1212  _name */\n  dup5\n    /* \"D/decentralized autonomous initial coin offering.sol\":1214:1221  _symbol */\n  dup5\n    /* \"D/decentralized autonomous initial coin offering.sol\":1239:1249  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x05\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x06\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_18\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_18:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"D/decentralized autonomous initial coin offering.sol\":1281:1282  0 */\n  0x00\n    /* \"D/decentralized autonomous initial coin offering.sol\":1273:1278  _rate */\n  dup4\n    /* \"D/decentralized autonomous initial coin offering.sol\":1273:1282  _rate > 0 */\n  gt\n    /* \"D/decentralized autonomous initial coin offering.sol\":1265:1314  require(_rate > 0, \"Rate must be greater than 0\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_20:\n    /* \"D/decentralized autonomous initial coin offering.sol\":1347:1348  0 */\n  0x00\n    /* \"D/decentralized autonomous initial coin offering.sol\":1332:1344  _fundingGoal */\n  dup3\n    /* \"D/decentralized autonomous initial coin offering.sol\":1332:1348  _fundingGoal > 0 */\n  gt\n    /* \"D/decentralized autonomous initial coin offering.sol\":1324:1380  require(_fundingGoal > 0, \"Goal must be greater than 0\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_23:\n    /* \"D/decentralized autonomous initial coin offering.sol\":1426:1431  10000 */\n  0x2710\n    /* \"D/decentralized autonomous initial coin offering.sol\":1398:1422  _requiredVotesPercentage */\n  dup2\n    /* \"D/decentralized autonomous initial coin offering.sol\":1398:1431  _requiredVotesPercentage <= 10000 */\n  gt\n  iszero\n    /* \"D/decentralized autonomous initial coin offering.sol\":1390:1458  require(_requiredVotesPercentage <= 10000, \"Votes percent max 100%\") */\n  tag_26\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_27\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_26:\n    /* \"D/decentralized autonomous initial coin offering.sol\":1476:1481  _rate */\n  dup3\n    /* \"D/decentralized autonomous initial coin offering.sol\":1469:1473  rate */\n  0x07\n    /* \"D/decentralized autonomous initial coin offering.sol\":1469:1481  rate = _rate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"D/decentralized autonomous initial coin offering.sol\":1505:1517  _fundingGoal */\n  dup2\n    /* \"D/decentralized autonomous initial coin offering.sol\":1491:1502  fundingGoal */\n  0x08\n    /* \"D/decentralized autonomous initial coin offering.sol\":1491:1517  fundingGoal = _fundingGoal */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"D/decentralized autonomous initial coin offering.sol\":1553:1577  _requiredVotesPercentage */\n  dup1\n    /* \"D/decentralized autonomous initial coin offering.sol\":1527:1550  requiredVotesPercentage */\n  0x0e\n    /* \"D/decentralized autonomous initial coin offering.sol\":1527:1577  requiredVotesPercentage = _requiredVotesPercentage */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"D/decentralized autonomous initial coin offering.sol\":1605:1609  true */\n  0x01\n    /* \"D/decentralized autonomous initial coin offering.sol\":1587:1602  isFundingActive */\n  0x0a\n  0x00\n    /* \"D/decentralized autonomous initial coin offering.sol\":1587:1609  isFundingActive = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"D/decentralized autonomous initial coin offering.sol\":1020:1616  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"D/decentralized autonomous initial coin offering.sol\":297:3871  contract DAICO is Ownable, ReentrancyGuard, ERC20 {... */\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_31:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_32:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_33:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_34:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_35:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_36:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_37:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_38:\n    /* \"#utility.yul\":957:984   */\n  tag_84\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_36\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_86\n  tag_37\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":1030:1118   */\ntag_85:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_39:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_88\n  tag_31\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_89\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_38\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_40:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_92\n  tag_37\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1434:1490   */\ntag_91:\n    /* \"#utility.yul\":1508:1537   */\n  tag_93\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_36\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_41:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_42:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_96\n    /* \"#utility.yul\":1885:1934   */\n  tag_97\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_40\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1869:1935   */\n  tag_39\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_99\n  tag_35\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2010:2122   */\ntag_98:\n    /* \"#utility.yul\":2131:2183   */\n  tag_100\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_41\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_43:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_103\n  tag_34\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2292:2414   */\ntag_102:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_104\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_42\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2647   */\ntag_44:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2636:2641   */\n  dup2\n    /* \"#utility.yul\":2625:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2647   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2653:2775   */\ntag_45:\n    /* \"#utility.yul\":2726:2750   */\n  tag_107\n    /* \"#utility.yul\":2744:2749   */\n  dup2\n    /* \"#utility.yul\":2726:2750   */\n  tag_44\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2751   */\n  eq\n    /* \"#utility.yul\":2706:2769   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":2765:2766   */\n  0x00\n    /* \"#utility.yul\":2762:2763   */\n  0x00\n    /* \"#utility.yul\":2755:2767   */\n  revert\n    /* \"#utility.yul\":2706:2769   */\ntag_108:\n    /* \"#utility.yul\":2653:2775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2781:2924   */\ntag_46:\n    /* \"#utility.yul\":2838:2843   */\n  0x00\n    /* \"#utility.yul\":2869:2875   */\n  dup2\n    /* \"#utility.yul\":2863:2876   */\n  mload\n    /* \"#utility.yul\":2854:2876   */\n  swap1\n  pop\n    /* \"#utility.yul\":2885:2918   */\n  tag_110\n    /* \"#utility.yul\":2912:2917   */\n  dup2\n    /* \"#utility.yul\":2885:2918   */\n  tag_45\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2781:2924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:4253   */\ntag_3:\n    /* \"#utility.yul\":3056:3062   */\n  0x00\n    /* \"#utility.yul\":3064:3070   */\n  0x00\n    /* \"#utility.yul\":3072:3078   */\n  0x00\n    /* \"#utility.yul\":3080:3086   */\n  0x00\n    /* \"#utility.yul\":3088:3094   */\n  0x00\n    /* \"#utility.yul\":3137:3140   */\n  0xa0\n    /* \"#utility.yul\":3125:3134   */\n  dup7\n    /* \"#utility.yul\":3116:3123   */\n  dup9\n    /* \"#utility.yul\":3112:3135   */\n  sub\n    /* \"#utility.yul\":3108:3141   */\n  slt\n    /* \"#utility.yul\":3105:3225   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":3144:3223   */\n  tag_113\n  tag_32\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3105:3225   */\ntag_112:\n    /* \"#utility.yul\":3285:3286   */\n  0x00\n    /* \"#utility.yul\":3274:3283   */\n  dup7\n    /* \"#utility.yul\":3270:3287   */\n  add\n    /* \"#utility.yul\":3264:3288   */\n  mload\n    /* \"#utility.yul\":3315:3333   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3307:3313   */\n  dup2\n    /* \"#utility.yul\":3304:3334   */\n  gt\n    /* \"#utility.yul\":3301:3418   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":3337:3416   */\n  tag_115\n  tag_33\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3301:3418   */\ntag_114:\n    /* \"#utility.yul\":3442:3516   */\n  tag_116\n    /* \"#utility.yul\":3508:3515   */\n  dup9\n    /* \"#utility.yul\":3499:3505   */\n  dup3\n    /* \"#utility.yul\":3488:3497   */\n  dup10\n    /* \"#utility.yul\":3484:3506   */\n  add\n    /* \"#utility.yul\":3442:3516   */\n  tag_43\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3432:3516   */\n  swap6\n  pop\n    /* \"#utility.yul\":3235:3526   */\n  pop\n    /* \"#utility.yul\":3586:3588   */\n  0x20\n    /* \"#utility.yul\":3575:3584   */\n  dup7\n    /* \"#utility.yul\":3571:3589   */\n  add\n    /* \"#utility.yul\":3565:3590   */\n  mload\n    /* \"#utility.yul\":3617:3635   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3609:3615   */\n  dup2\n    /* \"#utility.yul\":3606:3636   */\n  gt\n    /* \"#utility.yul\":3603:3720   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":3639:3718   */\n  tag_118\n  tag_33\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3603:3720   */\ntag_117:\n    /* \"#utility.yul\":3744:3818   */\n  tag_119\n    /* \"#utility.yul\":3810:3817   */\n  dup9\n    /* \"#utility.yul\":3801:3807   */\n  dup3\n    /* \"#utility.yul\":3790:3799   */\n  dup10\n    /* \"#utility.yul\":3786:3808   */\n  add\n    /* \"#utility.yul\":3744:3818   */\n  tag_43\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3734:3818   */\n  swap5\n  pop\n    /* \"#utility.yul\":3536:3828   */\n  pop\n    /* \"#utility.yul\":3867:3869   */\n  0x40\n    /* \"#utility.yul\":3893:3957   */\n  tag_120\n    /* \"#utility.yul\":3949:3956   */\n  dup9\n    /* \"#utility.yul\":3940:3946   */\n  dup3\n    /* \"#utility.yul\":3929:3938   */\n  dup10\n    /* \"#utility.yul\":3925:3947   */\n  add\n    /* \"#utility.yul\":3893:3957   */\n  tag_46\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3883:3957   */\n  swap4\n  pop\n    /* \"#utility.yul\":3838:3967   */\n  pop\n    /* \"#utility.yul\":4006:4008   */\n  0x60\n    /* \"#utility.yul\":4032:4096   */\n  tag_121\n    /* \"#utility.yul\":4088:4095   */\n  dup9\n    /* \"#utility.yul\":4079:4085   */\n  dup3\n    /* \"#utility.yul\":4068:4077   */\n  dup10\n    /* \"#utility.yul\":4064:4086   */\n  add\n    /* \"#utility.yul\":4032:4096   */\n  tag_46\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4022:4096   */\n  swap3\n  pop\n    /* \"#utility.yul\":3977:4106   */\n  pop\n    /* \"#utility.yul\":4145:4148   */\n  0x80\n    /* \"#utility.yul\":4172:4236   */\n  tag_122\n    /* \"#utility.yul\":4228:4235   */\n  dup9\n    /* \"#utility.yul\":4219:4225   */\n  dup3\n    /* \"#utility.yul\":4208:4217   */\n  dup10\n    /* \"#utility.yul\":4204:4226   */\n  add\n    /* \"#utility.yul\":4172:4236   */\n  tag_46\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4162:4236   */\n  swap2\n  pop\n    /* \"#utility.yul\":4116:4246   */\n  pop\n    /* \"#utility.yul\":2930:4253   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4259:4385   */\ntag_47:\n    /* \"#utility.yul\":4296:4303   */\n  0x00\n    /* \"#utility.yul\":4336:4378   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4329:4334   */\n  dup3\n    /* \"#utility.yul\":4325:4379   */\n  and\n    /* \"#utility.yul\":4314:4379   */\n  swap1\n  pop\n    /* \"#utility.yul\":4259:4385   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4391:4487   */\ntag_48:\n    /* \"#utility.yul\":4428:4435   */\n  0x00\n    /* \"#utility.yul\":4457:4481   */\n  tag_125\n    /* \"#utility.yul\":4475:4480   */\n  dup3\n    /* \"#utility.yul\":4457:4481   */\n  tag_47\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4446:4481   */\n  swap1\n  pop\n    /* \"#utility.yul\":4391:4487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4493:4611   */\ntag_49:\n    /* \"#utility.yul\":4580:4604   */\n  tag_127\n    /* \"#utility.yul\":4598:4603   */\n  dup2\n    /* \"#utility.yul\":4580:4604   */\n  tag_48\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4575:4578   */\n  dup3\n    /* \"#utility.yul\":4568:4605   */\n  mstore\n    /* \"#utility.yul\":4493:4611   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4617:4839   */\ntag_11:\n    /* \"#utility.yul\":4710:4714   */\n  0x00\n    /* \"#utility.yul\":4748:4750   */\n  0x20\n    /* \"#utility.yul\":4737:4746   */\n  dup3\n    /* \"#utility.yul\":4733:4751   */\n  add\n    /* \"#utility.yul\":4725:4751   */\n  swap1\n  pop\n    /* \"#utility.yul\":4761:4832   */\n  tag_129\n    /* \"#utility.yul\":4829:4830   */\n  0x00\n    /* \"#utility.yul\":4818:4827   */\n  dup4\n    /* \"#utility.yul\":4814:4831   */\n  add\n    /* \"#utility.yul\":4805:4811   */\n  dup5\n    /* \"#utility.yul\":4761:4832   */\n  tag_49\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4617:4839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4845:4944   */\ntag_50:\n    /* \"#utility.yul\":4897:4903   */\n  0x00\n    /* \"#utility.yul\":4931:4936   */\n  dup2\n    /* \"#utility.yul\":4925:4937   */\n  mload\n    /* \"#utility.yul\":4915:4937   */\n  swap1\n  pop\n    /* \"#utility.yul\":4845:4944   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4950:5130   */\ntag_51:\n    /* \"#utility.yul\":4998:5075   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4995:4996   */\n  0x00\n    /* \"#utility.yul\":4988:5076   */\n  mstore\n    /* \"#utility.yul\":5095:5099   */\n  0x22\n    /* \"#utility.yul\":5092:5093   */\n  0x04\n    /* \"#utility.yul\":5085:5100   */\n  mstore\n    /* \"#utility.yul\":5119:5123   */\n  0x24\n    /* \"#utility.yul\":5116:5117   */\n  0x00\n    /* \"#utility.yul\":5109:5124   */\n  revert\n    /* \"#utility.yul\":5136:5456   */\ntag_52:\n    /* \"#utility.yul\":5180:5186   */\n  0x00\n    /* \"#utility.yul\":5217:5218   */\n  0x02\n    /* \"#utility.yul\":5211:5215   */\n  dup3\n    /* \"#utility.yul\":5207:5219   */\n  div\n    /* \"#utility.yul\":5197:5219   */\n  swap1\n  pop\n    /* \"#utility.yul\":5264:5265   */\n  0x01\n    /* \"#utility.yul\":5258:5262   */\n  dup3\n    /* \"#utility.yul\":5254:5266   */\n  and\n    /* \"#utility.yul\":5285:5303   */\n  dup1\n    /* \"#utility.yul\":5275:5356   */\n  tag_133\n  jumpi\n    /* \"#utility.yul\":5341:5345   */\n  0x7f\n    /* \"#utility.yul\":5333:5339   */\n  dup3\n    /* \"#utility.yul\":5329:5346   */\n  and\n    /* \"#utility.yul\":5319:5346   */\n  swap2\n  pop\n    /* \"#utility.yul\":5275:5356   */\ntag_133:\n    /* \"#utility.yul\":5403:5405   */\n  0x20\n    /* \"#utility.yul\":5395:5401   */\n  dup3\n    /* \"#utility.yul\":5392:5406   */\n  lt\n    /* \"#utility.yul\":5372:5390   */\n  dup2\n    /* \"#utility.yul\":5369:5407   */\n  sub\n    /* \"#utility.yul\":5366:5450   */\n  tag_134\n  jumpi\n    /* \"#utility.yul\":5422:5440   */\n  tag_135\n  tag_51\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5366:5450   */\ntag_134:\n    /* \"#utility.yul\":5187:5456   */\n  pop\n    /* \"#utility.yul\":5136:5456   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5462:5603   */\ntag_53:\n    /* \"#utility.yul\":5511:5515   */\n  0x00\n    /* \"#utility.yul\":5534:5537   */\n  dup2\n    /* \"#utility.yul\":5526:5537   */\n  swap1\n  pop\n    /* \"#utility.yul\":5557:5560   */\n  dup2\n    /* \"#utility.yul\":5554:5555   */\n  0x00\n    /* \"#utility.yul\":5547:5561   */\n  mstore\n    /* \"#utility.yul\":5591:5595   */\n  0x20\n    /* \"#utility.yul\":5588:5589   */\n  0x00\n    /* \"#utility.yul\":5578:5596   */\n  keccak256\n    /* \"#utility.yul\":5570:5596   */\n  swap1\n  pop\n    /* \"#utility.yul\":5462:5603   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5609:5702   */\ntag_54:\n    /* \"#utility.yul\":5646:5652   */\n  0x00\n    /* \"#utility.yul\":5693:5695   */\n  0x20\n    /* \"#utility.yul\":5688:5690   */\n  0x1f\n    /* \"#utility.yul\":5681:5686   */\n  dup4\n    /* \"#utility.yul\":5677:5691   */\n  add\n    /* \"#utility.yul\":5673:5696   */\n  div\n    /* \"#utility.yul\":5663:5696   */\n  swap1\n  pop\n    /* \"#utility.yul\":5609:5702   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5708:5815   */\ntag_55:\n    /* \"#utility.yul\":5752:5760   */\n  0x00\n    /* \"#utility.yul\":5802:5807   */\n  dup3\n    /* \"#utility.yul\":5796:5800   */\n  dup3\n    /* \"#utility.yul\":5792:5808   */\n  shl\n    /* \"#utility.yul\":5771:5808   */\n  swap1\n  pop\n    /* \"#utility.yul\":5708:5815   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5821:6214   */\ntag_56:\n    /* \"#utility.yul\":5890:5896   */\n  0x00\n    /* \"#utility.yul\":5940:5941   */\n  0x08\n    /* \"#utility.yul\":5928:5938   */\n  dup4\n    /* \"#utility.yul\":5924:5942   */\n  mul\n    /* \"#utility.yul\":5963:6060   */\n  tag_140\n    /* \"#utility.yul\":5993:6059   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5982:5991   */\n  dup3\n    /* \"#utility.yul\":5963:6060   */\n  tag_55\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6081:6120   */\n  tag_141\n    /* \"#utility.yul\":6111:6119   */\n  dup7\n    /* \"#utility.yul\":6100:6109   */\n  dup4\n    /* \"#utility.yul\":6081:6120   */\n  tag_55\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":6069:6120   */\n  swap6\n  pop\n    /* \"#utility.yul\":6153:6157   */\n  dup1\n    /* \"#utility.yul\":6149:6158   */\n  not\n    /* \"#utility.yul\":6142:6147   */\n  dup5\n    /* \"#utility.yul\":6138:6159   */\n  and\n    /* \"#utility.yul\":6129:6159   */\n  swap4\n  pop\n    /* \"#utility.yul\":6202:6206   */\n  dup1\n    /* \"#utility.yul\":6192:6200   */\n  dup7\n    /* \"#utility.yul\":6188:6207   */\n  and\n    /* \"#utility.yul\":6181:6186   */\n  dup5\n    /* \"#utility.yul\":6178:6208   */\n  or\n    /* \"#utility.yul\":6168:6208   */\n  swap3\n  pop\n    /* \"#utility.yul\":5897:6214   */\n  pop\n  pop\n    /* \"#utility.yul\":5821:6214   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6220:6280   */\ntag_57:\n    /* \"#utility.yul\":6248:6251   */\n  0x00\n    /* \"#utility.yul\":6269:6274   */\n  dup2\n    /* \"#utility.yul\":6262:6274   */\n  swap1\n  pop\n    /* \"#utility.yul\":6220:6280   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6286:6428   */\ntag_58:\n    /* \"#utility.yul\":6336:6345   */\n  0x00\n    /* \"#utility.yul\":6369:6422   */\n  tag_144\n    /* \"#utility.yul\":6387:6421   */\n  tag_145\n    /* \"#utility.yul\":6396:6420   */\n  tag_146\n    /* \"#utility.yul\":6414:6419   */\n  dup5\n    /* \"#utility.yul\":6396:6420   */\n  tag_44\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6387:6421   */\n  tag_57\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6369:6422   */\n  tag_44\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6356:6422   */\n  swap1\n  pop\n    /* \"#utility.yul\":6286:6428   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6434:6509   */\ntag_59:\n    /* \"#utility.yul\":6477:6480   */\n  0x00\n    /* \"#utility.yul\":6498:6503   */\n  dup2\n    /* \"#utility.yul\":6491:6503   */\n  swap1\n  pop\n    /* \"#utility.yul\":6434:6509   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6515:6784   */\ntag_60:\n    /* \"#utility.yul\":6625:6664   */\n  tag_149\n    /* \"#utility.yul\":6656:6663   */\n  dup4\n    /* \"#utility.yul\":6625:6664   */\n  tag_58\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6686:6777   */\n  tag_150\n    /* \"#utility.yul\":6735:6776   */\n  tag_151\n    /* \"#utility.yul\":6759:6775   */\n  dup3\n    /* \"#utility.yul\":6735:6776   */\n  tag_59\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6727:6733   */\n  dup5\n    /* \"#utility.yul\":6720:6724   */\n  dup5\n    /* \"#utility.yul\":6714:6725   */\n  sload\n    /* \"#utility.yul\":6686:6777   */\n  tag_56\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6680:6684   */\n  dup3\n    /* \"#utility.yul\":6673:6778   */\n  sstore\n    /* \"#utility.yul\":6591:6784   */\n  pop\n    /* \"#utility.yul\":6515:6784   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6790:6863   */\ntag_61:\n    /* \"#utility.yul\":6835:6838   */\n  0x00\n    /* \"#utility.yul\":6856:6857   */\n  0x00\n    /* \"#utility.yul\":6849:6857   */\n  swap1\n  pop\n    /* \"#utility.yul\":6790:6863   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6869:7058   */\ntag_62:\n    /* \"#utility.yul\":6946:6978   */\n  tag_154\n  tag_61\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6987:7052   */\n  tag_155\n    /* \"#utility.yul\":7045:7051   */\n  dup2\n    /* \"#utility.yul\":7037:7043   */\n  dup5\n    /* \"#utility.yul\":7031:7035   */\n  dup5\n    /* \"#utility.yul\":6987:7052   */\n  tag_60\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6922:7058   */\n  pop\n    /* \"#utility.yul\":6869:7058   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7064:7250   */\ntag_63:\n    /* \"#utility.yul\":7124:7244   */\ntag_157:\n    /* \"#utility.yul\":7141:7144   */\n  dup2\n    /* \"#utility.yul\":7134:7139   */\n  dup2\n    /* \"#utility.yul\":7131:7145   */\n  lt\n    /* \"#utility.yul\":7124:7244   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":7195:7234   */\n  tag_160\n    /* \"#utility.yul\":7232:7233   */\n  0x00\n    /* \"#utility.yul\":7225:7230   */\n  dup3\n    /* \"#utility.yul\":7195:7234   */\n  tag_62\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7168:7169   */\n  0x01\n    /* \"#utility.yul\":7161:7166   */\n  dup2\n    /* \"#utility.yul\":7157:7170   */\n  add\n    /* \"#utility.yul\":7148:7170   */\n  swap1\n  pop\n    /* \"#utility.yul\":7124:7244   */\n  jump(tag_157)\ntag_159:\n    /* \"#utility.yul\":7064:7250   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7256:7799   */\ntag_64:\n    /* \"#utility.yul\":7357:7359   */\n  0x1f\n    /* \"#utility.yul\":7352:7355   */\n  dup3\n    /* \"#utility.yul\":7349:7360   */\n  gt\n    /* \"#utility.yul\":7346:7792   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":7391:7429   */\n  tag_163\n    /* \"#utility.yul\":7423:7428   */\n  dup2\n    /* \"#utility.yul\":7391:7429   */\n  tag_53\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7475:7504   */\n  tag_164\n    /* \"#utility.yul\":7493:7503   */\n  dup5\n    /* \"#utility.yul\":7475:7504   */\n  tag_54\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7465:7473   */\n  dup2\n    /* \"#utility.yul\":7461:7505   */\n  add\n    /* \"#utility.yul\":7658:7660   */\n  0x20\n    /* \"#utility.yul\":7646:7656   */\n  dup6\n    /* \"#utility.yul\":7643:7661   */\n  lt\n    /* \"#utility.yul\":7640:7689   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":7679:7687   */\n  dup2\n    /* \"#utility.yul\":7664:7687   */\n  swap1\n  pop\n    /* \"#utility.yul\":7640:7689   */\ntag_165:\n    /* \"#utility.yul\":7702:7782   */\n  tag_166\n    /* \"#utility.yul\":7758:7780   */\n  tag_167\n    /* \"#utility.yul\":7776:7779   */\n  dup6\n    /* \"#utility.yul\":7758:7780   */\n  tag_54\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7748:7756   */\n  dup4\n    /* \"#utility.yul\":7744:7781   */\n  add\n    /* \"#utility.yul\":7731:7742   */\n  dup3\n    /* \"#utility.yul\":7702:7782   */\n  tag_63\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7361:7792   */\n  pop\n  pop\n    /* \"#utility.yul\":7346:7792   */\ntag_162:\n    /* \"#utility.yul\":7256:7799   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7805:7922   */\ntag_65:\n    /* \"#utility.yul\":7859:7867   */\n  0x00\n    /* \"#utility.yul\":7909:7914   */\n  dup3\n    /* \"#utility.yul\":7903:7907   */\n  dup3\n    /* \"#utility.yul\":7899:7915   */\n  shr\n    /* \"#utility.yul\":7878:7915   */\n  swap1\n  pop\n    /* \"#utility.yul\":7805:7922   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7928:8097   */\ntag_66:\n    /* \"#utility.yul\":7972:7978   */\n  0x00\n    /* \"#utility.yul\":8005:8056   */\n  tag_170\n    /* \"#utility.yul\":8053:8054   */\n  0x00\n    /* \"#utility.yul\":8049:8055   */\n  not\n    /* \"#utility.yul\":8041:8046   */\n  dup5\n    /* \"#utility.yul\":8038:8039   */\n  0x08\n    /* \"#utility.yul\":8034:8047   */\n  mul\n    /* \"#utility.yul\":8005:8056   */\n  tag_65\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":8001:8057   */\n  not\n    /* \"#utility.yul\":8086:8090   */\n  dup1\n    /* \"#utility.yul\":8080:8084   */\n  dup4\n    /* \"#utility.yul\":8076:8091   */\n  and\n    /* \"#utility.yul\":8066:8091   */\n  swap2\n  pop\n    /* \"#utility.yul\":7979:8097   */\n  pop\n    /* \"#utility.yul\":7928:8097   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8102:8397   */\ntag_67:\n    /* \"#utility.yul\":8178:8182   */\n  0x00\n    /* \"#utility.yul\":8324:8353   */\n  tag_172\n    /* \"#utility.yul\":8349:8352   */\n  dup4\n    /* \"#utility.yul\":8343:8347   */\n  dup4\n    /* \"#utility.yul\":8324:8353   */\n  tag_66\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8316:8353   */\n  swap2\n  pop\n    /* \"#utility.yul\":8386:8389   */\n  dup3\n    /* \"#utility.yul\":8383:8384   */\n  0x02\n    /* \"#utility.yul\":8379:8390   */\n  mul\n    /* \"#utility.yul\":8373:8377   */\n  dup3\n    /* \"#utility.yul\":8370:8391   */\n  or\n    /* \"#utility.yul\":8362:8391   */\n  swap1\n  pop\n    /* \"#utility.yul\":8102:8397   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8402:9797   */\ntag_17:\n    /* \"#utility.yul\":8519:8556   */\n  tag_174\n    /* \"#utility.yul\":8552:8555   */\n  dup3\n    /* \"#utility.yul\":8519:8556   */\n  tag_50\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8621:8639   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8613:8619   */\n  dup2\n    /* \"#utility.yul\":8610:8640   */\n  gt\n    /* \"#utility.yul\":8607:8663   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":8643:8661   */\n  tag_176\n  tag_37\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8607:8663   */\ntag_175:\n    /* \"#utility.yul\":8687:8725   */\n  tag_177\n    /* \"#utility.yul\":8719:8723   */\n  dup3\n    /* \"#utility.yul\":8713:8724   */\n  sload\n    /* \"#utility.yul\":8687:8725   */\n  tag_52\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8772:8839   */\n  tag_178\n    /* \"#utility.yul\":8832:8838   */\n  dup3\n    /* \"#utility.yul\":8824:8830   */\n  dup3\n    /* \"#utility.yul\":8818:8822   */\n  dup6\n    /* \"#utility.yul\":8772:8839   */\n  tag_64\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8866:8867   */\n  0x00\n    /* \"#utility.yul\":8890:8894   */\n  0x20\n    /* \"#utility.yul\":8877:8894   */\n  swap1\n  pop\n    /* \"#utility.yul\":8922:8924   */\n  0x1f\n    /* \"#utility.yul\":8914:8920   */\n  dup4\n    /* \"#utility.yul\":8911:8925   */\n  gt\n    /* \"#utility.yul\":8939:8940   */\n  0x01\n    /* \"#utility.yul\":8934:9552   */\n  dup2\n  eq\n  tag_180\n  jumpi\n    /* \"#utility.yul\":9596:9597   */\n  0x00\n    /* \"#utility.yul\":9613:9619   */\n  dup5\n    /* \"#utility.yul\":9610:9687   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":9662:9671   */\n  dup3\n    /* \"#utility.yul\":9657:9660   */\n  dup8\n    /* \"#utility.yul\":9653:9672   */\n  add\n    /* \"#utility.yul\":9647:9673   */\n  mload\n    /* \"#utility.yul\":9638:9673   */\n  swap1\n  pop\n    /* \"#utility.yul\":9610:9687   */\ntag_181:\n    /* \"#utility.yul\":9713:9780   */\n  tag_182\n    /* \"#utility.yul\":9773:9779   */\n  dup6\n    /* \"#utility.yul\":9766:9771   */\n  dup3\n    /* \"#utility.yul\":9713:9780   */\n  tag_67\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":9707:9711   */\n  dup7\n    /* \"#utility.yul\":9700:9781   */\n  sstore\n    /* \"#utility.yul\":9569:9791   */\n  pop\n    /* \"#utility.yul\":8904:9791   */\n  jump(tag_179)\n    /* \"#utility.yul\":8934:9552   */\ntag_180:\n    /* \"#utility.yul\":8986:8990   */\n  0x1f\n    /* \"#utility.yul\":8982:8991   */\n  not\n    /* \"#utility.yul\":8974:8980   */\n  dup5\n    /* \"#utility.yul\":8970:8992   */\n  and\n    /* \"#utility.yul\":9020:9057   */\n  tag_183\n    /* \"#utility.yul\":9052:9056   */\n  dup7\n    /* \"#utility.yul\":9020:9057   */\n  tag_53\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":9079:9080   */\n  0x00\n    /* \"#utility.yul\":9093:9301   */\ntag_184:\n    /* \"#utility.yul\":9107:9114   */\n  dup3\n    /* \"#utility.yul\":9104:9105   */\n  dup2\n    /* \"#utility.yul\":9101:9115   */\n  lt\n    /* \"#utility.yul\":9093:9301   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":9186:9195   */\n  dup5\n    /* \"#utility.yul\":9181:9184   */\n  dup10\n    /* \"#utility.yul\":9177:9196   */\n  add\n    /* \"#utility.yul\":9171:9197   */\n  mload\n    /* \"#utility.yul\":9163:9169   */\n  dup3\n    /* \"#utility.yul\":9156:9198   */\n  sstore\n    /* \"#utility.yul\":9237:9238   */\n  0x01\n    /* \"#utility.yul\":9229:9235   */\n  dup3\n    /* \"#utility.yul\":9225:9239   */\n  add\n    /* \"#utility.yul\":9215:9239   */\n  swap2\n  pop\n    /* \"#utility.yul\":9284:9286   */\n  0x20\n    /* \"#utility.yul\":9273:9282   */\n  dup6\n    /* \"#utility.yul\":9269:9287   */\n  add\n    /* \"#utility.yul\":9256:9287   */\n  swap5\n  pop\n    /* \"#utility.yul\":9130:9134   */\n  0x20\n    /* \"#utility.yul\":9127:9128   */\n  dup2\n    /* \"#utility.yul\":9123:9135   */\n  add\n    /* \"#utility.yul\":9118:9135   */\n  swap1\n  pop\n    /* \"#utility.yul\":9093:9301   */\n  jump(tag_184)\ntag_186:\n    /* \"#utility.yul\":9329:9335   */\n  dup7\n    /* \"#utility.yul\":9320:9327   */\n  dup4\n    /* \"#utility.yul\":9317:9336   */\n  lt\n    /* \"#utility.yul\":9314:9493   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":9387:9396   */\n  dup5\n    /* \"#utility.yul\":9382:9385   */\n  dup10\n    /* \"#utility.yul\":9378:9397   */\n  add\n    /* \"#utility.yul\":9372:9398   */\n  mload\n    /* \"#utility.yul\":9430:9478   */\n  tag_188\n    /* \"#utility.yul\":9472:9476   */\n  0x1f\n    /* \"#utility.yul\":9464:9470   */\n  dup10\n    /* \"#utility.yul\":9460:9477   */\n  and\n    /* \"#utility.yul\":9449:9458   */\n  dup3\n    /* \"#utility.yul\":9430:9478   */\n  tag_66\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9422:9428   */\n  dup4\n    /* \"#utility.yul\":9415:9479   */\n  sstore\n    /* \"#utility.yul\":9337:9493   */\n  pop\n    /* \"#utility.yul\":9314:9493   */\ntag_187:\n    /* \"#utility.yul\":9539:9540   */\n  0x01\n    /* \"#utility.yul\":9535:9536   */\n  0x02\n    /* \"#utility.yul\":9527:9533   */\n  dup9\n    /* \"#utility.yul\":9523:9537   */\n  mul\n    /* \"#utility.yul\":9519:9541   */\n  add\n    /* \"#utility.yul\":9513:9517   */\n  dup9\n    /* \"#utility.yul\":9506:9542   */\n  sstore\n    /* \"#utility.yul\":8941:9552   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8904:9791   */\ntag_179:\n  pop\n    /* \"#utility.yul\":8494:9797   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8402:9797   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9972   */\ntag_68:\n    /* \"#utility.yul\":9887:9898   */\n  0x00\n    /* \"#utility.yul\":9921:9927   */\n  dup3\n    /* \"#utility.yul\":9916:9919   */\n  dup3\n    /* \"#utility.yul\":9909:9928   */\n  mstore\n    /* \"#utility.yul\":9961:9965   */\n  0x20\n    /* \"#utility.yul\":9956:9959   */\n  dup3\n    /* \"#utility.yul\":9952:9966   */\n  add\n    /* \"#utility.yul\":9937:9966   */\n  swap1\n  pop\n    /* \"#utility.yul\":9803:9972   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9978:10155   */\ntag_69:\n    /* \"#utility.yul\":10118:10147   */\n  0x52617465206d7573742062652067726561746572207468616e20300000000000\n    /* \"#utility.yul\":10114:10115   */\n  0x00\n    /* \"#utility.yul\":10106:10112   */\n  dup3\n    /* \"#utility.yul\":10102:10116   */\n  add\n    /* \"#utility.yul\":10095:10148   */\n  mstore\n    /* \"#utility.yul\":9978:10155   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10161:10527   */\ntag_70:\n    /* \"#utility.yul\":10303:10306   */\n  0x00\n    /* \"#utility.yul\":10324:10391   */\n  tag_192\n    /* \"#utility.yul\":10388:10390   */\n  0x1b\n    /* \"#utility.yul\":10383:10386   */\n  dup4\n    /* \"#utility.yul\":10324:10391   */\n  tag_68\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":10317:10391   */\n  swap2\n  pop\n    /* \"#utility.yul\":10400:10493   */\n  tag_193\n    /* \"#utility.yul\":10489:10492   */\n  dup3\n    /* \"#utility.yul\":10400:10493   */\n  tag_69\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":10518:10520   */\n  0x20\n    /* \"#utility.yul\":10513:10516   */\n  dup3\n    /* \"#utility.yul\":10509:10521   */\n  add\n    /* \"#utility.yul\":10502:10521   */\n  swap1\n  pop\n    /* \"#utility.yul\":10161:10527   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10533:10952   */\ntag_22:\n    /* \"#utility.yul\":10699:10703   */\n  0x00\n    /* \"#utility.yul\":10737:10739   */\n  0x20\n    /* \"#utility.yul\":10726:10735   */\n  dup3\n    /* \"#utility.yul\":10722:10740   */\n  add\n    /* \"#utility.yul\":10714:10740   */\n  swap1\n  pop\n    /* \"#utility.yul\":10786:10795   */\n  dup2\n    /* \"#utility.yul\":10780:10784   */\n  dup2\n    /* \"#utility.yul\":10776:10796   */\n  sub\n    /* \"#utility.yul\":10772:10773   */\n  0x00\n    /* \"#utility.yul\":10761:10770   */\n  dup4\n    /* \"#utility.yul\":10757:10774   */\n  add\n    /* \"#utility.yul\":10750:10797   */\n  mstore\n    /* \"#utility.yul\":10814:10945   */\n  tag_195\n    /* \"#utility.yul\":10940:10944   */\n  dup2\n    /* \"#utility.yul\":10814:10945   */\n  tag_70\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":10806:10945   */\n  swap1\n  pop\n    /* \"#utility.yul\":10533:10952   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10958:11135   */\ntag_71:\n    /* \"#utility.yul\":11098:11127   */\n  0x476f616c206d7573742062652067726561746572207468616e20300000000000\n    /* \"#utility.yul\":11094:11095   */\n  0x00\n    /* \"#utility.yul\":11086:11092   */\n  dup3\n    /* \"#utility.yul\":11082:11096   */\n  add\n    /* \"#utility.yul\":11075:11128   */\n  mstore\n    /* \"#utility.yul\":10958:11135   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11141:11507   */\ntag_72:\n    /* \"#utility.yul\":11283:11286   */\n  0x00\n    /* \"#utility.yul\":11304:11371   */\n  tag_198\n    /* \"#utility.yul\":11368:11370   */\n  0x1b\n    /* \"#utility.yul\":11363:11366   */\n  dup4\n    /* \"#utility.yul\":11304:11371   */\n  tag_68\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":11297:11371   */\n  swap2\n  pop\n    /* \"#utility.yul\":11380:11473   */\n  tag_199\n    /* \"#utility.yul\":11469:11472   */\n  dup3\n    /* \"#utility.yul\":11380:11473   */\n  tag_71\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":11498:11500   */\n  0x20\n    /* \"#utility.yul\":11493:11496   */\n  dup3\n    /* \"#utility.yul\":11489:11501   */\n  add\n    /* \"#utility.yul\":11482:11501   */\n  swap1\n  pop\n    /* \"#utility.yul\":11141:11507   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11513:11932   */\ntag_25:\n    /* \"#utility.yul\":11679:11683   */\n  0x00\n    /* \"#utility.yul\":11717:11719   */\n  0x20\n    /* \"#utility.yul\":11706:11715   */\n  dup3\n    /* \"#utility.yul\":11702:11720   */\n  add\n    /* \"#utility.yul\":11694:11720   */\n  swap1\n  pop\n    /* \"#utility.yul\":11766:11775   */\n  dup2\n    /* \"#utility.yul\":11760:11764   */\n  dup2\n    /* \"#utility.yul\":11756:11776   */\n  sub\n    /* \"#utility.yul\":11752:11753   */\n  0x00\n    /* \"#utility.yul\":11741:11750   */\n  dup4\n    /* \"#utility.yul\":11737:11754   */\n  add\n    /* \"#utility.yul\":11730:11777   */\n  mstore\n    /* \"#utility.yul\":11794:11925   */\n  tag_201\n    /* \"#utility.yul\":11920:11924   */\n  dup2\n    /* \"#utility.yul\":11794:11925   */\n  tag_72\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":11786:11925   */\n  swap1\n  pop\n    /* \"#utility.yul\":11513:11932   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11938:12110   */\ntag_73:\n    /* \"#utility.yul\":12078:12102   */\n  0x566f7465732070657263656e74206d6178203130302500000000000000000000\n    /* \"#utility.yul\":12074:12075   */\n  0x00\n    /* \"#utility.yul\":12066:12072   */\n  dup3\n    /* \"#utility.yul\":12062:12076   */\n  add\n    /* \"#utility.yul\":12055:12103   */\n  mstore\n    /* \"#utility.yul\":11938:12110   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12116:12482   */\ntag_74:\n    /* \"#utility.yul\":12258:12261   */\n  0x00\n    /* \"#utility.yul\":12279:12346   */\n  tag_204\n    /* \"#utility.yul\":12343:12345   */\n  0x16\n    /* \"#utility.yul\":12338:12341   */\n  dup4\n    /* \"#utility.yul\":12279:12346   */\n  tag_68\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":12272:12346   */\n  swap2\n  pop\n    /* \"#utility.yul\":12355:12448   */\n  tag_205\n    /* \"#utility.yul\":12444:12447   */\n  dup3\n    /* \"#utility.yul\":12355:12448   */\n  tag_73\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":12473:12475   */\n  0x20\n    /* \"#utility.yul\":12468:12471   */\n  dup3\n    /* \"#utility.yul\":12464:12476   */\n  add\n    /* \"#utility.yul\":12457:12476   */\n  swap1\n  pop\n    /* \"#utility.yul\":12116:12482   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12488:12907   */\ntag_28:\n    /* \"#utility.yul\":12654:12658   */\n  0x00\n    /* \"#utility.yul\":12692:12694   */\n  0x20\n    /* \"#utility.yul\":12681:12690   */\n  dup3\n    /* \"#utility.yul\":12677:12695   */\n  add\n    /* \"#utility.yul\":12669:12695   */\n  swap1\n  pop\n    /* \"#utility.yul\":12741:12750   */\n  dup2\n    /* \"#utility.yul\":12735:12739   */\n  dup2\n    /* \"#utility.yul\":12731:12751   */\n  sub\n    /* \"#utility.yul\":12727:12728   */\n  0x00\n    /* \"#utility.yul\":12716:12725   */\n  dup4\n    /* \"#utility.yul\":12712:12729   */\n  add\n    /* \"#utility.yul\":12705:12752   */\n  mstore\n    /* \"#utility.yul\":12769:12900   */\n  tag_207\n    /* \"#utility.yul\":12895:12899   */\n  dup2\n    /* \"#utility.yul\":12769:12900   */\n  tag_74\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":12761:12900   */\n  swap1\n  pop\n    /* \"#utility.yul\":12488:12907   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"D/decentralized autonomous initial coin offering.sol\":297:3871  contract DAICO is Ownable, ReentrancyGuard, ERC20 {... */\ntag_29:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"D/decentralized autonomous initial coin offering.sol\":297:3871  contract DAICO is Ownable, ReentrancyGuard, ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x636d6c9d\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd7bb99ba\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x94b6a4b8\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_29:\n      dup1\n      0x636d6c9d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6681b9fd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7a3a0e84\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8b7afe2e\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_28:\n      dup1\n      0x24600fc3\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x3e186253\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x3e186253\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3fc5144e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x42e94c90\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5ec1cfb7\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x24600fc3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2c4e722e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x09eef43e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0d15fd77\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralized autonomous initial coin offering.sol\":612:652  mapping(address => bool) public hasVoted */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      revert(0x00, 0x00)\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralized autonomous initial coin offering.sol\":658:683  uint256 public totalVotes */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      revert(0x00, 0x00)\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      revert(0x00, 0x00)\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      revert(0x00, 0x00)\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralized autonomous initial coin offering.sol\":2690:3225  function withdrawFunds() external onlyOwner nonReentrant {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      revert(0x00, 0x00)\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"D/decentralized autonomous initial coin offering.sol\":353:372  uint256 public rate */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      revert(0x00, 0x00)\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      revert(0x00, 0x00)\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralized autonomous initial coin offering.sol\":3282:3467  function hasEnoughVotes() public view returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      revert(0x00, 0x00)\n    tag_78:\n      pop\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralized autonomous initial coin offering.sol\":3534:3711  function endFundingManually() external onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      revert(0x00, 0x00)\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      stop\n        /* \"D/decentralized autonomous initial coin offering.sol\":533:581  mapping(address => uint256) public contributions */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      revert(0x00, 0x00)\n    tag_85:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralized autonomous initial coin offering.sol\":689:727  uint256 public requiredVotesPercentage */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      revert(0x00, 0x00)\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralized autonomous initial coin offering.sol\":461:488  bool public isFundingActive */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      revert(0x00, 0x00)\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralized autonomous initial coin offering.sol\":429:455  uint256 public fundsRaised */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      revert(0x00, 0x00)\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      revert(0x00, 0x00)\n    tag_102:\n      pop\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      revert(0x00, 0x00)\n    tag_107:\n      pop\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      stop\n        /* \"D/decentralized autonomous initial coin offering.sol\":397:423  uint256 public fundingGoal */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      revert(0x00, 0x00)\n    tag_110:\n      pop\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralized autonomous initial coin offering.sol\":3765:3869  function contractBalance() external view returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      revert(0x00, 0x00)\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      revert(0x00, 0x00)\n    tag_118:\n      pop\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralized autonomous initial coin offering.sol\":2295:2602  function voteForFundRelease() external nonReentrant {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      revert(0x00, 0x00)\n    tag_123:\n      pop\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      revert(0x00, 0x00)\n    tag_126:\n      pop\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      revert(0x00, 0x00)\n    tag_130:\n      pop\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralized autonomous initial coin offering.sol\":1676:2222  function contribute() external payable nonReentrant {... */\n    tag_25:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      revert(0x00, 0x00)\n    tag_137:\n      pop\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      tag_141\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      revert(0x00, 0x00)\n    tag_143:\n      pop\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n    tag_144:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_149\n      jump\t// in\n    tag_150:\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"D/decentralized autonomous initial coin offering.sol\":612:652  mapping(address => bool) public hasVoted */\n    tag_49:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"D/decentralized autonomous initial coin offering.sol\":658:683  uint256 public totalVotes */\n    tag_53:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x04)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"D/decentralized autonomous initial coin offering.sol\":2690:3225  function withdrawFunds() external onlyOwner nonReentrant {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_170\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_171\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_170:\n        /* \"D/decentralized autonomous initial coin offering.sol\":2766:2781  isFundingActive */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"D/decentralized autonomous initial coin offering.sol\":2765:2781  !isFundingActive */\n      iszero\n        /* \"D/decentralized autonomous initial coin offering.sol\":2757:2806  require(!isFundingActive, \"Funding still active\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"D/decentralized autonomous initial coin offering.sol\":2816:2837  uint256 requiredVotes */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":2882:2887  10000 */\n      0x2710\n        /* \"D/decentralized autonomous initial coin offering.sol\":2855:2878  requiredVotesPercentage */\n      sload(0x0e)\n        /* \"D/decentralized autonomous initial coin offering.sol\":2841:2852  fundsRaised */\n      sload(0x09)\n        /* \"D/decentralized autonomous initial coin offering.sol\":2841:2878  fundsRaised * requiredVotesPercentage */\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"D/decentralized autonomous initial coin offering.sol\":2840:2887  (fundsRaised * requiredVotesPercentage) / 10000 */\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"D/decentralized autonomous initial coin offering.sol\":2816:2887  uint256 requiredVotes = (fundsRaised * requiredVotesPercentage) / 10000 */\n      swap1\n      pop\n        /* \"D/decentralized autonomous initial coin offering.sol\":2919:2932  requiredVotes */\n      dup1\n        /* \"D/decentralized autonomous initial coin offering.sol\":2905:2915  totalVotes */\n      sload(0x0d)\n        /* \"D/decentralized autonomous initial coin offering.sol\":2905:2932  totalVotes >= requiredVotes */\n      lt\n      iszero\n        /* \"D/decentralized autonomous initial coin offering.sol\":2897:2953  require(totalVotes >= requiredVotes, \"Not enough votes\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"D/decentralized autonomous initial coin offering.sol\":2964:2978  uint256 amount */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":2981:3002  address(this).balance */\n      selfbalance\n        /* \"D/decentralized autonomous initial coin offering.sol\":2964:3002  uint256 amount = address(this).balance */\n      swap1\n      pop\n        /* \"D/decentralized autonomous initial coin offering.sol\":3029:3030  0 */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":3020:3026  amount */\n      dup2\n        /* \"D/decentralized autonomous initial coin offering.sol\":3020:3030  amount > 0 */\n      gt\n        /* \"D/decentralized autonomous initial coin offering.sol\":3012:3055  require(amount > 0, \"No funds to withdraw\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"D/decentralized autonomous initial coin offering.sol\":3067:3079  bool success */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":3092:3099  owner() */\n      tag_186\n        /* \"D/decentralized autonomous initial coin offering.sol\":3092:3097  owner */\n      tag_120\n        /* \"D/decentralized autonomous initial coin offering.sol\":3092:3099  owner() */\n      jump\t// in\n    tag_186:\n        /* \"D/decentralized autonomous initial coin offering.sol\":3084:3105  payable(owner()).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/decentralized autonomous initial coin offering.sol\":3113:3119  amount */\n      dup3\n        /* \"D/decentralized autonomous initial coin offering.sol\":3084:3124  payable(owner()).call{value: amount}(\"\") */\n      mload(0x40)\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_191\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_190)\n    tag_191:\n      0x60\n      swap2\n      pop\n    tag_190:\n      pop\n        /* \"D/decentralized autonomous initial coin offering.sol\":3066:3124  (bool success,) = payable(owner()).call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"D/decentralized autonomous initial coin offering.sol\":3142:3149  success */\n      dup1\n        /* \"D/decentralized autonomous initial coin offering.sol\":3134:3171  require(success, \"Withdrawal failed\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"D/decentralized autonomous initial coin offering.sol\":3202:3209  owner() */\n      tag_195\n        /* \"D/decentralized autonomous initial coin offering.sol\":3202:3207  owner */\n      tag_120\n        /* \"D/decentralized autonomous initial coin offering.sol\":3202:3209  owner() */\n      jump\t// in\n    tag_195:\n        /* \"D/decentralized autonomous initial coin offering.sol\":3187:3218  FundsWithdrawn(owner(), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xeaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d\n        /* \"D/decentralized autonomous initial coin offering.sol\":3211:3217  amount */\n      dup4\n        /* \"D/decentralized autonomous initial coin offering.sol\":3187:3218  FundsWithdrawn(owner(), amount) */\n      mload(0x40)\n      tag_196\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"D/decentralized autonomous initial coin offering.sol\":2747:3225  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_197\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_198\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_197:\n        /* \"D/decentralized autonomous initial coin offering.sol\":2690:3225  function withdrawFunds() external onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"D/decentralized autonomous initial coin offering.sol\":353:372  uint256 public rate */\n    tag_71:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"D/decentralized autonomous initial coin offering.sol\":3282:3467  function hasEnoughVotes() public view returns (bool) {... */\n    tag_80:\n        /* \"D/decentralized autonomous initial coin offering.sol\":3329:3333  bool */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":3345:3366  uint256 requiredVotes */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":3411:3416  10000 */\n      0x2710\n        /* \"D/decentralized autonomous initial coin offering.sol\":3384:3407  requiredVotesPercentage */\n      sload(0x0e)\n        /* \"D/decentralized autonomous initial coin offering.sol\":3370:3381  fundsRaised */\n      sload(0x09)\n        /* \"D/decentralized autonomous initial coin offering.sol\":3370:3407  fundsRaised * requiredVotesPercentage */\n      tag_201\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_201:\n        /* \"D/decentralized autonomous initial coin offering.sol\":3369:3416  (fundsRaised * requiredVotesPercentage) / 10000 */\n      tag_202\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_202:\n        /* \"D/decentralized autonomous initial coin offering.sol\":3345:3416  uint256 requiredVotes = (fundsRaised * requiredVotesPercentage) / 10000 */\n      swap1\n      pop\n        /* \"D/decentralized autonomous initial coin offering.sol\":3447:3460  requiredVotes */\n      dup1\n        /* \"D/decentralized autonomous initial coin offering.sol\":3433:3443  totalVotes */\n      sload(0x0d)\n        /* \"D/decentralized autonomous initial coin offering.sol\":3433:3460  totalVotes >= requiredVotes */\n      lt\n      iszero\n        /* \"D/decentralized autonomous initial coin offering.sol\":3426:3460  return totalVotes >= requiredVotes */\n      swap2\n      pop\n      pop\n        /* \"D/decentralized autonomous initial coin offering.sol\":3282:3467  function hasEnoughVotes() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"D/decentralized autonomous initial coin offering.sol\":3534:3711  function endFundingManually() external onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_204:\n        /* \"D/decentralized autonomous initial coin offering.sol\":3601:3616  isFundingActive */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"D/decentralized autonomous initial coin offering.sol\":3593:3642  require(isFundingActive, \"Funding already ended\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"D/decentralized autonomous initial coin offering.sol\":3670:3675  false */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":3652:3667  isFundingActive */\n      0x0a\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":3652:3675  isFundingActive = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"D/decentralized autonomous initial coin offering.sol\":3690:3704  FundingEnded() */\n      0xbdc0e037eadb8b0c782400faf1b352631d6cd8bdf086c0e7eb0028e210041dc9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"D/decentralized autonomous initial coin offering.sol\":3534:3711  function endFundingManually() external onlyOwner {... */\n      jump\t// out\n        /* \"D/decentralized autonomous initial coin offering.sol\":533:581  mapping(address => uint256) public contributions */\n    tag_88:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"D/decentralized autonomous initial coin offering.sol\":689:727  uint256 public requiredVotesPercentage */\n    tag_92:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"D/decentralized autonomous initial coin offering.sol\":461:488  bool public isFundingActive */\n    tag_96:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"D/decentralized autonomous initial coin offering.sol\":429:455  uint256 public fundsRaised */\n    tag_100:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_214\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"D/decentralized autonomous initial coin offering.sol\":397:423  uint256 public fundingGoal */\n    tag_112:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"D/decentralized autonomous initial coin offering.sol\":3765:3869  function contractBalance() external view returns (uint256) {... */\n    tag_116:\n        /* \"D/decentralized autonomous initial coin offering.sol\":3815:3822  uint256 */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":3841:3862  address(this).balance */\n      selfbalance\n        /* \"D/decentralized autonomous initial coin offering.sol\":3834:3862  return address(this).balance */\n      swap1\n      pop\n        /* \"D/decentralized autonomous initial coin offering.sol\":3765:3869  function contractBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"D/decentralized autonomous initial coin offering.sol\":2295:2602  function voteForFundRelease() external nonReentrant {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_218\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_171\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_218:\n        /* \"D/decentralized autonomous initial coin offering.sol\":2393:2394  0 */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":2365:2378  contributions */\n      0x0b\n        /* \"D/decentralized autonomous initial coin offering.sol\":2365:2390  contributions[msg.sender] */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":2379:2389  msg.sender */\n      caller\n        /* \"D/decentralized autonomous initial coin offering.sol\":2365:2390  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"D/decentralized autonomous initial coin offering.sol\":2365:2394  contributions[msg.sender] > 0 */\n      gt\n        /* \"D/decentralized autonomous initial coin offering.sol\":2357:2418  require(contributions[msg.sender] > 0, \"Must be an investor\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"D/decentralized autonomous initial coin offering.sol\":2437:2445  hasVoted */\n      0x0c\n        /* \"D/decentralized autonomous initial coin offering.sol\":2437:2457  hasVoted[msg.sender] */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":2446:2456  msg.sender */\n      caller\n        /* \"D/decentralized autonomous initial coin offering.sol\":2437:2457  hasVoted[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"D/decentralized autonomous initial coin offering.sol\":2436:2457  !hasVoted[msg.sender] */\n      iszero\n        /* \"D/decentralized autonomous initial coin offering.sol\":2428:2475  require(!hasVoted[msg.sender], \"Already voted\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"D/decentralized autonomous initial coin offering.sol\":2509:2513  true */\n      0x01\n        /* \"D/decentralized autonomous initial coin offering.sol\":2486:2494  hasVoted */\n      0x0c\n        /* \"D/decentralized autonomous initial coin offering.sol\":2486:2506  hasVoted[msg.sender] */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":2495:2505  msg.sender */\n      caller\n        /* \"D/decentralized autonomous initial coin offering.sol\":2486:2506  hasVoted[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":2486:2513  hasVoted[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"D/decentralized autonomous initial coin offering.sol\":2537:2550  contributions */\n      0x0b\n        /* \"D/decentralized autonomous initial coin offering.sol\":2537:2562  contributions[msg.sender] */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":2551:2561  msg.sender */\n      caller\n        /* \"D/decentralized autonomous initial coin offering.sol\":2537:2562  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"D/decentralized autonomous initial coin offering.sol\":2523:2533  totalVotes */\n      0x0d\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":2523:2562  totalVotes += contributions[msg.sender] */\n      dup3\n      dup3\n      sload\n      tag_226\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"D/decentralized autonomous initial coin offering.sol\":2584:2594  msg.sender */\n      caller\n        /* \"D/decentralized autonomous initial coin offering.sol\":2578:2595  Voted(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x16a9aa39af49f169911e977347975198c503525f7240d6892a626f0227642fce\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_228\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_198\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_228:\n        /* \"D/decentralized autonomous initial coin offering.sol\":2295:2602  function voteForFundRelease() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_230\n      swap1\n      tag_149\n      jump\t// in\n    tag_230:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_231\n      swap1\n      tag_149\n      jump\t// in\n    tag_231:\n      dup1\n      iszero\n      tag_232\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_233\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_232)\n    tag_233:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_234:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_234\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_232:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"D/decentralized autonomous initial coin offering.sol\":1676:2222  function contribute() external payable nonReentrant {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_239\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_171\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_239:\n        /* \"D/decentralized autonomous initial coin offering.sol\":1746:1761  isFundingActive */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"D/decentralized autonomous initial coin offering.sol\":1738:1783  require(isFundingActive, \"Funding is closed\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"D/decentralized autonomous initial coin offering.sol\":1813:1814  0 */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":1801:1810  msg.value */\n      callvalue\n        /* \"D/decentralized autonomous initial coin offering.sol\":1801:1814  msg.value > 0 */\n      gt\n        /* \"D/decentralized autonomous initial coin offering.sol\":1793:1854  require(msg.value > 0, \"Contribution must be greater than 0\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"D/decentralized autonomous initial coin offering.sol\":1865:1885  uint256 tokensToMint */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":1900:1904  rate */\n      sload(0x07)\n        /* \"D/decentralized autonomous initial coin offering.sol\":1888:1897  msg.value */\n      callvalue\n        /* \"D/decentralized autonomous initial coin offering.sol\":1888:1904  msg.value * rate */\n      tag_247\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_247:\n        /* \"D/decentralized autonomous initial coin offering.sol\":1865:1904  uint256 tokensToMint = msg.value * rate */\n      swap1\n      pop\n        /* \"D/decentralized autonomous initial coin offering.sol\":1943:1952  msg.value */\n      callvalue\n        /* \"D/decentralized autonomous initial coin offering.sol\":1914:1927  contributions */\n      0x0b\n        /* \"D/decentralized autonomous initial coin offering.sol\":1914:1939  contributions[msg.sender] */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":1928:1938  msg.sender */\n      caller\n        /* \"D/decentralized autonomous initial coin offering.sol\":1914:1939  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":1914:1952  contributions[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_248\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_248:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"D/decentralized autonomous initial coin offering.sol\":1977:1986  msg.value */\n      callvalue\n        /* \"D/decentralized autonomous initial coin offering.sol\":1962:1973  fundsRaised */\n      0x09\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":1962:1986  fundsRaised += msg.value */\n      dup3\n      dup3\n      sload\n      tag_249\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_249:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"D/decentralized autonomous initial coin offering.sol\":1997:2028  _mint(msg.sender, tokensToMint) */\n      tag_250\n        /* \"D/decentralized autonomous initial coin offering.sol\":2003:2013  msg.sender */\n      caller\n        /* \"D/decentralized autonomous initial coin offering.sol\":2015:2027  tokensToMint */\n      dup3\n        /* \"D/decentralized autonomous initial coin offering.sol\":1997:2002  _mint */\n      tag_251\n        /* \"D/decentralized autonomous initial coin offering.sol\":1997:2028  _mint(msg.sender, tokensToMint) */\n      jump\t// in\n    tag_250:\n        /* \"D/decentralized autonomous initial coin offering.sol\":2056:2066  msg.sender */\n      caller\n        /* \"D/decentralized autonomous initial coin offering.sol\":2043:2092  Contribution(msg.sender, msg.value, tokensToMint) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5f7675b09617d2c9fa4fd13058ee5877a9538f626b0308816736e83748a45040\n        /* \"D/decentralized autonomous initial coin offering.sol\":2068:2077  msg.value */\n      callvalue\n        /* \"D/decentralized autonomous initial coin offering.sol\":2079:2091  tokensToMint */\n      dup4\n        /* \"D/decentralized autonomous initial coin offering.sol\":2043:2092  Contribution(msg.sender, msg.value, tokensToMint) */\n      mload(0x40)\n      tag_252\n      swap3\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"D/decentralized autonomous initial coin offering.sol\":2122:2133  fundingGoal */\n      sload(0x08)\n        /* \"D/decentralized autonomous initial coin offering.sol\":2107:2118  fundsRaised */\n      sload(0x09)\n        /* \"D/decentralized autonomous initial coin offering.sol\":2107:2133  fundsRaised >= fundingGoal */\n      lt\n        /* \"D/decentralized autonomous initial coin offering.sol\":2103:2216  if (fundsRaised >= fundingGoal) {... */\n      tag_254\n      jumpi\n        /* \"D/decentralized autonomous initial coin offering.sol\":2167:2172  false */\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":2149:2164  isFundingActive */\n      0x0a\n      0x00\n        /* \"D/decentralized autonomous initial coin offering.sol\":2149:2172  isFundingActive = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"D/decentralized autonomous initial coin offering.sol\":2191:2205  FundingEnded() */\n      0xbdc0e037eadb8b0c782400faf1b352631d6cd8bdf086c0e7eb0028e210041dc9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"D/decentralized autonomous initial coin offering.sol\":2103:2216  if (fundsRaised >= fundingGoal) {... */\n    tag_254:\n        /* \"D/decentralized autonomous initial coin offering.sol\":1728:2222  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_255\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_198\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_255:\n        /* \"D/decentralized autonomous initial coin offering.sol\":1676:2222  function contribute() external payable nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_214\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_279\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_282\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_283\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_285\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_303\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x04\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_306\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_306:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_307)\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x04\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_311)\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_312\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_313:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_314:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_315:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_316:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_317:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_366\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_313\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":711:782   */\n      tag_367\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_314\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_368\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_315\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":881:910   */\n      tag_369\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_316\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_37:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_371\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_317\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_319:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_321:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_322:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_377\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_321\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_323:\n        /* \"#utility.yul\":1876:1900   */\n      tag_379\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_322\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_380:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_324:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_382\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_323\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_325:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_326:\n        /* \"#utility.yul\":2232:2256   */\n      tag_385\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_325\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_386:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_327:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_388\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_326\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_41:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_391\n      tag_319\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":2525:2644   */\n    tag_390:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_392\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_324\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_393\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_327\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_328:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_329:\n        /* \"#utility.yul\":3089:3110   */\n      tag_396\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_328\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_44:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_398\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_329\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3668   */\n    tag_48:\n        /* \"#utility.yul\":3398:3404   */\n      0x00\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3435:3444   */\n      dup3\n        /* \"#utility.yul\":3426:3433   */\n      dup5\n        /* \"#utility.yul\":3422:3445   */\n      sub\n        /* \"#utility.yul\":3418:3450   */\n      slt\n        /* \"#utility.yul\":3415:3534   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":3453:3532   */\n      tag_401\n      tag_319\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":3415:3534   */\n    tag_400:\n        /* \"#utility.yul\":3573:3574   */\n      0x00\n        /* \"#utility.yul\":3598:3651   */\n      tag_402\n        /* \"#utility.yul\":3643:3650   */\n      dup5\n        /* \"#utility.yul\":3634:3640   */\n      dup3\n        /* \"#utility.yul\":3623:3632   */\n      dup6\n        /* \"#utility.yul\":3619:3641   */\n      add\n        /* \"#utility.yul\":3598:3651   */\n      tag_324\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3588:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3544:3661   */\n      pop\n        /* \"#utility.yul\":3339:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:3792   */\n    tag_330:\n        /* \"#utility.yul\":3761:3785   */\n      tag_404\n        /* \"#utility.yul\":3779:3784   */\n      dup2\n        /* \"#utility.yul\":3761:3785   */\n      tag_325\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3756:3759   */\n      dup3\n        /* \"#utility.yul\":3749:3786   */\n      mstore\n        /* \"#utility.yul\":3674:3792   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4020   */\n    tag_55:\n        /* \"#utility.yul\":3891:3895   */\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x20\n        /* \"#utility.yul\":3918:3927   */\n      dup3\n        /* \"#utility.yul\":3914:3932   */\n      add\n        /* \"#utility.yul\":3906:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3942:4013   */\n      tag_406\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3942:4013   */\n      tag_330\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3798:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_63:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      0x00\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_409\n      tag_319\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":4136:4255   */\n    tag_408:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_410\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_324\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_411\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_324\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_412\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_327\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_331:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_332:\n        /* \"#utility.yul\":4826:4848   */\n      tag_415\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_331\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_77:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_417\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_332\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_333:\n        /* \"#utility.yul\":5168:5192   */\n      tag_419\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_322\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_122:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_421\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_333\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_140:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      0x00\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_424\n      tag_319\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5526:5645   */\n    tag_423:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_425\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_324\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_426\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_324\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_334:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_149:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_429:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_431\n      tag_334\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6329:6413   */\n    tag_430:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6595   */\n    tag_335:\n        /* \"#utility.yul\":6565:6587   */\n      0x46756e64696e67207374696c6c20616374697665000000000000000000000000\n        /* \"#utility.yul\":6561:6562   */\n      0x00\n        /* \"#utility.yul\":6553:6559   */\n      dup3\n        /* \"#utility.yul\":6549:6563   */\n      add\n        /* \"#utility.yul\":6542:6588   */\n      mstore\n        /* \"#utility.yul\":6425:6595   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6601:6967   */\n    tag_336:\n        /* \"#utility.yul\":6743:6746   */\n      0x00\n        /* \"#utility.yul\":6764:6831   */\n      tag_434\n        /* \"#utility.yul\":6828:6830   */\n      0x14\n        /* \"#utility.yul\":6823:6826   */\n      dup4\n        /* \"#utility.yul\":6764:6831   */\n      tag_314\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6757:6831   */\n      swap2\n      pop\n        /* \"#utility.yul\":6840:6933   */\n      tag_435\n        /* \"#utility.yul\":6929:6932   */\n      dup3\n        /* \"#utility.yul\":6840:6933   */\n      tag_335\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":6958:6960   */\n      0x20\n        /* \"#utility.yul\":6953:6956   */\n      dup3\n        /* \"#utility.yul\":6949:6961   */\n      add\n        /* \"#utility.yul\":6942:6961   */\n      swap1\n      pop\n        /* \"#utility.yul\":6601:6967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6973:7392   */\n    tag_175:\n        /* \"#utility.yul\":7139:7143   */\n      0x00\n        /* \"#utility.yul\":7177:7179   */\n      0x20\n        /* \"#utility.yul\":7166:7175   */\n      dup3\n        /* \"#utility.yul\":7162:7180   */\n      add\n        /* \"#utility.yul\":7154:7180   */\n      swap1\n      pop\n        /* \"#utility.yul\":7226:7235   */\n      dup2\n        /* \"#utility.yul\":7220:7224   */\n      dup2\n        /* \"#utility.yul\":7216:7236   */\n      sub\n        /* \"#utility.yul\":7212:7213   */\n      0x00\n        /* \"#utility.yul\":7201:7210   */\n      dup4\n        /* \"#utility.yul\":7197:7214   */\n      add\n        /* \"#utility.yul\":7190:7237   */\n      mstore\n        /* \"#utility.yul\":7254:7385   */\n      tag_437\n        /* \"#utility.yul\":7380:7384   */\n      dup2\n        /* \"#utility.yul\":7254:7385   */\n      tag_336\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":7246:7385   */\n      swap1\n      pop\n        /* \"#utility.yul\":6973:7392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7398:7578   */\n    tag_337:\n        /* \"#utility.yul\":7446:7523   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7443:7444   */\n      0x00\n        /* \"#utility.yul\":7436:7524   */\n      mstore\n        /* \"#utility.yul\":7543:7547   */\n      0x11\n        /* \"#utility.yul\":7540:7541   */\n      0x04\n        /* \"#utility.yul\":7533:7548   */\n      mstore\n        /* \"#utility.yul\":7567:7571   */\n      0x24\n        /* \"#utility.yul\":7564:7565   */\n      0x00\n        /* \"#utility.yul\":7557:7572   */\n      revert\n        /* \"#utility.yul\":7584:7994   */\n    tag_177:\n        /* \"#utility.yul\":7624:7631   */\n      0x00\n        /* \"#utility.yul\":7647:7667   */\n      tag_440\n        /* \"#utility.yul\":7665:7666   */\n      dup3\n        /* \"#utility.yul\":7647:7667   */\n      tag_325\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7642:7667   */\n      swap2\n      pop\n        /* \"#utility.yul\":7681:7701   */\n      tag_441\n        /* \"#utility.yul\":7699:7700   */\n      dup4\n        /* \"#utility.yul\":7681:7701   */\n      tag_325\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":7676:7701   */\n      swap3\n      pop\n        /* \"#utility.yul\":7736:7737   */\n      dup3\n        /* \"#utility.yul\":7733:7734   */\n      dup3\n        /* \"#utility.yul\":7729:7738   */\n      mul\n        /* \"#utility.yul\":7758:7788   */\n      tag_442\n        /* \"#utility.yul\":7776:7787   */\n      dup2\n        /* \"#utility.yul\":7758:7788   */\n      tag_325\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":7747:7788   */\n      swap2\n      pop\n        /* \"#utility.yul\":7937:7938   */\n      dup3\n        /* \"#utility.yul\":7928:7935   */\n      dup3\n        /* \"#utility.yul\":7924:7939   */\n      div\n        /* \"#utility.yul\":7921:7922   */\n      dup5\n        /* \"#utility.yul\":7918:7940   */\n      eq\n        /* \"#utility.yul\":7898:7899   */\n      dup4\n        /* \"#utility.yul\":7891:7900   */\n      iszero\n        /* \"#utility.yul\":7871:7954   */\n      or\n        /* \"#utility.yul\":7848:7987   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":7967:7985   */\n      tag_444\n      tag_337\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":7848:7987   */\n    tag_443:\n        /* \"#utility.yul\":7632:7994   */\n      pop\n        /* \"#utility.yul\":7584:7994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8000:8180   */\n    tag_338:\n        /* \"#utility.yul\":8048:8125   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8045:8046   */\n      0x00\n        /* \"#utility.yul\":8038:8126   */\n      mstore\n        /* \"#utility.yul\":8145:8149   */\n      0x12\n        /* \"#utility.yul\":8142:8143   */\n      0x04\n        /* \"#utility.yul\":8135:8150   */\n      mstore\n        /* \"#utility.yul\":8169:8173   */\n      0x24\n        /* \"#utility.yul\":8166:8167   */\n      0x00\n        /* \"#utility.yul\":8159:8174   */\n      revert\n        /* \"#utility.yul\":8186:8371   */\n    tag_179:\n        /* \"#utility.yul\":8226:8227   */\n      0x00\n        /* \"#utility.yul\":8243:8263   */\n      tag_447\n        /* \"#utility.yul\":8261:8262   */\n      dup3\n        /* \"#utility.yul\":8243:8263   */\n      tag_325\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":8238:8263   */\n      swap2\n      pop\n        /* \"#utility.yul\":8277:8297   */\n      tag_448\n        /* \"#utility.yul\":8295:8296   */\n      dup4\n        /* \"#utility.yul\":8277:8297   */\n      tag_325\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":8272:8297   */\n      swap3\n      pop\n        /* \"#utility.yul\":8316:8317   */\n      dup3\n        /* \"#utility.yul\":8306:8341   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":8321:8339   */\n      tag_450\n      tag_338\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":8306:8341   */\n    tag_449:\n        /* \"#utility.yul\":8363:8364   */\n      dup3\n        /* \"#utility.yul\":8360:8361   */\n      dup3\n        /* \"#utility.yul\":8356:8365   */\n      div\n        /* \"#utility.yul\":8351:8365   */\n      swap1\n      pop\n        /* \"#utility.yul\":8186:8371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8377:8543   */\n    tag_339:\n        /* \"#utility.yul\":8517:8535   */\n      0x4e6f7420656e6f75676820766f74657300000000000000000000000000000000\n        /* \"#utility.yul\":8513:8514   */\n      0x00\n        /* \"#utility.yul\":8505:8511   */\n      dup3\n        /* \"#utility.yul\":8501:8515   */\n      add\n        /* \"#utility.yul\":8494:8536   */\n      mstore\n        /* \"#utility.yul\":8377:8543   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8549:8915   */\n    tag_340:\n        /* \"#utility.yul\":8691:8694   */\n      0x00\n        /* \"#utility.yul\":8712:8779   */\n      tag_453\n        /* \"#utility.yul\":8776:8778   */\n      0x10\n        /* \"#utility.yul\":8771:8774   */\n      dup4\n        /* \"#utility.yul\":8712:8779   */\n      tag_314\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8705:8779   */\n      swap2\n      pop\n        /* \"#utility.yul\":8788:8881   */\n      tag_454\n        /* \"#utility.yul\":8877:8880   */\n      dup3\n        /* \"#utility.yul\":8788:8881   */\n      tag_339\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":8906:8908   */\n      0x20\n        /* \"#utility.yul\":8901:8904   */\n      dup3\n        /* \"#utility.yul\":8897:8909   */\n      add\n        /* \"#utility.yul\":8890:8909   */\n      swap1\n      pop\n        /* \"#utility.yul\":8549:8915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8921:9340   */\n    tag_182:\n        /* \"#utility.yul\":9087:9091   */\n      0x00\n        /* \"#utility.yul\":9125:9127   */\n      0x20\n        /* \"#utility.yul\":9114:9123   */\n      dup3\n        /* \"#utility.yul\":9110:9128   */\n      add\n        /* \"#utility.yul\":9102:9128   */\n      swap1\n      pop\n        /* \"#utility.yul\":9174:9183   */\n      dup2\n        /* \"#utility.yul\":9168:9172   */\n      dup2\n        /* \"#utility.yul\":9164:9184   */\n      sub\n        /* \"#utility.yul\":9160:9161   */\n      0x00\n        /* \"#utility.yul\":9149:9158   */\n      dup4\n        /* \"#utility.yul\":9145:9162   */\n      add\n        /* \"#utility.yul\":9138:9185   */\n      mstore\n        /* \"#utility.yul\":9202:9333   */\n      tag_456\n        /* \"#utility.yul\":9328:9332   */\n      dup2\n        /* \"#utility.yul\":9202:9333   */\n      tag_340\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":9194:9333   */\n      swap1\n      pop\n        /* \"#utility.yul\":8921:9340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9346:9516   */\n    tag_341:\n        /* \"#utility.yul\":9486:9508   */\n      0x4e6f2066756e647320746f207769746864726177000000000000000000000000\n        /* \"#utility.yul\":9482:9483   */\n      0x00\n        /* \"#utility.yul\":9474:9480   */\n      dup3\n        /* \"#utility.yul\":9470:9484   */\n      add\n        /* \"#utility.yul\":9463:9509   */\n      mstore\n        /* \"#utility.yul\":9346:9516   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9522:9888   */\n    tag_342:\n        /* \"#utility.yul\":9664:9667   */\n      0x00\n        /* \"#utility.yul\":9685:9752   */\n      tag_459\n        /* \"#utility.yul\":9749:9751   */\n      0x14\n        /* \"#utility.yul\":9744:9747   */\n      dup4\n        /* \"#utility.yul\":9685:9752   */\n      tag_314\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":9678:9752   */\n      swap2\n      pop\n        /* \"#utility.yul\":9761:9854   */\n      tag_460\n        /* \"#utility.yul\":9850:9853   */\n      dup3\n        /* \"#utility.yul\":9761:9854   */\n      tag_341\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":9879:9881   */\n      0x20\n        /* \"#utility.yul\":9874:9877   */\n      dup3\n        /* \"#utility.yul\":9870:9882   */\n      add\n        /* \"#utility.yul\":9863:9882   */\n      swap1\n      pop\n        /* \"#utility.yul\":9522:9888   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9894:10313   */\n    tag_185:\n        /* \"#utility.yul\":10060:10064   */\n      0x00\n        /* \"#utility.yul\":10098:10100   */\n      0x20\n        /* \"#utility.yul\":10087:10096   */\n      dup3\n        /* \"#utility.yul\":10083:10101   */\n      add\n        /* \"#utility.yul\":10075:10101   */\n      swap1\n      pop\n        /* \"#utility.yul\":10147:10156   */\n      dup2\n        /* \"#utility.yul\":10141:10145   */\n      dup2\n        /* \"#utility.yul\":10137:10157   */\n      sub\n        /* \"#utility.yul\":10133:10134   */\n      0x00\n        /* \"#utility.yul\":10122:10131   */\n      dup4\n        /* \"#utility.yul\":10118:10135   */\n      add\n        /* \"#utility.yul\":10111:10158   */\n      mstore\n        /* \"#utility.yul\":10175:10306   */\n      tag_462\n        /* \"#utility.yul\":10301:10305   */\n      dup2\n        /* \"#utility.yul\":10175:10306   */\n      tag_342\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":10167:10306   */\n      swap1\n      pop\n        /* \"#utility.yul\":9894:10313   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10319:10466   */\n    tag_343:\n        /* \"#utility.yul\":10420:10431   */\n      0x00\n        /* \"#utility.yul\":10457:10460   */\n      dup2\n        /* \"#utility.yul\":10442:10460   */\n      swap1\n      pop\n        /* \"#utility.yul\":10319:10466   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10472:10586   */\n    tag_344:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10592:10990   */\n    tag_345:\n        /* \"#utility.yul\":10751:10754   */\n      0x00\n        /* \"#utility.yul\":10772:10855   */\n      tag_466\n        /* \"#utility.yul\":10853:10854   */\n      0x00\n        /* \"#utility.yul\":10848:10851   */\n      dup4\n        /* \"#utility.yul\":10772:10855   */\n      tag_343\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":10765:10855   */\n      swap2\n      pop\n        /* \"#utility.yul\":10864:10957   */\n      tag_467\n        /* \"#utility.yul\":10953:10956   */\n      dup3\n        /* \"#utility.yul\":10864:10957   */\n      tag_344\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10982:10983   */\n      0x00\n        /* \"#utility.yul\":10977:10980   */\n      dup3\n        /* \"#utility.yul\":10973:10984   */\n      add\n        /* \"#utility.yul\":10966:10984   */\n      swap1\n      pop\n        /* \"#utility.yul\":10592:10990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10996:11375   */\n    tag_188:\n        /* \"#utility.yul\":11180:11183   */\n      0x00\n        /* \"#utility.yul\":11202:11349   */\n      tag_469\n        /* \"#utility.yul\":11345:11348   */\n      dup3\n        /* \"#utility.yul\":11202:11349   */\n      tag_345\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":11195:11349   */\n      swap2\n      pop\n        /* \"#utility.yul\":11366:11369   */\n      dup2\n        /* \"#utility.yul\":11359:11369   */\n      swap1\n      pop\n        /* \"#utility.yul\":10996:11375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11381:11548   */\n    tag_346:\n        /* \"#utility.yul\":11521:11540   */\n      0x5769746864726177616c206661696c6564000000000000000000000000000000\n        /* \"#utility.yul\":11517:11518   */\n      0x00\n        /* \"#utility.yul\":11509:11515   */\n      dup3\n        /* \"#utility.yul\":11505:11519   */\n      add\n        /* \"#utility.yul\":11498:11541   */\n      mstore\n        /* \"#utility.yul\":11381:11548   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11554:11920   */\n    tag_347:\n        /* \"#utility.yul\":11696:11699   */\n      0x00\n        /* \"#utility.yul\":11717:11784   */\n      tag_472\n        /* \"#utility.yul\":11781:11783   */\n      0x11\n        /* \"#utility.yul\":11776:11779   */\n      dup4\n        /* \"#utility.yul\":11717:11784   */\n      tag_314\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":11710:11784   */\n      swap2\n      pop\n        /* \"#utility.yul\":11793:11886   */\n      tag_473\n        /* \"#utility.yul\":11882:11885   */\n      dup3\n        /* \"#utility.yul\":11793:11886   */\n      tag_346\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":11911:11913   */\n      0x20\n        /* \"#utility.yul\":11906:11909   */\n      dup3\n        /* \"#utility.yul\":11902:11914   */\n      add\n        /* \"#utility.yul\":11895:11914   */\n      swap1\n      pop\n        /* \"#utility.yul\":11554:11920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11926:12345   */\n    tag_194:\n        /* \"#utility.yul\":12092:12096   */\n      0x00\n        /* \"#utility.yul\":12130:12132   */\n      0x20\n        /* \"#utility.yul\":12119:12128   */\n      dup3\n        /* \"#utility.yul\":12115:12133   */\n      add\n        /* \"#utility.yul\":12107:12133   */\n      swap1\n      pop\n        /* \"#utility.yul\":12179:12188   */\n      dup2\n        /* \"#utility.yul\":12173:12177   */\n      dup2\n        /* \"#utility.yul\":12169:12189   */\n      sub\n        /* \"#utility.yul\":12165:12166   */\n      0x00\n        /* \"#utility.yul\":12154:12163   */\n      dup4\n        /* \"#utility.yul\":12150:12167   */\n      add\n        /* \"#utility.yul\":12143:12190   */\n      mstore\n        /* \"#utility.yul\":12207:12338   */\n      tag_475\n        /* \"#utility.yul\":12333:12337   */\n      dup2\n        /* \"#utility.yul\":12207:12338   */\n      tag_347\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":12199:12338   */\n      swap1\n      pop\n        /* \"#utility.yul\":11926:12345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12351:12522   */\n    tag_348:\n        /* \"#utility.yul\":12491:12514   */\n      0x46756e64696e6720616c726561647920656e6465640000000000000000000000\n        /* \"#utility.yul\":12487:12488   */\n      0x00\n        /* \"#utility.yul\":12479:12485   */\n      dup3\n        /* \"#utility.yul\":12475:12489   */\n      add\n        /* \"#utility.yul\":12468:12515   */\n      mstore\n        /* \"#utility.yul\":12351:12522   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12528:12894   */\n    tag_349:\n        /* \"#utility.yul\":12670:12673   */\n      0x00\n        /* \"#utility.yul\":12691:12758   */\n      tag_478\n        /* \"#utility.yul\":12755:12757   */\n      0x15\n        /* \"#utility.yul\":12750:12753   */\n      dup4\n        /* \"#utility.yul\":12691:12758   */\n      tag_314\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":12684:12758   */\n      swap2\n      pop\n        /* \"#utility.yul\":12767:12860   */\n      tag_479\n        /* \"#utility.yul\":12856:12859   */\n      dup3\n        /* \"#utility.yul\":12767:12860   */\n      tag_348\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":12885:12887   */\n      0x20\n        /* \"#utility.yul\":12880:12883   */\n      dup3\n        /* \"#utility.yul\":12876:12888   */\n      add\n        /* \"#utility.yul\":12869:12888   */\n      swap1\n      pop\n        /* \"#utility.yul\":12528:12894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12900:13319   */\n    tag_208:\n        /* \"#utility.yul\":13066:13070   */\n      0x00\n        /* \"#utility.yul\":13104:13106   */\n      0x20\n        /* \"#utility.yul\":13093:13102   */\n      dup3\n        /* \"#utility.yul\":13089:13107   */\n      add\n        /* \"#utility.yul\":13081:13107   */\n      swap1\n      pop\n        /* \"#utility.yul\":13153:13162   */\n      dup2\n        /* \"#utility.yul\":13147:13151   */\n      dup2\n        /* \"#utility.yul\":13143:13163   */\n      sub\n        /* \"#utility.yul\":13139:13140   */\n      0x00\n        /* \"#utility.yul\":13128:13137   */\n      dup4\n        /* \"#utility.yul\":13124:13141   */\n      add\n        /* \"#utility.yul\":13117:13164   */\n      mstore\n        /* \"#utility.yul\":13181:13312   */\n      tag_481\n        /* \"#utility.yul\":13307:13311   */\n      dup2\n        /* \"#utility.yul\":13181:13312   */\n      tag_349\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":13173:13312   */\n      swap1\n      pop\n        /* \"#utility.yul\":12900:13319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13325:13494   */\n    tag_350:\n        /* \"#utility.yul\":13465:13486   */\n      0x4d75737420626520616e20696e766573746f7200000000000000000000000000\n        /* \"#utility.yul\":13461:13462   */\n      0x00\n        /* \"#utility.yul\":13453:13459   */\n      dup3\n        /* \"#utility.yul\":13449:13463   */\n      add\n        /* \"#utility.yul\":13442:13487   */\n      mstore\n        /* \"#utility.yul\":13325:13494   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13500:13866   */\n    tag_351:\n        /* \"#utility.yul\":13642:13645   */\n      0x00\n        /* \"#utility.yul\":13663:13730   */\n      tag_484\n        /* \"#utility.yul\":13727:13729   */\n      0x13\n        /* \"#utility.yul\":13722:13725   */\n      dup4\n        /* \"#utility.yul\":13663:13730   */\n      tag_314\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":13656:13730   */\n      swap2\n      pop\n        /* \"#utility.yul\":13739:13832   */\n      tag_485\n        /* \"#utility.yul\":13828:13831   */\n      dup3\n        /* \"#utility.yul\":13739:13832   */\n      tag_350\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":13857:13859   */\n      0x20\n        /* \"#utility.yul\":13852:13855   */\n      dup3\n        /* \"#utility.yul\":13848:13860   */\n      add\n        /* \"#utility.yul\":13841:13860   */\n      swap1\n      pop\n        /* \"#utility.yul\":13500:13866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13872:14291   */\n    tag_222:\n        /* \"#utility.yul\":14038:14042   */\n      0x00\n        /* \"#utility.yul\":14076:14078   */\n      0x20\n        /* \"#utility.yul\":14065:14074   */\n      dup3\n        /* \"#utility.yul\":14061:14079   */\n      add\n        /* \"#utility.yul\":14053:14079   */\n      swap1\n      pop\n        /* \"#utility.yul\":14125:14134   */\n      dup2\n        /* \"#utility.yul\":14119:14123   */\n      dup2\n        /* \"#utility.yul\":14115:14135   */\n      sub\n        /* \"#utility.yul\":14111:14112   */\n      0x00\n        /* \"#utility.yul\":14100:14109   */\n      dup4\n        /* \"#utility.yul\":14096:14113   */\n      add\n        /* \"#utility.yul\":14089:14136   */\n      mstore\n        /* \"#utility.yul\":14153:14284   */\n      tag_487\n        /* \"#utility.yul\":14279:14283   */\n      dup2\n        /* \"#utility.yul\":14153:14284   */\n      tag_351\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":14145:14284   */\n      swap1\n      pop\n        /* \"#utility.yul\":13872:14291   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14297:14460   */\n    tag_352:\n        /* \"#utility.yul\":14437:14452   */\n      0x416c726561647920766f74656400000000000000000000000000000000000000\n        /* \"#utility.yul\":14433:14434   */\n      0x00\n        /* \"#utility.yul\":14425:14431   */\n      dup3\n        /* \"#utility.yul\":14421:14435   */\n      add\n        /* \"#utility.yul\":14414:14453   */\n      mstore\n        /* \"#utility.yul\":14297:14460   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14466:14832   */\n    tag_353:\n        /* \"#utility.yul\":14608:14611   */\n      0x00\n        /* \"#utility.yul\":14629:14696   */\n      tag_490\n        /* \"#utility.yul\":14693:14695   */\n      0x0d\n        /* \"#utility.yul\":14688:14691   */\n      dup4\n        /* \"#utility.yul\":14629:14696   */\n      tag_314\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":14622:14696   */\n      swap2\n      pop\n        /* \"#utility.yul\":14705:14798   */\n      tag_491\n        /* \"#utility.yul\":14794:14797   */\n      dup3\n        /* \"#utility.yul\":14705:14798   */\n      tag_352\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":14823:14825   */\n      0x20\n        /* \"#utility.yul\":14818:14821   */\n      dup3\n        /* \"#utility.yul\":14814:14826   */\n      add\n        /* \"#utility.yul\":14807:14826   */\n      swap1\n      pop\n        /* \"#utility.yul\":14466:14832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14838:15257   */\n    tag_225:\n        /* \"#utility.yul\":15004:15008   */\n      0x00\n        /* \"#utility.yul\":15042:15044   */\n      0x20\n        /* \"#utility.yul\":15031:15040   */\n      dup3\n        /* \"#utility.yul\":15027:15045   */\n      add\n        /* \"#utility.yul\":15019:15045   */\n      swap1\n      pop\n        /* \"#utility.yul\":15091:15100   */\n      dup2\n        /* \"#utility.yul\":15085:15089   */\n      dup2\n        /* \"#utility.yul\":15081:15101   */\n      sub\n        /* \"#utility.yul\":15077:15078   */\n      0x00\n        /* \"#utility.yul\":15066:15075   */\n      dup4\n        /* \"#utility.yul\":15062:15079   */\n      add\n        /* \"#utility.yul\":15055:15102   */\n      mstore\n        /* \"#utility.yul\":15119:15250   */\n      tag_493\n        /* \"#utility.yul\":15245:15249   */\n      dup2\n        /* \"#utility.yul\":15119:15250   */\n      tag_353\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":15111:15250   */\n      swap1\n      pop\n        /* \"#utility.yul\":14838:15257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15263:15454   */\n    tag_227:\n        /* \"#utility.yul\":15303:15306   */\n      0x00\n        /* \"#utility.yul\":15322:15342   */\n      tag_495\n        /* \"#utility.yul\":15340:15341   */\n      dup3\n        /* \"#utility.yul\":15322:15342   */\n      tag_325\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":15317:15342   */\n      swap2\n      pop\n        /* \"#utility.yul\":15356:15376   */\n      tag_496\n        /* \"#utility.yul\":15374:15375   */\n      dup4\n        /* \"#utility.yul\":15356:15376   */\n      tag_325\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":15351:15376   */\n      swap3\n      pop\n        /* \"#utility.yul\":15399:15400   */\n      dup3\n        /* \"#utility.yul\":15396:15397   */\n      dup3\n        /* \"#utility.yul\":15392:15401   */\n      add\n        /* \"#utility.yul\":15385:15401   */\n      swap1\n      pop\n        /* \"#utility.yul\":15420:15423   */\n      dup1\n        /* \"#utility.yul\":15417:15418   */\n      dup3\n        /* \"#utility.yul\":15414:15424   */\n      gt\n        /* \"#utility.yul\":15411:15447   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":15427:15445   */\n      tag_498\n      tag_337\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":15411:15447   */\n    tag_497:\n        /* \"#utility.yul\":15263:15454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15460:15627   */\n    tag_354:\n        /* \"#utility.yul\":15600:15619   */\n      0x46756e64696e6720697320636c6f736564000000000000000000000000000000\n        /* \"#utility.yul\":15596:15597   */\n      0x00\n        /* \"#utility.yul\":15588:15594   */\n      dup3\n        /* \"#utility.yul\":15584:15598   */\n      add\n        /* \"#utility.yul\":15577:15620   */\n      mstore\n        /* \"#utility.yul\":15460:15627   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15633:15999   */\n    tag_355:\n        /* \"#utility.yul\":15775:15778   */\n      0x00\n        /* \"#utility.yul\":15796:15863   */\n      tag_501\n        /* \"#utility.yul\":15860:15862   */\n      0x11\n        /* \"#utility.yul\":15855:15858   */\n      dup4\n        /* \"#utility.yul\":15796:15863   */\n      tag_314\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":15789:15863   */\n      swap2\n      pop\n        /* \"#utility.yul\":15872:15965   */\n      tag_502\n        /* \"#utility.yul\":15961:15964   */\n      dup3\n        /* \"#utility.yul\":15872:15965   */\n      tag_354\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":15990:15992   */\n      0x20\n        /* \"#utility.yul\":15985:15988   */\n      dup3\n        /* \"#utility.yul\":15981:15993   */\n      add\n        /* \"#utility.yul\":15974:15993   */\n      swap1\n      pop\n        /* \"#utility.yul\":15633:15999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16005:16424   */\n    tag_243:\n        /* \"#utility.yul\":16171:16175   */\n      0x00\n        /* \"#utility.yul\":16209:16211   */\n      0x20\n        /* \"#utility.yul\":16198:16207   */\n      dup3\n        /* \"#utility.yul\":16194:16212   */\n      add\n        /* \"#utility.yul\":16186:16212   */\n      swap1\n      pop\n        /* \"#utility.yul\":16258:16267   */\n      dup2\n        /* \"#utility.yul\":16252:16256   */\n      dup2\n        /* \"#utility.yul\":16248:16268   */\n      sub\n        /* \"#utility.yul\":16244:16245   */\n      0x00\n        /* \"#utility.yul\":16233:16242   */\n      dup4\n        /* \"#utility.yul\":16229:16246   */\n      add\n        /* \"#utility.yul\":16222:16269   */\n      mstore\n        /* \"#utility.yul\":16286:16417   */\n      tag_504\n        /* \"#utility.yul\":16412:16416   */\n      dup2\n        /* \"#utility.yul\":16286:16417   */\n      tag_355\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":16278:16417   */\n      swap1\n      pop\n        /* \"#utility.yul\":16005:16424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16430:16652   */\n    tag_356:\n        /* \"#utility.yul\":16570:16604   */\n      0x436f6e747269627574696f6e206d757374206265206772656174657220746861\n        /* \"#utility.yul\":16566:16567   */\n      0x00\n        /* \"#utility.yul\":16558:16564   */\n      dup3\n        /* \"#utility.yul\":16554:16568   */\n      add\n        /* \"#utility.yul\":16547:16605   */\n      mstore\n        /* \"#utility.yul\":16639:16644   */\n      0x6e20300000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16634:16636   */\n      0x20\n        /* \"#utility.yul\":16626:16632   */\n      dup3\n        /* \"#utility.yul\":16622:16637   */\n      add\n        /* \"#utility.yul\":16615:16645   */\n      mstore\n        /* \"#utility.yul\":16430:16652   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16658:17024   */\n    tag_357:\n        /* \"#utility.yul\":16800:16803   */\n      0x00\n        /* \"#utility.yul\":16821:16888   */\n      tag_507\n        /* \"#utility.yul\":16885:16887   */\n      0x23\n        /* \"#utility.yul\":16880:16883   */\n      dup4\n        /* \"#utility.yul\":16821:16888   */\n      tag_314\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":16814:16888   */\n      swap2\n      pop\n        /* \"#utility.yul\":16897:16990   */\n      tag_508\n        /* \"#utility.yul\":16986:16989   */\n      dup3\n        /* \"#utility.yul\":16897:16990   */\n      tag_356\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":17015:17017   */\n      0x40\n        /* \"#utility.yul\":17010:17013   */\n      dup3\n        /* \"#utility.yul\":17006:17018   */\n      add\n        /* \"#utility.yul\":16999:17018   */\n      swap1\n      pop\n        /* \"#utility.yul\":16658:17024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17030:17449   */\n    tag_246:\n        /* \"#utility.yul\":17196:17200   */\n      0x00\n        /* \"#utility.yul\":17234:17236   */\n      0x20\n        /* \"#utility.yul\":17223:17232   */\n      dup3\n        /* \"#utility.yul\":17219:17237   */\n      add\n        /* \"#utility.yul\":17211:17237   */\n      swap1\n      pop\n        /* \"#utility.yul\":17283:17292   */\n      dup2\n        /* \"#utility.yul\":17277:17281   */\n      dup2\n        /* \"#utility.yul\":17273:17293   */\n      sub\n        /* \"#utility.yul\":17269:17270   */\n      0x00\n        /* \"#utility.yul\":17258:17267   */\n      dup4\n        /* \"#utility.yul\":17254:17271   */\n      add\n        /* \"#utility.yul\":17247:17294   */\n      mstore\n        /* \"#utility.yul\":17311:17442   */\n      tag_510\n        /* \"#utility.yul\":17437:17441   */\n      dup2\n        /* \"#utility.yul\":17311:17442   */\n      tag_357\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":17303:17442   */\n      swap1\n      pop\n        /* \"#utility.yul\":17030:17449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17455:17787   */\n    tag_253:\n        /* \"#utility.yul\":17576:17580   */\n      0x00\n        /* \"#utility.yul\":17614:17616   */\n      0x40\n        /* \"#utility.yul\":17603:17612   */\n      dup3\n        /* \"#utility.yul\":17599:17617   */\n      add\n        /* \"#utility.yul\":17591:17617   */\n      swap1\n      pop\n        /* \"#utility.yul\":17627:17698   */\n      tag_512\n        /* \"#utility.yul\":17695:17696   */\n      0x00\n        /* \"#utility.yul\":17684:17693   */\n      dup4\n        /* \"#utility.yul\":17680:17697   */\n      add\n        /* \"#utility.yul\":17671:17677   */\n      dup6\n        /* \"#utility.yul\":17627:17698   */\n      tag_330\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":17708:17780   */\n      tag_513\n        /* \"#utility.yul\":17776:17778   */\n      0x20\n        /* \"#utility.yul\":17765:17774   */\n      dup4\n        /* \"#utility.yul\":17761:17779   */\n      add\n        /* \"#utility.yul\":17752:17758   */\n      dup5\n        /* \"#utility.yul\":17708:17780   */\n      tag_330\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":17455:17787   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17793:18235   */\n    tag_272:\n        /* \"#utility.yul\":17942:17946   */\n      0x00\n        /* \"#utility.yul\":17980:17982   */\n      0x60\n        /* \"#utility.yul\":17969:17978   */\n      dup3\n        /* \"#utility.yul\":17965:17983   */\n      add\n        /* \"#utility.yul\":17957:17983   */\n      swap1\n      pop\n        /* \"#utility.yul\":17993:18064   */\n      tag_515\n        /* \"#utility.yul\":18061:18062   */\n      0x00\n        /* \"#utility.yul\":18050:18059   */\n      dup4\n        /* \"#utility.yul\":18046:18063   */\n      add\n        /* \"#utility.yul\":18037:18043   */\n      dup7\n        /* \"#utility.yul\":17993:18064   */\n      tag_333\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":18074:18146   */\n      tag_516\n        /* \"#utility.yul\":18142:18144   */\n      0x20\n        /* \"#utility.yul\":18131:18140   */\n      dup4\n        /* \"#utility.yul\":18127:18145   */\n      add\n        /* \"#utility.yul\":18118:18124   */\n      dup6\n        /* \"#utility.yul\":18074:18146   */\n      tag_330\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":18156:18228   */\n      tag_517\n        /* \"#utility.yul\":18224:18226   */\n      0x40\n        /* \"#utility.yul\":18213:18222   */\n      dup4\n        /* \"#utility.yul\":18209:18227   */\n      add\n        /* \"#utility.yul\":18200:18206   */\n      dup5\n        /* \"#utility.yul\":18156:18228   */\n      tag_330\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":17793:18235   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18241:18422   */\n    tag_358:\n        /* \"#utility.yul\":18381:18414   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":18377:18378   */\n      0x00\n        /* \"#utility.yul\":18369:18375   */\n      dup3\n        /* \"#utility.yul\":18365:18379   */\n      add\n        /* \"#utility.yul\":18358:18415   */\n      mstore\n        /* \"#utility.yul\":18241:18422   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18428:18794   */\n    tag_359:\n        /* \"#utility.yul\":18570:18573   */\n      0x00\n        /* \"#utility.yul\":18591:18658   */\n      tag_520\n        /* \"#utility.yul\":18655:18657   */\n      0x1f\n        /* \"#utility.yul\":18650:18653   */\n      dup4\n        /* \"#utility.yul\":18591:18658   */\n      tag_314\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":18584:18658   */\n      swap2\n      pop\n        /* \"#utility.yul\":18667:18760   */\n      tag_521\n        /* \"#utility.yul\":18756:18759   */\n      dup3\n        /* \"#utility.yul\":18667:18760   */\n      tag_358\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":18785:18787   */\n      0x20\n        /* \"#utility.yul\":18780:18783   */\n      dup3\n        /* \"#utility.yul\":18776:18788   */\n      add\n        /* \"#utility.yul\":18769:18788   */\n      swap1\n      pop\n        /* \"#utility.yul\":18428:18794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18800:19219   */\n    tag_290:\n        /* \"#utility.yul\":18966:18970   */\n      0x00\n        /* \"#utility.yul\":19004:19006   */\n      0x20\n        /* \"#utility.yul\":18993:19002   */\n      dup3\n        /* \"#utility.yul\":18989:19007   */\n      add\n        /* \"#utility.yul\":18981:19007   */\n      swap1\n      pop\n        /* \"#utility.yul\":19053:19062   */\n      dup2\n        /* \"#utility.yul\":19047:19051   */\n      dup2\n        /* \"#utility.yul\":19043:19063   */\n      sub\n        /* \"#utility.yul\":19039:19040   */\n      0x00\n        /* \"#utility.yul\":19028:19037   */\n      dup4\n        /* \"#utility.yul\":19024:19041   */\n      add\n        /* \"#utility.yul\":19017:19064   */\n      mstore\n        /* \"#utility.yul\":19081:19212   */\n      tag_523\n        /* \"#utility.yul\":19207:19211   */\n      dup2\n        /* \"#utility.yul\":19081:19212   */\n      tag_359\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":19073:19212   */\n      swap1\n      pop\n        /* \"#utility.yul\":18800:19219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ec25427f5b9c2f019666777f7e0e1efcdb41cc01abe12224aa28cad73530977b64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1111": {
									"entryPoint": null,
									"id": 1111,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 479,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_3eec5ea7df2a12f583914e102495bcafa3fc3cef4a94e2c61ffa2c353d218bf4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7977cdfba43fb9b628861f8e33ea39f553cef52b55bd95c7f09cb24b3debdba5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec035aef93e96c874fc3fa49bb31f557de90808da7ce462b3778578c4850131e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3eec5ea7df2a12f583914e102495bcafa3fc3cef4a94e2c61ffa2c353d218bf4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7977cdfba43fb9b628861f8e33ea39f553cef52b55bd95c7f09cb24b3debdba5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec035aef93e96c874fc3fa49bb31f557de90808da7ce462b3778578c4850131e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1701,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 713,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_3eec5ea7df2a12f583914e102495bcafa3fc3cef4a94e2c61ffa2c353d218bf4": {
									"entryPoint": 2061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7977cdfba43fb9b628861f8e33ea39f553cef52b55bd95c7f09cb24b3debdba5": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec035aef93e96c874fc3fa49bb31f557de90808da7ce462b3778578c4850131e": {
									"entryPoint": 2165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1467,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1599,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1636,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12910:8",
										"nodeType": "YulBlock",
										"src": "0:12910:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "423:28:8",
													"nodeType": "YulBlock",
													"src": "423:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:8",
																		"nodeType": "YulLiteral",
																		"src": "440:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:8",
																		"nodeType": "YulLiteral",
																		"src": "443:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:8"
																},
																"nativeSrc": "433:12:8",
																"nodeType": "YulFunctionCall",
																"src": "433:12:8"
															},
															"nativeSrc": "433:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:8"
											},
											{
												"body": {
													"nativeSrc": "546:28:8",
													"nodeType": "YulBlock",
													"src": "546:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:8",
																		"nodeType": "YulLiteral",
																		"src": "563:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:8",
																		"nodeType": "YulLiteral",
																		"src": "566:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:8"
																},
																"nativeSrc": "556:12:8",
																"nodeType": "YulFunctionCall",
																"src": "556:12:8"
															},
															"nativeSrc": "556:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:8"
											},
											{
												"body": {
													"nativeSrc": "628:54:8",
													"nodeType": "YulBlock",
													"src": "628:54:8",
													"statements": [
														{
															"nativeSrc": "638:38:8",
															"nodeType": "YulAssignment",
															"src": "638:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:8",
																				"nodeType": "YulLiteral",
																				"src": "663:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:8"
																		},
																		"nativeSrc": "652:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:8",
																				"nodeType": "YulLiteral",
																				"src": "672:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:8"
																		},
																		"nativeSrc": "668:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:8"
																},
																"nativeSrc": "648:28:8",
																"nodeType": "YulFunctionCall",
																"src": "648:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:8",
														"nodeType": "YulTypedName",
														"src": "611:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:8",
														"nodeType": "YulTypedName",
														"src": "621:6:8",
														"type": ""
													}
												],
												"src": "580:102:8"
											},
											{
												"body": {
													"nativeSrc": "716:152:8",
													"nodeType": "YulBlock",
													"src": "716:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:8",
																		"nodeType": "YulLiteral",
																		"src": "733:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:8",
																		"nodeType": "YulLiteral",
																		"src": "736:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:8"
																},
																"nativeSrc": "726:88:8",
																"nodeType": "YulFunctionCall",
																"src": "726:88:8"
															},
															"nativeSrc": "726:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:8",
																		"nodeType": "YulLiteral",
																		"src": "830:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:8",
																		"nodeType": "YulLiteral",
																		"src": "833:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:8"
																},
																"nativeSrc": "823:15:8",
																"nodeType": "YulFunctionCall",
																"src": "823:15:8"
															},
															"nativeSrc": "823:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:8",
																		"nodeType": "YulLiteral",
																		"src": "854:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:8",
																		"nodeType": "YulLiteral",
																		"src": "857:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:8"
																},
																"nativeSrc": "847:15:8",
																"nodeType": "YulFunctionCall",
																"src": "847:15:8"
															},
															"nativeSrc": "847:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:8"
											},
											{
												"body": {
													"nativeSrc": "917:238:8",
													"nodeType": "YulBlock",
													"src": "917:238:8",
													"statements": [
														{
															"nativeSrc": "927:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:8"
																		},
																		"nativeSrc": "957:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:8"
																},
																"nativeSrc": "945:40:8",
																"nodeType": "YulFunctionCall",
																"src": "945:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:8",
																	"nodeType": "YulTypedName",
																	"src": "931:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:8",
																"nodeType": "YulBlock",
																"src": "1096:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:8"
																			},
																			"nativeSrc": "1098:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:8"
																		},
																		"nativeSrc": "1098:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:8",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:8"
																		},
																		"nativeSrc": "1036:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:8"
																		},
																		"nativeSrc": "1072:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:8"
																},
																"nativeSrc": "1033:62:8",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:8"
															},
															"nativeSrc": "1030:88:8",
															"nodeType": "YulIf",
															"src": "1030:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:8"
																},
																"nativeSrc": "1127:22:8",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:8"
															},
															"nativeSrc": "1127:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:8",
														"nodeType": "YulTypedName",
														"src": "903:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:8",
														"nodeType": "YulTypedName",
														"src": "911:4:8",
														"type": ""
													}
												],
												"src": "874:281:8"
											},
											{
												"body": {
													"nativeSrc": "1202:88:8",
													"nodeType": "YulBlock",
													"src": "1202:88:8",
													"statements": [
														{
															"nativeSrc": "1212:30:8",
															"nodeType": "YulAssignment",
															"src": "1212:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:8"
																},
																"nativeSrc": "1222:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:8"
																},
																"nativeSrc": "1251:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:8"
															},
															"nativeSrc": "1251:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:8",
														"nodeType": "YulTypedName",
														"src": "1186:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:8",
														"nodeType": "YulTypedName",
														"src": "1195:6:8",
														"type": ""
													}
												],
												"src": "1161:129:8"
											},
											{
												"body": {
													"nativeSrc": "1363:241:8",
													"nodeType": "YulBlock",
													"src": "1363:241:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:8",
																"nodeType": "YulBlock",
																"src": "1468:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:8"
																			},
																			"nativeSrc": "1470:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:8"
																		},
																		"nativeSrc": "1470:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:8",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:8"
																},
																"nativeSrc": "1437:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:8"
															},
															"nativeSrc": "1434:56:8",
															"nodeType": "YulIf",
															"src": "1434:56:8"
														},
														{
															"nativeSrc": "1500:37:8",
															"nodeType": "YulAssignment",
															"src": "1500:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:8"
																},
																"nativeSrc": "1508:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:8"
																}
															]
														},
														{
															"nativeSrc": "1574:23:8",
															"nodeType": "YulAssignment",
															"src": "1574:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:8"
																},
																"nativeSrc": "1582:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:8",
														"nodeType": "YulTypedName",
														"src": "1347:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:8",
														"nodeType": "YulTypedName",
														"src": "1358:4:8",
														"type": ""
													}
												],
												"src": "1296:308:8"
											},
											{
												"body": {
													"nativeSrc": "1672:77:8",
													"nodeType": "YulBlock",
													"src": "1672:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:8"
																},
																"nativeSrc": "1683:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:8"
															},
															"nativeSrc": "1683:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:8"
																		},
																		"nativeSrc": "1722:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:8"
																},
																"nativeSrc": "1715:27:8",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:8"
															},
															"nativeSrc": "1715:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:8",
														"nodeType": "YulTypedName",
														"src": "1654:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:8",
														"nodeType": "YulTypedName",
														"src": "1659:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:8",
														"nodeType": "YulTypedName",
														"src": "1664:6:8",
														"type": ""
													}
												],
												"src": "1610:139:8"
											},
											{
												"body": {
													"nativeSrc": "1850:339:8",
													"nodeType": "YulBlock",
													"src": "1850:339:8",
													"statements": [
														{
															"nativeSrc": "1860:75:8",
															"nodeType": "YulAssignment",
															"src": "1860:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:8"
																		},
																		"nativeSrc": "1885:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:8"
																},
																"nativeSrc": "1869:66:8",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:8"
																},
																"nativeSrc": "1944:21:8",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:8"
															},
															"nativeSrc": "1944:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:8"
														},
														{
															"nativeSrc": "1974:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:8"
																},
																"nativeSrc": "1985:16:8",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:8",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:8",
																"nodeType": "YulBlock",
																"src": "2039:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:8"
																			},
																			"nativeSrc": "2041:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:8"
																		},
																		"nativeSrc": "2041:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:8"
																		},
																		"nativeSrc": "2016:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:8"
																},
																"nativeSrc": "2013:25:8",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:8"
															},
															"nativeSrc": "2010:112:8",
															"nodeType": "YulIf",
															"src": "2010:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:8"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:8"
																},
																"nativeSrc": "2131:52:8",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:8"
															},
															"nativeSrc": "2131:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:8",
														"nodeType": "YulTypedName",
														"src": "1823:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:8",
														"nodeType": "YulTypedName",
														"src": "1828:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:8",
														"nodeType": "YulTypedName",
														"src": "1836:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:8",
														"nodeType": "YulTypedName",
														"src": "1844:5:8",
														"type": ""
													}
												],
												"src": "1755:434:8"
											},
											{
												"body": {
													"nativeSrc": "2282:282:8",
													"nodeType": "YulBlock",
													"src": "2282:282:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:8",
																"nodeType": "YulBlock",
																"src": "2331:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:8"
																			},
																			"nativeSrc": "2333:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:8"
																		},
																		"nativeSrc": "2333:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:8",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:8"
																				},
																				"nativeSrc": "2306:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:8"
																		},
																		"nativeSrc": "2302:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:8"
																},
																"nativeSrc": "2295:35:8",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:8"
															},
															"nativeSrc": "2292:122:8",
															"nodeType": "YulIf",
															"src": "2292:122:8"
														},
														{
															"nativeSrc": "2423:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:8"
																},
																"nativeSrc": "2437:13:8",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:8",
															"nodeType": "YulAssignment",
															"src": "2459:99:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:8"
																		},
																		"nativeSrc": "2527:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:8"
																},
																"nativeSrc": "2468:90:8",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:8",
														"nodeType": "YulTypedName",
														"src": "2260:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:8",
														"nodeType": "YulTypedName",
														"src": "2268:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:8",
														"nodeType": "YulTypedName",
														"src": "2276:5:8",
														"type": ""
													}
												],
												"src": "2209:355:8"
											},
											{
												"body": {
													"nativeSrc": "2615:32:8",
													"nodeType": "YulBlock",
													"src": "2615:32:8",
													"statements": [
														{
															"nativeSrc": "2625:16:8",
															"nodeType": "YulAssignment",
															"src": "2625:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2636:5:8",
																"nodeType": "YulIdentifier",
																"src": "2636:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2570:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:8",
														"nodeType": "YulTypedName",
														"src": "2597:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:8",
														"nodeType": "YulTypedName",
														"src": "2607:7:8",
														"type": ""
													}
												],
												"src": "2570:77:8"
											},
											{
												"body": {
													"nativeSrc": "2696:79:8",
													"nodeType": "YulBlock",
													"src": "2696:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:8",
																"nodeType": "YulBlock",
																"src": "2753:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:8"
																			},
																			"nativeSrc": "2755:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:8"
																		},
																		"nativeSrc": "2755:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2719:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2726:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:8"
																				},
																				"nativeSrc": "2726:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2716:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:8"
																		},
																		"nativeSrc": "2716:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2709:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:8"
																},
																"nativeSrc": "2709:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2709:43:8"
															},
															"nativeSrc": "2706:63:8",
															"nodeType": "YulIf",
															"src": "2706:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2653:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2689:5:8",
														"nodeType": "YulTypedName",
														"src": "2689:5:8",
														"type": ""
													}
												],
												"src": "2653:122:8"
											},
											{
												"body": {
													"nativeSrc": "2844:80:8",
													"nodeType": "YulBlock",
													"src": "2844:80:8",
													"statements": [
														{
															"nativeSrc": "2854:22:8",
															"nodeType": "YulAssignment",
															"src": "2854:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2869:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:8"
																},
																"nativeSrc": "2863:13:8",
																"nodeType": "YulFunctionCall",
																"src": "2863:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2885:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:8"
																},
																"nativeSrc": "2885:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2885:33:8"
															},
															"nativeSrc": "2885:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2781:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:8",
														"nodeType": "YulTypedName",
														"src": "2822:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:8",
														"nodeType": "YulTypedName",
														"src": "2830:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:8",
														"nodeType": "YulTypedName",
														"src": "2838:5:8",
														"type": ""
													}
												],
												"src": "2781:143:8"
											},
											{
												"body": {
													"nativeSrc": "3095:1158:8",
													"nodeType": "YulBlock",
													"src": "3095:1158:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3142:83:8",
																"nodeType": "YulBlock",
																"src": "3142:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3144:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3144:77:8"
																			},
																			"nativeSrc": "3144:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3144:79:8"
																		},
																		"nativeSrc": "3144:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3144:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3116:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3116:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3125:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3125:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3112:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3112:3:8"
																		},
																		"nativeSrc": "3112:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3112:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3137:3:8",
																		"nodeType": "YulLiteral",
																		"src": "3137:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3108:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3108:3:8"
																},
																"nativeSrc": "3108:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3108:33:8"
															},
															"nativeSrc": "3105:120:8",
															"nodeType": "YulIf",
															"src": "3105:120:8"
														},
														{
															"nativeSrc": "3235:291:8",
															"nodeType": "YulBlock",
															"src": "3235:291:8",
															"statements": [
																{
																	"nativeSrc": "3250:38:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3250:38:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3274:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3274:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3285:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3285:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3270:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3270:3:8"
																				},
																				"nativeSrc": "3270:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3270:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3264:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3264:5:8"
																		},
																		"nativeSrc": "3264:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3264:24:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3254:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3254:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3335:83:8",
																		"nodeType": "YulBlock",
																		"src": "3335:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3337:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "3337:77:8"
																					},
																					"nativeSrc": "3337:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3337:79:8"
																				},
																				"nativeSrc": "3337:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3337:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3307:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3307:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3315:18:8",
																				"nodeType": "YulLiteral",
																				"src": "3315:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3304:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3304:2:8"
																		},
																		"nativeSrc": "3304:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3304:30:8"
																	},
																	"nativeSrc": "3301:117:8",
																	"nodeType": "YulIf",
																	"src": "3301:117:8"
																},
																{
																	"nativeSrc": "3432:84:8",
																	"nodeType": "YulAssignment",
																	"src": "3432:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3488:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3488:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3499:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3499:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3484:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3484:3:8"
																				},
																				"nativeSrc": "3484:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3484:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3508:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3508:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3442:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "3442:41:8"
																		},
																		"nativeSrc": "3442:74:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3442:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3432:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3432:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3536:292:8",
															"nodeType": "YulBlock",
															"src": "3536:292:8",
															"statements": [
																{
																	"nativeSrc": "3551:39:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3551:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3575:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3575:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3586:2:8",
																						"nodeType": "YulLiteral",
																						"src": "3586:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3571:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3571:3:8"
																				},
																				"nativeSrc": "3571:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3571:18:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3565:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3565:5:8"
																		},
																		"nativeSrc": "3565:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3565:25:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3555:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3555:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3637:83:8",
																		"nodeType": "YulBlock",
																		"src": "3637:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3639:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "3639:77:8"
																					},
																					"nativeSrc": "3639:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3639:79:8"
																				},
																				"nativeSrc": "3639:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3639:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3609:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3609:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3617:18:8",
																				"nodeType": "YulLiteral",
																				"src": "3617:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3606:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3606:2:8"
																		},
																		"nativeSrc": "3606:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3606:30:8"
																	},
																	"nativeSrc": "3603:117:8",
																	"nodeType": "YulIf",
																	"src": "3603:117:8"
																},
																{
																	"nativeSrc": "3734:84:8",
																	"nodeType": "YulAssignment",
																	"src": "3734:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3790:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3790:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3801:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3801:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3786:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3786:3:8"
																				},
																				"nativeSrc": "3786:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3786:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3810:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3810:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3744:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "3744:41:8"
																		},
																		"nativeSrc": "3744:74:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3744:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3734:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3734:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3838:129:8",
															"nodeType": "YulBlock",
															"src": "3838:129:8",
															"statements": [
																{
																	"nativeSrc": "3853:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3867:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3883:74:8",
																	"nodeType": "YulAssignment",
																	"src": "3883:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3929:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3929:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3940:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3940:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3925:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3925:3:8"
																				},
																				"nativeSrc": "3925:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3925:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3949:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3949:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3893:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "3893:31:8"
																		},
																		"nativeSrc": "3893:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3893:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3883:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3883:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3977:129:8",
															"nodeType": "YulBlock",
															"src": "3977:129:8",
															"statements": [
																{
																	"nativeSrc": "3992:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3992:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4006:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4006:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3996:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3996:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4022:74:8",
																	"nodeType": "YulAssignment",
																	"src": "4022:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4068:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4068:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4079:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4079:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4064:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4064:3:8"
																				},
																				"nativeSrc": "4064:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4064:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4088:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4088:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4032:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "4032:31:8"
																		},
																		"nativeSrc": "4032:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4032:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4022:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4022:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4116:130:8",
															"nodeType": "YulBlock",
															"src": "4116:130:8",
															"statements": [
																{
																	"nativeSrc": "4131:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4131:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4145:3:8",
																		"nodeType": "YulLiteral",
																		"src": "4145:3:8",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4135:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4135:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4162:74:8",
																	"nodeType": "YulAssignment",
																	"src": "4162:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4208:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4208:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4219:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4219:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4204:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4204:3:8"
																				},
																				"nativeSrc": "4204:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4204:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4228:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4228:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4172:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "4172:31:8"
																		},
																		"nativeSrc": "4172:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4172:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "4162:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4162:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "2930:1323:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3033:9:8",
														"nodeType": "YulTypedName",
														"src": "3033:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3044:7:8",
														"nodeType": "YulTypedName",
														"src": "3044:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3056:6:8",
														"nodeType": "YulTypedName",
														"src": "3056:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3064:6:8",
														"nodeType": "YulTypedName",
														"src": "3064:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3072:6:8",
														"nodeType": "YulTypedName",
														"src": "3072:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3080:6:8",
														"nodeType": "YulTypedName",
														"src": "3080:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3088:6:8",
														"nodeType": "YulTypedName",
														"src": "3088:6:8",
														"type": ""
													}
												],
												"src": "2930:1323:8"
											},
											{
												"body": {
													"nativeSrc": "4304:81:8",
													"nodeType": "YulBlock",
													"src": "4304:81:8",
													"statements": [
														{
															"nativeSrc": "4314:65:8",
															"nodeType": "YulAssignment",
															"src": "4314:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4329:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4329:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4336:42:8",
																		"nodeType": "YulLiteral",
																		"src": "4336:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4325:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4325:3:8"
																},
																"nativeSrc": "4325:54:8",
																"nodeType": "YulFunctionCall",
																"src": "4325:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4314:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4314:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "4259:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4286:5:8",
														"nodeType": "YulTypedName",
														"src": "4286:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4296:7:8",
														"nodeType": "YulTypedName",
														"src": "4296:7:8",
														"type": ""
													}
												],
												"src": "4259:126:8"
											},
											{
												"body": {
													"nativeSrc": "4436:51:8",
													"nodeType": "YulBlock",
													"src": "4436:51:8",
													"statements": [
														{
															"nativeSrc": "4446:35:8",
															"nodeType": "YulAssignment",
															"src": "4446:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4475:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4475:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4457:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4457:17:8"
																},
																"nativeSrc": "4457:24:8",
																"nodeType": "YulFunctionCall",
																"src": "4457:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4446:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4446:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "4391:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4418:5:8",
														"nodeType": "YulTypedName",
														"src": "4418:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4428:7:8",
														"nodeType": "YulTypedName",
														"src": "4428:7:8",
														"type": ""
													}
												],
												"src": "4391:96:8"
											},
											{
												"body": {
													"nativeSrc": "4558:53:8",
													"nodeType": "YulBlock",
													"src": "4558:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4575:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4575:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4598:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4598:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4580:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "4580:17:8"
																		},
																		"nativeSrc": "4580:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4580:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4568:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4568:6:8"
																},
																"nativeSrc": "4568:37:8",
																"nodeType": "YulFunctionCall",
																"src": "4568:37:8"
															},
															"nativeSrc": "4568:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "4568:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4493:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4546:5:8",
														"nodeType": "YulTypedName",
														"src": "4546:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4553:3:8",
														"nodeType": "YulTypedName",
														"src": "4553:3:8",
														"type": ""
													}
												],
												"src": "4493:118:8"
											},
											{
												"body": {
													"nativeSrc": "4715:124:8",
													"nodeType": "YulBlock",
													"src": "4715:124:8",
													"statements": [
														{
															"nativeSrc": "4725:26:8",
															"nodeType": "YulAssignment",
															"src": "4725:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4737:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4737:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4748:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4748:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4733:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4733:3:8"
																},
																"nativeSrc": "4733:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4733:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4725:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4725:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4805:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4805:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4818:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4818:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4829:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4829:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4814:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4814:3:8"
																		},
																		"nativeSrc": "4814:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4761:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4761:43:8"
																},
																"nativeSrc": "4761:71:8",
																"nodeType": "YulFunctionCall",
																"src": "4761:71:8"
															},
															"nativeSrc": "4761:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "4761:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4617:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4687:9:8",
														"nodeType": "YulTypedName",
														"src": "4687:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4699:6:8",
														"nodeType": "YulTypedName",
														"src": "4699:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4710:4:8",
														"nodeType": "YulTypedName",
														"src": "4710:4:8",
														"type": ""
													}
												],
												"src": "4617:222:8"
											},
											{
												"body": {
													"nativeSrc": "4904:40:8",
													"nodeType": "YulBlock",
													"src": "4904:40:8",
													"statements": [
														{
															"nativeSrc": "4915:22:8",
															"nodeType": "YulAssignment",
															"src": "4915:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4931:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4931:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4925:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4925:5:8"
																},
																"nativeSrc": "4925:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4925:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4915:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4915:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4845:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4887:5:8",
														"nodeType": "YulTypedName",
														"src": "4887:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4897:6:8",
														"nodeType": "YulTypedName",
														"src": "4897:6:8",
														"type": ""
													}
												],
												"src": "4845:99:8"
											},
											{
												"body": {
													"nativeSrc": "4978:152:8",
													"nodeType": "YulBlock",
													"src": "4978:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4995:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4995:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4998:77:8",
																		"nodeType": "YulLiteral",
																		"src": "4998:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4988:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4988:6:8"
																},
																"nativeSrc": "4988:88:8",
																"nodeType": "YulFunctionCall",
																"src": "4988:88:8"
															},
															"nativeSrc": "4988:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "4988:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5092:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5092:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5095:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5095:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5085:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5085:6:8"
																},
																"nativeSrc": "5085:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5085:15:8"
															},
															"nativeSrc": "5085:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5085:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5116:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5116:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5119:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5119:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5109:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5109:6:8"
																},
																"nativeSrc": "5109:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5109:15:8"
															},
															"nativeSrc": "5109:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5109:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4950:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4950:180:8"
											},
											{
												"body": {
													"nativeSrc": "5187:269:8",
													"nodeType": "YulBlock",
													"src": "5187:269:8",
													"statements": [
														{
															"nativeSrc": "5197:22:8",
															"nodeType": "YulAssignment",
															"src": "5197:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5211:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5211:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5217:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5217:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5207:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5207:3:8"
																},
																"nativeSrc": "5207:12:8",
																"nodeType": "YulFunctionCall",
																"src": "5207:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5197:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5197:6:8"
																}
															]
														},
														{
															"nativeSrc": "5228:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5228:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5258:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5258:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5264:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5264:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5254:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5254:3:8"
																},
																"nativeSrc": "5254:12:8",
																"nodeType": "YulFunctionCall",
																"src": "5254:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5232:18:8",
																	"nodeType": "YulTypedName",
																	"src": "5232:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5305:51:8",
																"nodeType": "YulBlock",
																"src": "5305:51:8",
																"statements": [
																	{
																		"nativeSrc": "5319:27:8",
																		"nodeType": "YulAssignment",
																		"src": "5319:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5333:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "5333:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5341:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5341:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5329:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5329:3:8"
																			},
																			"nativeSrc": "5329:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5329:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5319:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5319:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5285:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "5285:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5278:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5278:6:8"
																},
																"nativeSrc": "5278:26:8",
																"nodeType": "YulFunctionCall",
																"src": "5278:26:8"
															},
															"nativeSrc": "5275:81:8",
															"nodeType": "YulIf",
															"src": "5275:81:8"
														},
														{
															"body": {
																"nativeSrc": "5408:42:8",
																"nodeType": "YulBlock",
																"src": "5408:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5422:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5422:16:8"
																			},
																			"nativeSrc": "5422:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5422:18:8"
																		},
																		"nativeSrc": "5422:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5422:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5372:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "5372:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5395:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5395:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5403:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5403:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5392:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5392:2:8"
																		},
																		"nativeSrc": "5392:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5392:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5369:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5369:2:8"
																},
																"nativeSrc": "5369:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5369:38:8"
															},
															"nativeSrc": "5366:84:8",
															"nodeType": "YulIf",
															"src": "5366:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5136:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5171:4:8",
														"nodeType": "YulTypedName",
														"src": "5171:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5180:6:8",
														"nodeType": "YulTypedName",
														"src": "5180:6:8",
														"type": ""
													}
												],
												"src": "5136:320:8"
											},
											{
												"body": {
													"nativeSrc": "5516:87:8",
													"nodeType": "YulBlock",
													"src": "5516:87:8",
													"statements": [
														{
															"nativeSrc": "5526:11:8",
															"nodeType": "YulAssignment",
															"src": "5526:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "5534:3:8",
																"nodeType": "YulIdentifier",
																"src": "5534:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5526:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5526:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5554:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5554:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5557:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5557:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5547:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:8"
																},
																"nativeSrc": "5547:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5547:14:8"
															},
															"nativeSrc": "5547:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "5547:14:8"
														},
														{
															"nativeSrc": "5570:26:8",
															"nodeType": "YulAssignment",
															"src": "5570:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5588:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5588:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5591:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5591:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5578:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5578:9:8"
																},
																"nativeSrc": "5578:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5578:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5570:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5570:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5462:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5503:3:8",
														"nodeType": "YulTypedName",
														"src": "5503:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5511:4:8",
														"nodeType": "YulTypedName",
														"src": "5511:4:8",
														"type": ""
													}
												],
												"src": "5462:141:8"
											},
											{
												"body": {
													"nativeSrc": "5653:49:8",
													"nodeType": "YulBlock",
													"src": "5653:49:8",
													"statements": [
														{
															"nativeSrc": "5663:33:8",
															"nodeType": "YulAssignment",
															"src": "5663:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5681:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5681:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5688:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5688:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5677:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5677:3:8"
																		},
																		"nativeSrc": "5677:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5677:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5693:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5693:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5673:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5673:3:8"
																},
																"nativeSrc": "5673:23:8",
																"nodeType": "YulFunctionCall",
																"src": "5673:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5663:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5663:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5609:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5636:5:8",
														"nodeType": "YulTypedName",
														"src": "5636:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5646:6:8",
														"nodeType": "YulTypedName",
														"src": "5646:6:8",
														"type": ""
													}
												],
												"src": "5609:93:8"
											},
											{
												"body": {
													"nativeSrc": "5761:54:8",
													"nodeType": "YulBlock",
													"src": "5761:54:8",
													"statements": [
														{
															"nativeSrc": "5771:37:8",
															"nodeType": "YulAssignment",
															"src": "5771:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5796:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5796:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5802:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5802:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5792:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5792:3:8"
																},
																"nativeSrc": "5792:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5792:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5771:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "5771:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5708:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5736:4:8",
														"nodeType": "YulTypedName",
														"src": "5736:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5742:5:8",
														"nodeType": "YulTypedName",
														"src": "5742:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5752:8:8",
														"nodeType": "YulTypedName",
														"src": "5752:8:8",
														"type": ""
													}
												],
												"src": "5708:107:8"
											},
											{
												"body": {
													"nativeSrc": "5897:317:8",
													"nodeType": "YulBlock",
													"src": "5897:317:8",
													"statements": [
														{
															"nativeSrc": "5907:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5907:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5928:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "5928:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5940:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5940:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5924:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5924:3:8"
																},
																"nativeSrc": "5924:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5924:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5911:9:8",
																	"nodeType": "YulTypedName",
																	"src": "5911:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5951:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5951:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5982:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5982:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5993:66:8",
																		"nodeType": "YulLiteral",
																		"src": "5993:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5963:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5963:18:8"
																},
																"nativeSrc": "5963:97:8",
																"nodeType": "YulFunctionCall",
																"src": "5963:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5955:4:8",
																	"nodeType": "YulTypedName",
																	"src": "5955:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6069:51:8",
															"nodeType": "YulAssignment",
															"src": "6069:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6100:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6100:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "6111:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "6111:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6081:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "6081:18:8"
																},
																"nativeSrc": "6081:39:8",
																"nodeType": "YulFunctionCall",
																"src": "6081:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "6069:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "6069:8:8"
																}
															]
														},
														{
															"nativeSrc": "6129:30:8",
															"nodeType": "YulAssignment",
															"src": "6129:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6142:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6142:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "6153:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6153:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6149:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6149:3:8"
																		},
																		"nativeSrc": "6149:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6149:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6138:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6138:3:8"
																},
																"nativeSrc": "6138:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6138:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6129:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6129:5:8"
																}
															]
														},
														{
															"nativeSrc": "6168:40:8",
															"nodeType": "YulAssignment",
															"src": "6168:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6181:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6181:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "6192:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "6192:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "6202:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6202:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6188:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6188:3:8"
																		},
																		"nativeSrc": "6188:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6188:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6178:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6178:2:8"
																},
																"nativeSrc": "6178:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6178:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6168:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6168:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5821:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5858:5:8",
														"nodeType": "YulTypedName",
														"src": "5858:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5865:10:8",
														"nodeType": "YulTypedName",
														"src": "5865:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5877:8:8",
														"nodeType": "YulTypedName",
														"src": "5877:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5890:6:8",
														"nodeType": "YulTypedName",
														"src": "5890:6:8",
														"type": ""
													}
												],
												"src": "5821:393:8"
											},
											{
												"body": {
													"nativeSrc": "6252:28:8",
													"nodeType": "YulBlock",
													"src": "6252:28:8",
													"statements": [
														{
															"nativeSrc": "6262:12:8",
															"nodeType": "YulAssignment",
															"src": "6262:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "6269:5:8",
																"nodeType": "YulIdentifier",
																"src": "6269:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6262:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6262:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6220:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6238:5:8",
														"nodeType": "YulTypedName",
														"src": "6238:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6248:3:8",
														"nodeType": "YulTypedName",
														"src": "6248:3:8",
														"type": ""
													}
												],
												"src": "6220:60:8"
											},
											{
												"body": {
													"nativeSrc": "6346:82:8",
													"nodeType": "YulBlock",
													"src": "6346:82:8",
													"statements": [
														{
															"nativeSrc": "6356:66:8",
															"nodeType": "YulAssignment",
															"src": "6356:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6414:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6414:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6396:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "6396:17:8"
																				},
																				"nativeSrc": "6396:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6396:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6387:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "6387:8:8"
																		},
																		"nativeSrc": "6387:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6387:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6369:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "6369:17:8"
																},
																"nativeSrc": "6369:53:8",
																"nodeType": "YulFunctionCall",
																"src": "6369:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6356:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "6356:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6286:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6326:5:8",
														"nodeType": "YulTypedName",
														"src": "6326:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6336:9:8",
														"nodeType": "YulTypedName",
														"src": "6336:9:8",
														"type": ""
													}
												],
												"src": "6286:142:8"
											},
											{
												"body": {
													"nativeSrc": "6481:28:8",
													"nodeType": "YulBlock",
													"src": "6481:28:8",
													"statements": [
														{
															"nativeSrc": "6491:12:8",
															"nodeType": "YulAssignment",
															"src": "6491:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "6498:5:8",
																"nodeType": "YulIdentifier",
																"src": "6498:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6491:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6491:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6434:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6467:5:8",
														"nodeType": "YulTypedName",
														"src": "6467:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6477:3:8",
														"nodeType": "YulTypedName",
														"src": "6477:3:8",
														"type": ""
													}
												],
												"src": "6434:75:8"
											},
											{
												"body": {
													"nativeSrc": "6591:193:8",
													"nodeType": "YulBlock",
													"src": "6591:193:8",
													"statements": [
														{
															"nativeSrc": "6601:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6601:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6656:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "6656:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6625:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "6625:30:8"
																},
																"nativeSrc": "6625:39:8",
																"nodeType": "YulFunctionCall",
																"src": "6625:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6605:16:8",
																	"nodeType": "YulTypedName",
																	"src": "6605:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6680:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6680:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6720:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "6720:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6714:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "6714:5:8"
																				},
																				"nativeSrc": "6714:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6714:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6727:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6727:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6759:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "6759:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6735:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "6735:23:8"
																				},
																				"nativeSrc": "6735:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6735:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6686:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "6686:27:8"
																		},
																		"nativeSrc": "6686:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6686:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6673:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6673:6:8"
																},
																"nativeSrc": "6673:105:8",
																"nodeType": "YulFunctionCall",
																"src": "6673:105:8"
															},
															"nativeSrc": "6673:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "6673:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6515:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6568:4:8",
														"nodeType": "YulTypedName",
														"src": "6568:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6574:6:8",
														"nodeType": "YulTypedName",
														"src": "6574:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6582:7:8",
														"nodeType": "YulTypedName",
														"src": "6582:7:8",
														"type": ""
													}
												],
												"src": "6515:269:8"
											},
											{
												"body": {
													"nativeSrc": "6839:24:8",
													"nodeType": "YulBlock",
													"src": "6839:24:8",
													"statements": [
														{
															"nativeSrc": "6849:8:8",
															"nodeType": "YulAssignment",
															"src": "6849:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "6856:1:8",
																"nodeType": "YulLiteral",
																"src": "6856:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6849:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6849:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6790:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6835:3:8",
														"nodeType": "YulTypedName",
														"src": "6835:3:8",
														"type": ""
													}
												],
												"src": "6790:73:8"
											},
											{
												"body": {
													"nativeSrc": "6922:136:8",
													"nodeType": "YulBlock",
													"src": "6922:136:8",
													"statements": [
														{
															"nativeSrc": "6932:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6932:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6946:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "6946:30:8"
																},
																"nativeSrc": "6946:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6946:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6936:6:8",
																	"nodeType": "YulTypedName",
																	"src": "6936:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7031:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7031:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "7037:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7037:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "7045:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7045:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6987:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6987:43:8"
																},
																"nativeSrc": "6987:65:8",
																"nodeType": "YulFunctionCall",
																"src": "6987:65:8"
															},
															"nativeSrc": "6987:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "6987:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6869:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6908:4:8",
														"nodeType": "YulTypedName",
														"src": "6908:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6914:6:8",
														"nodeType": "YulTypedName",
														"src": "6914:6:8",
														"type": ""
													}
												],
												"src": "6869:189:8"
											},
											{
												"body": {
													"nativeSrc": "7114:136:8",
													"nodeType": "YulBlock",
													"src": "7114:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7181:63:8",
																"nodeType": "YulBlock",
																"src": "7181:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7225:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "7225:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7232:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7232:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "7195:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "7195:29:8"
																			},
																			"nativeSrc": "7195:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7195:39:8"
																		},
																		"nativeSrc": "7195:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7195:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "7134:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7134:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7141:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7141:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7131:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7131:2:8"
																},
																"nativeSrc": "7131:14:8",
																"nodeType": "YulFunctionCall",
																"src": "7131:14:8"
															},
															"nativeSrc": "7124:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7146:26:8",
																"nodeType": "YulBlock",
																"src": "7146:26:8",
																"statements": [
																	{
																		"nativeSrc": "7148:22:8",
																		"nodeType": "YulAssignment",
																		"src": "7148:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7161:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "7161:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7168:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7168:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7157:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7157:3:8"
																			},
																			"nativeSrc": "7157:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7157:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "7148:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7148:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7128:2:8",
																"nodeType": "YulBlock",
																"src": "7128:2:8",
																"statements": []
															},
															"src": "7124:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "7064:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "7102:5:8",
														"nodeType": "YulTypedName",
														"src": "7102:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7109:3:8",
														"nodeType": "YulTypedName",
														"src": "7109:3:8",
														"type": ""
													}
												],
												"src": "7064:186:8"
											},
											{
												"body": {
													"nativeSrc": "7335:464:8",
													"nodeType": "YulBlock",
													"src": "7335:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7361:431:8",
																"nodeType": "YulBlock",
																"src": "7361:431:8",
																"statements": [
																	{
																		"nativeSrc": "7375:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7375:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7423:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "7423:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7391:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "7391:31:8"
																			},
																			"nativeSrc": "7391:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7391:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7379:8:8",
																				"nodeType": "YulTypedName",
																				"src": "7379:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7442:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7442:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7465:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "7465:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7493:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "7493:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7475:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "7475:17:8"
																					},
																					"nativeSrc": "7475:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7475:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7461:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7461:3:8"
																			},
																			"nativeSrc": "7461:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7461:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7446:11:8",
																				"nodeType": "YulTypedName",
																				"src": "7446:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7662:27:8",
																			"nodeType": "YulBlock",
																			"src": "7662:27:8",
																			"statements": [
																				{
																					"nativeSrc": "7664:23:8",
																					"nodeType": "YulAssignment",
																					"src": "7664:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7679:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "7679:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7664:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "7664:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7646:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "7646:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7658:2:8",
																					"nodeType": "YulLiteral",
																					"src": "7658:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7643:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "7643:2:8"
																			},
																			"nativeSrc": "7643:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7643:18:8"
																		},
																		"nativeSrc": "7640:49:8",
																		"nodeType": "YulIf",
																		"src": "7640:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7731:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "7731:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7748:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "7748:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7776:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "7776:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7758:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "7758:17:8"
																							},
																							"nativeSrc": "7758:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "7758:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7744:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:8"
																					},
																					"nativeSrc": "7744:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7744:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7702:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "7702:28:8"
																			},
																			"nativeSrc": "7702:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7702:80:8"
																		},
																		"nativeSrc": "7702:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7702:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7352:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7352:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7357:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7357:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7349:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7349:2:8"
																},
																"nativeSrc": "7349:11:8",
																"nodeType": "YulFunctionCall",
																"src": "7349:11:8"
															},
															"nativeSrc": "7346:446:8",
															"nodeType": "YulIf",
															"src": "7346:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7256:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7311:5:8",
														"nodeType": "YulTypedName",
														"src": "7311:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7318:3:8",
														"nodeType": "YulTypedName",
														"src": "7318:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7323:10:8",
														"nodeType": "YulTypedName",
														"src": "7323:10:8",
														"type": ""
													}
												],
												"src": "7256:543:8"
											},
											{
												"body": {
													"nativeSrc": "7868:54:8",
													"nodeType": "YulBlock",
													"src": "7868:54:8",
													"statements": [
														{
															"nativeSrc": "7878:37:8",
															"nodeType": "YulAssignment",
															"src": "7878:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7903:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7903:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7909:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7909:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7899:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7899:3:8"
																},
																"nativeSrc": "7899:16:8",
																"nodeType": "YulFunctionCall",
																"src": "7899:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7878:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "7878:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7805:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7843:4:8",
														"nodeType": "YulTypedName",
														"src": "7843:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7849:5:8",
														"nodeType": "YulTypedName",
														"src": "7849:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7859:8:8",
														"nodeType": "YulTypedName",
														"src": "7859:8:8",
														"type": ""
													}
												],
												"src": "7805:117:8"
											},
											{
												"body": {
													"nativeSrc": "7979:118:8",
													"nodeType": "YulBlock",
													"src": "7979:118:8",
													"statements": [
														{
															"nativeSrc": "7989:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7989:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8038:1:8",
																						"nodeType": "YulLiteral",
																						"src": "8038:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "8041:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8041:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8034:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8034:3:8"
																				},
																				"nativeSrc": "8034:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8034:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8053:1:8",
																						"nodeType": "YulLiteral",
																						"src": "8053:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8049:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8049:3:8"
																				},
																				"nativeSrc": "8049:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8049:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "8005:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "8005:28:8"
																		},
																		"nativeSrc": "8005:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8005:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "8001:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8001:3:8"
																},
																"nativeSrc": "8001:56:8",
																"nodeType": "YulFunctionCall",
																"src": "8001:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7993:4:8",
																	"nodeType": "YulTypedName",
																	"src": "7993:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8066:25:8",
															"nodeType": "YulAssignment",
															"src": "8066:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8080:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "8086:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8086:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8076:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:8"
																},
																"nativeSrc": "8076:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8076:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8066:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8066:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7928:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7956:4:8",
														"nodeType": "YulTypedName",
														"src": "7956:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7962:5:8",
														"nodeType": "YulTypedName",
														"src": "7962:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7972:6:8",
														"nodeType": "YulTypedName",
														"src": "7972:6:8",
														"type": ""
													}
												],
												"src": "7928:169:8"
											},
											{
												"body": {
													"nativeSrc": "8183:214:8",
													"nodeType": "YulBlock",
													"src": "8183:214:8",
													"statements": [
														{
															"nativeSrc": "8316:37:8",
															"nodeType": "YulAssignment",
															"src": "8316:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8343:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8343:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8349:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8349:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8324:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "8324:18:8"
																},
																"nativeSrc": "8324:29:8",
																"nodeType": "YulFunctionCall",
																"src": "8324:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8316:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8316:4:8"
																}
															]
														},
														{
															"nativeSrc": "8362:29:8",
															"nodeType": "YulAssignment",
															"src": "8362:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8373:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8373:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8383:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8383:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8386:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8386:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8379:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8379:3:8"
																		},
																		"nativeSrc": "8379:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8379:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8370:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8370:2:8"
																},
																"nativeSrc": "8370:21:8",
																"nodeType": "YulFunctionCall",
																"src": "8370:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8362:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8362:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "8102:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8164:4:8",
														"nodeType": "YulTypedName",
														"src": "8164:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8170:3:8",
														"nodeType": "YulTypedName",
														"src": "8170:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "8178:4:8",
														"nodeType": "YulTypedName",
														"src": "8178:4:8",
														"type": ""
													}
												],
												"src": "8102:295:8"
											},
											{
												"body": {
													"nativeSrc": "8494:1303:8",
													"nodeType": "YulBlock",
													"src": "8494:1303:8",
													"statements": [
														{
															"nativeSrc": "8505:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8505:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8552:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8552:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8519:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "8519:32:8"
																},
																"nativeSrc": "8519:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8519:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8509:6:8",
																	"nodeType": "YulTypedName",
																	"src": "8509:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8641:22:8",
																"nodeType": "YulBlock",
																"src": "8641:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8643:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8643:16:8"
																			},
																			"nativeSrc": "8643:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8643:18:8"
																		},
																		"nativeSrc": "8643:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8643:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8613:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8613:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8621:18:8",
																		"nodeType": "YulLiteral",
																		"src": "8621:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8610:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8610:2:8"
																},
																"nativeSrc": "8610:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8610:30:8"
															},
															"nativeSrc": "8607:56:8",
															"nodeType": "YulIf",
															"src": "8607:56:8"
														},
														{
															"nativeSrc": "8673:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8673:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8719:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8719:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8713:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "8713:5:8"
																		},
																		"nativeSrc": "8713:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8713:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8687:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "8687:25:8"
																},
																"nativeSrc": "8687:38:8",
																"nodeType": "YulFunctionCall",
																"src": "8687:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8677:6:8",
																	"nodeType": "YulTypedName",
																	"src": "8677:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8818:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8818:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8824:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8824:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8832:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8832:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8772:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "8772:45:8"
																},
																"nativeSrc": "8772:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8772:67:8"
															},
															"nativeSrc": "8772:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "8772:67:8"
														},
														{
															"nativeSrc": "8849:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8849:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "8866:1:8",
																"nodeType": "YulLiteral",
																"src": "8866:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8853:9:8",
																	"nodeType": "YulTypedName",
																	"src": "8853:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8877:17:8",
															"nodeType": "YulAssignment",
															"src": "8877:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "8890:4:8",
																"nodeType": "YulLiteral",
																"src": "8890:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8877:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "8877:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8941:611:8",
																		"nodeType": "YulBlock",
																		"src": "8941:611:8",
																		"statements": [
																			{
																				"nativeSrc": "8955:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8955:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8974:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "8974:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8986:4:8",
																									"nodeType": "YulLiteral",
																									"src": "8986:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8982:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "8982:3:8"
																							},
																							"nativeSrc": "8982:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "8982:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8970:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8970:3:8"
																					},
																					"nativeSrc": "8970:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8970:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8959:7:8",
																						"nodeType": "YulTypedName",
																						"src": "8959:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9006:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9006:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9052:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "9052:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "9020:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "9020:31:8"
																					},
																					"nativeSrc": "9020:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9020:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "9010:6:8",
																						"nodeType": "YulTypedName",
																						"src": "9010:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9070:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9070:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9079:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9079:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "9074:1:8",
																						"nodeType": "YulTypedName",
																						"src": "9074:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9138:163:8",
																					"nodeType": "YulBlock",
																					"src": "9138:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9163:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "9163:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9181:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "9181:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9186:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "9186:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9177:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "9177:3:8"
																												},
																												"nativeSrc": "9177:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "9177:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9171:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "9171:5:8"
																										},
																										"nativeSrc": "9171:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "9171:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9156:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "9156:6:8"
																								},
																								"nativeSrc": "9156:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9156:42:8"
																							},
																							"nativeSrc": "9156:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "9156:42:8"
																						},
																						{
																							"nativeSrc": "9215:24:8",
																							"nodeType": "YulAssignment",
																							"src": "9215:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9229:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "9229:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9237:1:8",
																										"nodeType": "YulLiteral",
																										"src": "9237:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9225:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "9225:3:8"
																								},
																								"nativeSrc": "9225:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9225:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9215:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "9215:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9256:31:8",
																							"nodeType": "YulAssignment",
																							"src": "9256:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9273:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "9273:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9284:2:8",
																										"nodeType": "YulLiteral",
																										"src": "9284:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9269:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "9269:3:8"
																								},
																								"nativeSrc": "9269:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9269:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9256:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "9256:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "9104:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "9104:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9107:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "9107:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9101:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "9101:2:8"
																					},
																					"nativeSrc": "9101:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9101:14:8"
																				},
																				"nativeSrc": "9093:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9116:21:8",
																					"nodeType": "YulBlock",
																					"src": "9116:21:8",
																					"statements": [
																						{
																							"nativeSrc": "9118:17:8",
																							"nodeType": "YulAssignment",
																							"src": "9118:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9127:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "9127:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9130:4:8",
																										"nodeType": "YulLiteral",
																										"src": "9130:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9123:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "9123:3:8"
																								},
																								"nativeSrc": "9123:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9123:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "9118:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "9118:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9097:3:8",
																					"nodeType": "YulBlock",
																					"src": "9097:3:8",
																					"statements": []
																				},
																				"src": "9093:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "9337:156:8",
																					"nodeType": "YulBlock",
																					"src": "9337:156:8",
																					"statements": [
																						{
																							"nativeSrc": "9355:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9355:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9382:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "9382:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9387:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "9387:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9378:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "9378:3:8"
																										},
																										"nativeSrc": "9378:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "9378:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9372:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "9372:5:8"
																								},
																								"nativeSrc": "9372:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9372:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9359:9:8",
																									"nodeType": "YulTypedName",
																									"src": "9359:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9422:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "9422:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9449:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "9449:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9464:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "9464:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9472:4:8",
																														"nodeType": "YulLiteral",
																														"src": "9472:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9460:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "9460:3:8"
																												},
																												"nativeSrc": "9460:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "9460:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9430:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "9430:18:8"
																										},
																										"nativeSrc": "9430:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "9430:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9415:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "9415:6:8"
																								},
																								"nativeSrc": "9415:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9415:64:8"
																							},
																							"nativeSrc": "9415:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "9415:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9320:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "9320:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9329:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "9329:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9317:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "9317:2:8"
																					},
																					"nativeSrc": "9317:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9317:19:8"
																				},
																				"nativeSrc": "9314:179:8",
																				"nodeType": "YulIf",
																				"src": "9314:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9513:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "9513:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9527:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "9527:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9535:1:8",
																											"nodeType": "YulLiteral",
																											"src": "9535:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9523:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "9523:3:8"
																									},
																									"nativeSrc": "9523:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "9523:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9539:1:8",
																									"nodeType": "YulLiteral",
																									"src": "9539:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9519:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "9519:3:8"
																							},
																							"nativeSrc": "9519:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "9519:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9506:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9506:6:8"
																					},
																					"nativeSrc": "9506:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9506:36:8"
																				},
																				"nativeSrc": "9506:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "9506:36:8"
																			}
																		]
																	},
																	"nativeSrc": "8934:618:8",
																	"nodeType": "YulCase",
																	"src": "8934:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8939:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8939:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9569:222:8",
																		"nodeType": "YulBlock",
																		"src": "9569:222:8",
																		"statements": [
																			{
																				"nativeSrc": "9583:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9583:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9596:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9596:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9587:5:8",
																						"nodeType": "YulTypedName",
																						"src": "9587:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9620:67:8",
																					"nodeType": "YulBlock",
																					"src": "9620:67:8",
																					"statements": [
																						{
																							"nativeSrc": "9638:35:8",
																							"nodeType": "YulAssignment",
																							"src": "9638:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9657:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "9657:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9662:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "9662:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9653:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "9653:3:8"
																										},
																										"nativeSrc": "9653:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "9653:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9647:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "9647:5:8"
																								},
																								"nativeSrc": "9647:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9647:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9638:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "9638:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9613:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9613:6:8"
																				},
																				"nativeSrc": "9610:77:8",
																				"nodeType": "YulIf",
																				"src": "9610:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9707:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "9707:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9766:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "9766:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9773:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "9773:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9713:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "9713:52:8"
																							},
																							"nativeSrc": "9713:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "9713:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9700:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9700:6:8"
																					},
																					"nativeSrc": "9700:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9700:81:8"
																				},
																				"nativeSrc": "9700:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "9700:81:8"
																			}
																		]
																	},
																	"nativeSrc": "9561:230:8",
																	"nodeType": "YulCase",
																	"src": "9561:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8914:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8914:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8922:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8922:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8911:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8911:2:8"
																},
																"nativeSrc": "8911:14:8",
																"nodeType": "YulFunctionCall",
																"src": "8911:14:8"
															},
															"nativeSrc": "8904:887:8",
															"nodeType": "YulSwitch",
															"src": "8904:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8402:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8483:4:8",
														"nodeType": "YulTypedName",
														"src": "8483:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8489:3:8",
														"nodeType": "YulTypedName",
														"src": "8489:3:8",
														"type": ""
													}
												],
												"src": "8402:1395:8"
											},
											{
												"body": {
													"nativeSrc": "9899:73:8",
													"nodeType": "YulBlock",
													"src": "9899:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9916:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9916:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9921:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9921:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9909:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9909:6:8"
																},
																"nativeSrc": "9909:19:8",
																"nodeType": "YulFunctionCall",
																"src": "9909:19:8"
															},
															"nativeSrc": "9909:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "9909:19:8"
														},
														{
															"nativeSrc": "9937:29:8",
															"nodeType": "YulAssignment",
															"src": "9937:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9956:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9956:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9961:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9961:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9952:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9952:3:8"
																},
																"nativeSrc": "9952:14:8",
																"nodeType": "YulFunctionCall",
																"src": "9952:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9937:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9937:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9803:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9871:3:8",
														"nodeType": "YulTypedName",
														"src": "9871:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9876:6:8",
														"nodeType": "YulTypedName",
														"src": "9876:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9887:11:8",
														"nodeType": "YulTypedName",
														"src": "9887:11:8",
														"type": ""
													}
												],
												"src": "9803:169:8"
											},
											{
												"body": {
													"nativeSrc": "10084:71:8",
													"nodeType": "YulBlock",
													"src": "10084:71:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10106:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10106:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10114:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10114:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10102:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10102:3:8"
																		},
																		"nativeSrc": "10102:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10102:14:8"
																	},
																	{
																		"hexValue": "52617465206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "10118:29:8",
																		"nodeType": "YulLiteral",
																		"src": "10118:29:8",
																		"type": "",
																		"value": "Rate must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10095:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10095:6:8"
																},
																"nativeSrc": "10095:53:8",
																"nodeType": "YulFunctionCall",
																"src": "10095:53:8"
															},
															"nativeSrc": "10095:53:8",
															"nodeType": "YulExpressionStatement",
															"src": "10095:53:8"
														}
													]
												},
												"name": "store_literal_in_memory_3eec5ea7df2a12f583914e102495bcafa3fc3cef4a94e2c61ffa2c353d218bf4",
												"nativeSrc": "9978:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10076:6:8",
														"nodeType": "YulTypedName",
														"src": "10076:6:8",
														"type": ""
													}
												],
												"src": "9978:177:8"
											},
											{
												"body": {
													"nativeSrc": "10307:220:8",
													"nodeType": "YulBlock",
													"src": "10307:220:8",
													"statements": [
														{
															"nativeSrc": "10317:74:8",
															"nodeType": "YulAssignment",
															"src": "10317:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10383:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10383:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10388:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10388:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10324:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10324:58:8"
																},
																"nativeSrc": "10324:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10324:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10317:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10317:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10489:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10489:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3eec5ea7df2a12f583914e102495bcafa3fc3cef4a94e2c61ffa2c353d218bf4",
																	"nativeSrc": "10400:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10400:88:8"
																},
																"nativeSrc": "10400:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10400:93:8"
															},
															"nativeSrc": "10400:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10400:93:8"
														},
														{
															"nativeSrc": "10502:19:8",
															"nodeType": "YulAssignment",
															"src": "10502:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10513:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10513:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10518:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10518:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10509:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10509:3:8"
																},
																"nativeSrc": "10509:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10509:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10502:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10502:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3eec5ea7df2a12f583914e102495bcafa3fc3cef4a94e2c61ffa2c353d218bf4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10161:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10295:3:8",
														"nodeType": "YulTypedName",
														"src": "10295:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10303:3:8",
														"nodeType": "YulTypedName",
														"src": "10303:3:8",
														"type": ""
													}
												],
												"src": "10161:366:8"
											},
											{
												"body": {
													"nativeSrc": "10704:248:8",
													"nodeType": "YulBlock",
													"src": "10704:248:8",
													"statements": [
														{
															"nativeSrc": "10714:26:8",
															"nodeType": "YulAssignment",
															"src": "10714:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10726:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10726:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10737:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10737:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10722:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10722:3:8"
																},
																"nativeSrc": "10722:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10722:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10714:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10714:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10761:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10761:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10772:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10772:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10757:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10757:3:8"
																		},
																		"nativeSrc": "10757:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10757:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10780:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10780:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10786:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10786:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10776:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10776:3:8"
																		},
																		"nativeSrc": "10776:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10776:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10750:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10750:6:8"
																},
																"nativeSrc": "10750:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10750:47:8"
															},
															"nativeSrc": "10750:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10750:47:8"
														},
														{
															"nativeSrc": "10806:139:8",
															"nodeType": "YulAssignment",
															"src": "10806:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10940:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10940:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3eec5ea7df2a12f583914e102495bcafa3fc3cef4a94e2c61ffa2c353d218bf4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10814:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10814:124:8"
																},
																"nativeSrc": "10814:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10814:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10806:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10806:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3eec5ea7df2a12f583914e102495bcafa3fc3cef4a94e2c61ffa2c353d218bf4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10533:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10684:9:8",
														"nodeType": "YulTypedName",
														"src": "10684:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10699:4:8",
														"nodeType": "YulTypedName",
														"src": "10699:4:8",
														"type": ""
													}
												],
												"src": "10533:419:8"
											},
											{
												"body": {
													"nativeSrc": "11064:71:8",
													"nodeType": "YulBlock",
													"src": "11064:71:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11086:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11086:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11094:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11094:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11082:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11082:3:8"
																		},
																		"nativeSrc": "11082:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11082:14:8"
																	},
																	{
																		"hexValue": "476f616c206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "11098:29:8",
																		"nodeType": "YulLiteral",
																		"src": "11098:29:8",
																		"type": "",
																		"value": "Goal must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11075:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11075:6:8"
																},
																"nativeSrc": "11075:53:8",
																"nodeType": "YulFunctionCall",
																"src": "11075:53:8"
															},
															"nativeSrc": "11075:53:8",
															"nodeType": "YulExpressionStatement",
															"src": "11075:53:8"
														}
													]
												},
												"name": "store_literal_in_memory_ec035aef93e96c874fc3fa49bb31f557de90808da7ce462b3778578c4850131e",
												"nativeSrc": "10958:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11056:6:8",
														"nodeType": "YulTypedName",
														"src": "11056:6:8",
														"type": ""
													}
												],
												"src": "10958:177:8"
											},
											{
												"body": {
													"nativeSrc": "11287:220:8",
													"nodeType": "YulBlock",
													"src": "11287:220:8",
													"statements": [
														{
															"nativeSrc": "11297:74:8",
															"nodeType": "YulAssignment",
															"src": "11297:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11363:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11363:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11368:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11368:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11304:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11304:58:8"
																},
																"nativeSrc": "11304:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11304:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11297:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11297:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11469:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11469:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec035aef93e96c874fc3fa49bb31f557de90808da7ce462b3778578c4850131e",
																	"nativeSrc": "11380:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11380:88:8"
																},
																"nativeSrc": "11380:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11380:93:8"
															},
															"nativeSrc": "11380:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11380:93:8"
														},
														{
															"nativeSrc": "11482:19:8",
															"nodeType": "YulAssignment",
															"src": "11482:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11493:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11493:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11498:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11498:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11489:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11489:3:8"
																},
																"nativeSrc": "11489:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11489:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11482:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11482:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec035aef93e96c874fc3fa49bb31f557de90808da7ce462b3778578c4850131e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11141:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11275:3:8",
														"nodeType": "YulTypedName",
														"src": "11275:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11283:3:8",
														"nodeType": "YulTypedName",
														"src": "11283:3:8",
														"type": ""
													}
												],
												"src": "11141:366:8"
											},
											{
												"body": {
													"nativeSrc": "11684:248:8",
													"nodeType": "YulBlock",
													"src": "11684:248:8",
													"statements": [
														{
															"nativeSrc": "11694:26:8",
															"nodeType": "YulAssignment",
															"src": "11694:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11706:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11706:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11717:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11717:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11702:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11702:3:8"
																},
																"nativeSrc": "11702:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11702:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11694:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11694:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11741:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11741:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11752:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11752:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11737:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11737:3:8"
																		},
																		"nativeSrc": "11737:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11737:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11760:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11760:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11766:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11766:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11756:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11756:3:8"
																		},
																		"nativeSrc": "11756:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11756:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11730:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11730:6:8"
																},
																"nativeSrc": "11730:47:8",
																"nodeType": "YulFunctionCall",
																"src": "11730:47:8"
															},
															"nativeSrc": "11730:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "11730:47:8"
														},
														{
															"nativeSrc": "11786:139:8",
															"nodeType": "YulAssignment",
															"src": "11786:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11920:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11920:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec035aef93e96c874fc3fa49bb31f557de90808da7ce462b3778578c4850131e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11794:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11794:124:8"
																},
																"nativeSrc": "11794:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11794:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11786:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11786:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec035aef93e96c874fc3fa49bb31f557de90808da7ce462b3778578c4850131e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11513:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11664:9:8",
														"nodeType": "YulTypedName",
														"src": "11664:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11679:4:8",
														"nodeType": "YulTypedName",
														"src": "11679:4:8",
														"type": ""
													}
												],
												"src": "11513:419:8"
											},
											{
												"body": {
													"nativeSrc": "12044:66:8",
													"nodeType": "YulBlock",
													"src": "12044:66:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12066:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12066:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12074:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12074:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12062:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12062:3:8"
																		},
																		"nativeSrc": "12062:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12062:14:8"
																	},
																	{
																		"hexValue": "566f7465732070657263656e74206d61782031303025",
																		"kind": "string",
																		"nativeSrc": "12078:24:8",
																		"nodeType": "YulLiteral",
																		"src": "12078:24:8",
																		"type": "",
																		"value": "Votes percent max 100%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12055:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12055:6:8"
																},
																"nativeSrc": "12055:48:8",
																"nodeType": "YulFunctionCall",
																"src": "12055:48:8"
															},
															"nativeSrc": "12055:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "12055:48:8"
														}
													]
												},
												"name": "store_literal_in_memory_7977cdfba43fb9b628861f8e33ea39f553cef52b55bd95c7f09cb24b3debdba5",
												"nativeSrc": "11938:172:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12036:6:8",
														"nodeType": "YulTypedName",
														"src": "12036:6:8",
														"type": ""
													}
												],
												"src": "11938:172:8"
											},
											{
												"body": {
													"nativeSrc": "12262:220:8",
													"nodeType": "YulBlock",
													"src": "12262:220:8",
													"statements": [
														{
															"nativeSrc": "12272:74:8",
															"nodeType": "YulAssignment",
															"src": "12272:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12338:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12338:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12343:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12343:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12279:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12279:58:8"
																},
																"nativeSrc": "12279:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12279:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12272:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12272:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12444:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12444:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7977cdfba43fb9b628861f8e33ea39f553cef52b55bd95c7f09cb24b3debdba5",
																	"nativeSrc": "12355:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "12355:88:8"
																},
																"nativeSrc": "12355:93:8",
																"nodeType": "YulFunctionCall",
																"src": "12355:93:8"
															},
															"nativeSrc": "12355:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "12355:93:8"
														},
														{
															"nativeSrc": "12457:19:8",
															"nodeType": "YulAssignment",
															"src": "12457:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12468:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12468:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12473:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12473:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12464:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12464:3:8"
																},
																"nativeSrc": "12464:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12464:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12457:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12457:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7977cdfba43fb9b628861f8e33ea39f553cef52b55bd95c7f09cb24b3debdba5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12116:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12250:3:8",
														"nodeType": "YulTypedName",
														"src": "12250:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12258:3:8",
														"nodeType": "YulTypedName",
														"src": "12258:3:8",
														"type": ""
													}
												],
												"src": "12116:366:8"
											},
											{
												"body": {
													"nativeSrc": "12659:248:8",
													"nodeType": "YulBlock",
													"src": "12659:248:8",
													"statements": [
														{
															"nativeSrc": "12669:26:8",
															"nodeType": "YulAssignment",
															"src": "12669:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12681:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12681:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12692:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12692:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12677:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12677:3:8"
																},
																"nativeSrc": "12677:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12677:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12669:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12669:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12716:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12716:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12727:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12727:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12712:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12712:3:8"
																		},
																		"nativeSrc": "12712:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12712:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12735:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12735:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12741:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12741:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12731:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12731:3:8"
																		},
																		"nativeSrc": "12731:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12731:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12705:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12705:6:8"
																},
																"nativeSrc": "12705:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12705:47:8"
															},
															"nativeSrc": "12705:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12705:47:8"
														},
														{
															"nativeSrc": "12761:139:8",
															"nodeType": "YulAssignment",
															"src": "12761:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12895:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12895:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7977cdfba43fb9b628861f8e33ea39f553cef52b55bd95c7f09cb24b3debdba5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12769:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12769:124:8"
																},
																"nativeSrc": "12769:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12769:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12761:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12761:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7977cdfba43fb9b628861f8e33ea39f553cef52b55bd95c7f09cb24b3debdba5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12488:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12639:9:8",
														"nodeType": "YulTypedName",
														"src": "12639:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12654:4:8",
														"nodeType": "YulTypedName",
														"src": "12654:4:8",
														"type": ""
													}
												],
												"src": "12488:419:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3eec5ea7df2a12f583914e102495bcafa3fc3cef4a94e2c61ffa2c353d218bf4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Rate must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3eec5ea7df2a12f583914e102495bcafa3fc3cef4a94e2c61ffa2c353d218bf4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_3eec5ea7df2a12f583914e102495bcafa3fc3cef4a94e2c61ffa2c353d218bf4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3eec5ea7df2a12f583914e102495bcafa3fc3cef4a94e2c61ffa2c353d218bf4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3eec5ea7df2a12f583914e102495bcafa3fc3cef4a94e2c61ffa2c353d218bf4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ec035aef93e96c874fc3fa49bb31f557de90808da7ce462b3778578c4850131e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Goal must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec035aef93e96c874fc3fa49bb31f557de90808da7ce462b3778578c4850131e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_ec035aef93e96c874fc3fa49bb31f557de90808da7ce462b3778578c4850131e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec035aef93e96c874fc3fa49bb31f557de90808da7ce462b3778578c4850131e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec035aef93e96c874fc3fa49bb31f557de90808da7ce462b3778578c4850131e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7977cdfba43fb9b628861f8e33ea39f553cef52b55bd95c7f09cb24b3debdba5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Votes percent max 100%\")\n\n    }\n\n    function abi_encode_t_stringliteral_7977cdfba43fb9b628861f8e33ea39f553cef52b55bd95c7f09cb24b3debdba5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_7977cdfba43fb9b628861f8e33ea39f553cef52b55bd95c7f09cb24b3debdba5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7977cdfba43fb9b628861f8e33ea39f553cef52b55bd95c7f09cb24b3debdba5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7977cdfba43fb9b628861f8e33ea39f553cef52b55bd95c7f09cb24b3debdba5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051612a48380380612a4883398181016040528101906100319190610420565b8484335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a4575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009b919061050e565b60405180910390fd5b6100b3816101df60201b60201c565b506001808190555081600590816100ca919061072e565b5080600690816100da919061072e565b5050505f831161011f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011690610857565b60405180910390fd5b5f8211610161576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610158906108bf565b60405180910390fd5b6127108111156101a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019d90610927565b60405180910390fd5b826007819055508160088190555080600e819055506001600a5f6101000a81548160ff0219169083151502179055505050505050610945565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6102ff826102b9565b810181811067ffffffffffffffff8211171561031e5761031d6102c9565b5b80604052505050565b5f6103306102a0565b905061033c82826102f6565b919050565b5f67ffffffffffffffff82111561035b5761035a6102c9565b5b610364826102b9565b9050602081019050919050565b8281835e5f83830152505050565b5f61039161038c84610341565b610327565b9050828152602081018484840111156103ad576103ac6102b5565b5b6103b8848285610371565b509392505050565b5f82601f8301126103d4576103d36102b1565b5b81516103e484826020860161037f565b91505092915050565b5f819050919050565b6103ff816103ed565b8114610409575f5ffd5b50565b5f8151905061041a816103f6565b92915050565b5f5f5f5f5f60a08688031215610439576104386102a9565b5b5f86015167ffffffffffffffff811115610456576104556102ad565b5b610462888289016103c0565b955050602086015167ffffffffffffffff811115610483576104826102ad565b5b61048f888289016103c0565b94505060406104a08882890161040c565b93505060606104b18882890161040c565b92505060806104c28882890161040c565b9150509295509295909350565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104f8826104cf565b9050919050565b610508816104ee565b82525050565b5f6020820190506105215f8301846104ff565b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061057557607f821691505b60208210810361058857610587610531565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105ea7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105af565b6105f486836105af565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61062f61062a610625846103ed565b61060c565b6103ed565b9050919050565b5f819050919050565b61064883610615565b61065c61065482610636565b8484546105bb565b825550505050565b5f5f905090565b610673610664565b61067e81848461063f565b505050565b5b818110156106a1576106965f8261066b565b600181019050610684565b5050565b601f8211156106e6576106b78161058e565b6106c0846105a0565b810160208510156106cf578190505b6106e36106db856105a0565b830182610683565b50505b505050565b5f82821c905092915050565b5f6107065f19846008026106eb565b1980831691505092915050565b5f61071e83836106f7565b9150826002028217905092915050565b61073782610527565b67ffffffffffffffff8111156107505761074f6102c9565b5b61075a825461055e565b6107658282856106a5565b5f60209050601f831160018114610796575f8415610784578287015190505b61078e8582610713565b8655506107f5565b601f1984166107a48661058e565b5f5b828110156107cb578489015182556001820191506020850194506020810190506107a6565b868310156107e857848901516107e4601f8916826106f7565b8355505b6001600288020188555050505b505050505050565b5f82825260208201905092915050565b7f52617465206d7573742062652067726561746572207468616e203000000000005f82015250565b5f610841601b836107fd565b915061084c8261080d565b602082019050919050565b5f6020820190508181035f83015261086e81610835565b9050919050565b7f476f616c206d7573742062652067726561746572207468616e203000000000005f82015250565b5f6108a9601b836107fd565b91506108b482610875565b602082019050919050565b5f6020820190508181035f8301526108d68161089d565b9050919050565b7f566f7465732070657263656e74206d61782031303025000000000000000000005f82015250565b5f6109116016836107fd565b915061091c826108dd565b602082019050919050565b5f6020820190508181035f83015261093e81610905565b9050919050565b6120f6806109525f395ff3fe608060405260043610610180575f3560e01c8063636d6c9d116100d05780638da5cb5b11610089578063a9059cbb11610063578063a9059cbb1461052a578063d7bb99ba14610566578063dd62ed3e14610570578063f2fde38b146105ac57610180565b80638da5cb5b146104c057806394b6a4b8146104ea57806395d89b411461050057610180565b8063636d6c9d146103c65780636681b9fd146103f057806370a082311461041a578063715018a6146104565780637a3a0e841461046c5780638b7afe2e1461049657610180565b806324600fc31161013d5780633e186253116101175780633e186253146103205780633fc5144e1461034a57806342e94c90146103605780635ec1cfb71461039c57610180565b806324600fc3146102b65780632c4e722e146102cc578063313ce567146102f657610180565b806306fdde0314610184578063095ea7b3146101ae57806309eef43e146101ea5780630d15fd771461022657806318160ddd1461025057806323b872dd1461027a575b5f5ffd5b34801561018f575f5ffd5b506101986105d4565b6040516101a59190611833565b60405180910390f35b3480156101b9575f5ffd5b506101d460048036038101906101cf91906118e4565b610664565b6040516101e1919061193c565b60405180910390f35b3480156101f5575f5ffd5b50610210600480360381019061020b9190611955565b610686565b60405161021d919061193c565b60405180910390f35b348015610231575f5ffd5b5061023a6106a3565b604051610247919061198f565b60405180910390f35b34801561025b575f5ffd5b506102646106a9565b604051610271919061198f565b60405180910390f35b348015610285575f5ffd5b506102a0600480360381019061029b91906119a8565b6106b2565b6040516102ad919061193c565b60405180910390f35b3480156102c1575f5ffd5b506102ca6106e0565b005b3480156102d7575f5ffd5b506102e06108fb565b6040516102ed919061198f565b60405180910390f35b348015610301575f5ffd5b5061030a610901565b6040516103179190611a13565b60405180910390f35b34801561032b575f5ffd5b50610334610909565b604051610341919061193c565b60405180910390f35b348015610355575f5ffd5b5061035e610936565b005b34801561036b575f5ffd5b5061038660048036038101906103819190611955565b6109d3565b604051610393919061198f565b60405180910390f35b3480156103a7575f5ffd5b506103b06109e8565b6040516103bd919061198f565b60405180910390f35b3480156103d1575f5ffd5b506103da6109ee565b6040516103e7919061193c565b60405180910390f35b3480156103fb575f5ffd5b50610404610a00565b604051610411919061198f565b60405180910390f35b348015610425575f5ffd5b50610440600480360381019061043b9190611955565b610a06565b60405161044d919061198f565b60405180910390f35b348015610461575f5ffd5b5061046a610a4c565b005b348015610477575f5ffd5b50610480610a5f565b60405161048d919061198f565b60405180910390f35b3480156104a1575f5ffd5b506104aa610a65565b6040516104b7919061198f565b60405180910390f35b3480156104cb575f5ffd5b506104d4610a6c565b6040516104e19190611a3b565b60405180910390f35b3480156104f5575f5ffd5b506104fe610a93565b005b34801561050b575f5ffd5b50610514610c9b565b6040516105219190611833565b60405180910390f35b348015610535575f5ffd5b50610550600480360381019061054b91906118e4565b610d2b565b60405161055d919061193c565b60405180910390f35b61056e610d4d565b005b34801561057b575f5ffd5b5061059660048036038101906105919190611a54565b610f17565b6040516105a3919061198f565b60405180910390f35b3480156105b7575f5ffd5b506105d260048036038101906105cd9190611955565b610f99565b005b6060600580546105e390611abf565b80601f016020809104026020016040519081016040528092919081815260200182805461060f90611abf565b801561065a5780601f106106315761010080835404028352916020019161065a565b820191905f5260205f20905b81548152906001019060200180831161063d57829003601f168201915b5050505050905090565b5f5f61066e61101d565b905061067b818585611024565b600191505092915050565b600c602052805f5260405f205f915054906101000a900460ff1681565b600d5481565b5f600454905090565b5f5f6106bc61101d565b90506106c9858285611036565b6106d48585856110c9565b60019150509392505050565b6106e86111b9565b6106f0611240565b600a5f9054906101000a900460ff161561073f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073690611b39565b60405180910390fd5b5f612710600e546009546107539190611b84565b61075d9190611bf2565b905080600d5410156107a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079b90611c6c565b60405180910390fd5b5f4790505f81116107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190611cd4565b60405180910390fd5b5f6107f3610a6c565b73ffffffffffffffffffffffffffffffffffffffff168260405161081690611d1f565b5f6040518083038185875af1925050503d805f8114610850576040519150601f19603f3d011682016040523d82523d5f602084013e610855565b606091505b5050905080610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090611d7d565b60405180910390fd5b6108a1610a6c565b73ffffffffffffffffffffffffffffffffffffffff167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d836040516108e6919061198f565b60405180910390a25050506108f961128f565b565b60075481565b5f6012905090565b5f5f612710600e5460095461091e9190611b84565b6109289190611bf2565b905080600d54101591505090565b61093e6111b9565b600a5f9054906101000a900460ff1661098c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098390611de5565b60405180910390fd5b5f600a5f6101000a81548160ff0219169083151502179055507fbdc0e037eadb8b0c782400faf1b352631d6cd8bdf086c0e7eb0028e210041dc960405160405180910390a1565b600b602052805f5260405f205f915090505481565b600e5481565b600a5f9054906101000a900460ff1681565b60095481565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610a546111b9565b610a5d5f611298565b565b60085481565b5f47905090565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a9b611240565b5f600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205411610b1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1190611e4d565b60405180910390fd5b600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610ba4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9b90611eb5565b60405180910390fd5b6001600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600d5f828254610c479190611ed3565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f16a9aa39af49f169911e977347975198c503525f7240d6892a626f0227642fce60405160405180910390a2610c9961128f565b565b606060068054610caa90611abf565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd690611abf565b8015610d215780601f10610cf857610100808354040283529160200191610d21565b820191905f5260205f20905b815481529060010190602001808311610d0457829003601f168201915b5050505050905090565b5f5f610d3561101d565b9050610d428185856110c9565b600191505092915050565b610d55611240565b600a5f9054906101000a900460ff16610da3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9a90611f50565b60405180910390fd5b5f3411610de5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddc90611fde565b60405180910390fd5b5f60075434610df49190611b84565b905034600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610e429190611ed3565b925050819055503460095f828254610e5a9190611ed3565b92505081905550610e6b3382611359565b3373ffffffffffffffffffffffffffffffffffffffff167f5f7675b09617d2c9fa4fd13058ee5877a9538f626b0308816736e83748a450403483604051610eb3929190611ffc565b60405180910390a260085460095410610f0c575f600a5f6101000a81548160ff0219169083151502179055507fbdc0e037eadb8b0c782400faf1b352631d6cd8bdf086c0e7eb0028e210041dc960405160405180910390a15b50610f1561128f565b565b5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610fa16111b9565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611011575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110089190611a3b565b60405180910390fd5b61101a81611298565b50565b5f33905090565b61103183838360016113d8565b505050565b5f6110418484610f17565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156110c357818110156110b4578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016110ab93929190612023565b60405180910390fd5b6110c284848484035f6113d8565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611139575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111309190611a3b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111a9575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111a09190611a3b565b60405180910390fd5b6111b48383836115a7565b505050565b6111c161101d565b73ffffffffffffffffffffffffffffffffffffffff166111df610a6c565b73ffffffffffffffffffffffffffffffffffffffff161461123e5761120261101d565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112359190611a3b565b60405180910390fd5b565b600260015403611285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127c906120a2565b60405180910390fd5b6002600181905550565b60018081905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113c9575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113c09190611a3b565b60405180910390fd5b6113d45f83836115a7565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611448575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161143f9190611a3b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114b8575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114af9190611a3b565b60405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156115a1578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611598919061198f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115f7578060045f8282546115eb9190611ed3565b925050819055506116c7565b5f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611681578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161167893929190612023565b60405180910390fd5b81810360025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361170e578060045f8282540392505081905550611759565b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117b6919061198f565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611805826117c3565b61180f81856117cd565b935061181f8185602086016117dd565b611828816117eb565b840191505092915050565b5f6020820190508181035f83015261184b81846117fb565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61188082611857565b9050919050565b61189081611876565b811461189a575f5ffd5b50565b5f813590506118ab81611887565b92915050565b5f819050919050565b6118c3816118b1565b81146118cd575f5ffd5b50565b5f813590506118de816118ba565b92915050565b5f5f604083850312156118fa576118f9611853565b5b5f6119078582860161189d565b9250506020611918858286016118d0565b9150509250929050565b5f8115159050919050565b61193681611922565b82525050565b5f60208201905061194f5f83018461192d565b92915050565b5f6020828403121561196a57611969611853565b5b5f6119778482850161189d565b91505092915050565b611989816118b1565b82525050565b5f6020820190506119a25f830184611980565b92915050565b5f5f5f606084860312156119bf576119be611853565b5b5f6119cc8682870161189d565b93505060206119dd8682870161189d565b92505060406119ee868287016118d0565b9150509250925092565b5f60ff82169050919050565b611a0d816119f8565b82525050565b5f602082019050611a265f830184611a04565b92915050565b611a3581611876565b82525050565b5f602082019050611a4e5f830184611a2c565b92915050565b5f5f60408385031215611a6a57611a69611853565b5b5f611a778582860161189d565b9250506020611a888582860161189d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ad657607f821691505b602082108103611ae957611ae8611a92565b5b50919050565b7f46756e64696e67207374696c6c206163746976650000000000000000000000005f82015250565b5f611b236014836117cd565b9150611b2e82611aef565b602082019050919050565b5f6020820190508181035f830152611b5081611b17565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611b8e826118b1565b9150611b99836118b1565b9250828202611ba7816118b1565b91508282048414831517611bbe57611bbd611b57565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611bfc826118b1565b9150611c07836118b1565b925082611c1757611c16611bc5565b5b828204905092915050565b7f4e6f7420656e6f75676820766f746573000000000000000000000000000000005f82015250565b5f611c566010836117cd565b9150611c6182611c22565b602082019050919050565b5f6020820190508181035f830152611c8381611c4a565b9050919050565b7f4e6f2066756e647320746f2077697468647261770000000000000000000000005f82015250565b5f611cbe6014836117cd565b9150611cc982611c8a565b602082019050919050565b5f6020820190508181035f830152611ceb81611cb2565b9050919050565b5f81905092915050565b50565b5f611d0a5f83611cf2565b9150611d1582611cfc565b5f82019050919050565b5f611d2982611cff565b9150819050919050565b7f5769746864726177616c206661696c65640000000000000000000000000000005f82015250565b5f611d676011836117cd565b9150611d7282611d33565b602082019050919050565b5f6020820190508181035f830152611d9481611d5b565b9050919050565b7f46756e64696e6720616c726561647920656e64656400000000000000000000005f82015250565b5f611dcf6015836117cd565b9150611dda82611d9b565b602082019050919050565b5f6020820190508181035f830152611dfc81611dc3565b9050919050565b7f4d75737420626520616e20696e766573746f72000000000000000000000000005f82015250565b5f611e376013836117cd565b9150611e4282611e03565b602082019050919050565b5f6020820190508181035f830152611e6481611e2b565b9050919050565b7f416c726561647920766f746564000000000000000000000000000000000000005f82015250565b5f611e9f600d836117cd565b9150611eaa82611e6b565b602082019050919050565b5f6020820190508181035f830152611ecc81611e93565b9050919050565b5f611edd826118b1565b9150611ee8836118b1565b9250828201905080821115611f0057611eff611b57565b5b92915050565b7f46756e64696e6720697320636c6f7365640000000000000000000000000000005f82015250565b5f611f3a6011836117cd565b9150611f4582611f06565b602082019050919050565b5f6020820190508181035f830152611f6781611f2e565b9050919050565b7f436f6e747269627574696f6e206d7573742062652067726561746572207468615f8201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b5f611fc86023836117cd565b9150611fd382611f6e565b604082019050919050565b5f6020820190508181035f830152611ff581611fbc565b9050919050565b5f60408201905061200f5f830185611980565b61201c6020830184611980565b9392505050565b5f6060820190506120365f830186611a2c565b6120436020830185611980565b6120506040830184611980565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61208c601f836117cd565b915061209782612058565b602082019050919050565b5f6020820190508181035f8301526120b981612080565b905091905056fea2646970667358221220ec25427f5b9c2f019666777f7e0e1efcdb41cc01abe12224aa28cad73530977b64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2A48 CODESIZE SUB DUP1 PUSH2 0x2A48 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x420 JUMP JUMPDEST DUP5 DUP5 CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0x1DF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 SWAP1 DUP2 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x72E JUMP JUMPDEST POP DUP1 PUSH1 0x6 SWAP1 DUP2 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x72E JUMP JUMPDEST POP POP POP PUSH0 DUP4 GT PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x161 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x158 SWAP1 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D SWAP1 PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP PUSH2 0x945 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2FF DUP3 PUSH2 0x2B9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x31E JUMPI PUSH2 0x31D PUSH2 0x2C9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x330 PUSH2 0x2A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x33C DUP3 DUP3 PUSH2 0x2F6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x35B JUMPI PUSH2 0x35A PUSH2 0x2C9 JUMP JUMPDEST JUMPDEST PUSH2 0x364 DUP3 PUSH2 0x2B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x391 PUSH2 0x38C DUP5 PUSH2 0x341 JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3AD JUMPI PUSH2 0x3AC PUSH2 0x2B5 JUMP JUMPDEST JUMPDEST PUSH2 0x3B8 DUP5 DUP3 DUP6 PUSH2 0x371 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D4 JUMPI PUSH2 0x3D3 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x3E4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x37F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FF DUP2 PUSH2 0x3ED JUMP JUMPDEST DUP2 EQ PUSH2 0x409 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x41A DUP2 PUSH2 0x3F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x439 JUMPI PUSH2 0x438 PUSH2 0x2A9 JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x456 JUMPI PUSH2 0x455 PUSH2 0x2AD JUMP JUMPDEST JUMPDEST PUSH2 0x462 DUP9 DUP3 DUP10 ADD PUSH2 0x3C0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x483 JUMPI PUSH2 0x482 PUSH2 0x2AD JUMP JUMPDEST JUMPDEST PUSH2 0x48F DUP9 DUP3 DUP10 ADD PUSH2 0x3C0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4A0 DUP9 DUP3 DUP10 ADD PUSH2 0x40C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4B1 DUP9 DUP3 DUP10 ADD PUSH2 0x40C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x4C2 DUP9 DUP3 DUP10 ADD PUSH2 0x40C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4F8 DUP3 PUSH2 0x4CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x508 DUP2 PUSH2 0x4EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x521 PUSH0 DUP4 ADD DUP5 PUSH2 0x4FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x575 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x588 JUMPI PUSH2 0x587 PUSH2 0x531 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x5EA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5AF JUMP JUMPDEST PUSH2 0x5F4 DUP7 DUP4 PUSH2 0x5AF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x62F PUSH2 0x62A PUSH2 0x625 DUP5 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x648 DUP4 PUSH2 0x615 JUMP JUMPDEST PUSH2 0x65C PUSH2 0x654 DUP3 PUSH2 0x636 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5BB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x673 PUSH2 0x664 JUMP JUMPDEST PUSH2 0x67E DUP2 DUP5 DUP5 PUSH2 0x63F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6A1 JUMPI PUSH2 0x696 PUSH0 DUP3 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x684 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x6E6 JUMPI PUSH2 0x6B7 DUP2 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x6C0 DUP5 PUSH2 0x5A0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x6CF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x6E3 PUSH2 0x6DB DUP6 PUSH2 0x5A0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x683 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x706 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x6EB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x71E DUP4 DUP4 PUSH2 0x6F7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x737 DUP3 PUSH2 0x527 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x750 JUMPI PUSH2 0x74F PUSH2 0x2C9 JUMP JUMPDEST JUMPDEST PUSH2 0x75A DUP3 SLOAD PUSH2 0x55E JUMP JUMPDEST PUSH2 0x765 DUP3 DUP3 DUP6 PUSH2 0x6A5 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x796 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x784 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x78E DUP6 DUP3 PUSH2 0x713 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x7A4 DUP7 PUSH2 0x58E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7CB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x7E8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x7E4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x6F7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52617465206D7573742062652067726561746572207468616E20300000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x841 PUSH1 0x1B DUP4 PUSH2 0x7FD JUMP JUMPDEST SWAP2 POP PUSH2 0x84C DUP3 PUSH2 0x80D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x86E DUP2 PUSH2 0x835 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F616C206D7573742062652067726561746572207468616E20300000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8A9 PUSH1 0x1B DUP4 PUSH2 0x7FD JUMP JUMPDEST SWAP2 POP PUSH2 0x8B4 DUP3 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8D6 DUP2 PUSH2 0x89D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x566F7465732070657263656E74206D6178203130302500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x911 PUSH1 0x16 DUP4 PUSH2 0x7FD JUMP JUMPDEST SWAP2 POP PUSH2 0x91C DUP3 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x93E DUP2 PUSH2 0x905 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F6 DUP1 PUSH2 0x952 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x180 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x636D6C9D GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xD7BB99BA EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5AC JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x94B6A4B8 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x500 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x636D6C9D EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x6681B9FD EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x7A3A0E84 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x8B7AFE2E EQ PUSH2 0x496 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x24600FC3 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x3E186253 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x3E186253 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x3FC5144E EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x42E94C90 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x5EC1CFB7 EQ PUSH2 0x39C JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2F6 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x9EEF43E EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xD15FD77 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x27A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x198 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1955 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x264 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x6E0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x936 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1955 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3B0 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3DA PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x404 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x425 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x1955 JUMP JUMPDEST PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x46A PUSH2 0xA4C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x477 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x480 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4AA PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4D4 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4FE PUSH2 0xA93 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x514 PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x550 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56E PUSH2 0xD4D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x596 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x1955 JUMP JUMPDEST PUSH2 0xF99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x5E3 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x60F SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x65A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x631 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x65A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x63D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x66E PUSH2 0x101D JUMP JUMPDEST SWAP1 POP PUSH2 0x67B DUP2 DUP6 DUP6 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6BC PUSH2 0x101D JUMP JUMPDEST SWAP1 POP PUSH2 0x6C9 DUP6 DUP3 DUP6 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x6D4 DUP6 DUP6 DUP6 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0x11B9 JUMP JUMPDEST PUSH2 0x6F0 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x736 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0xE SLOAD PUSH1 0x9 SLOAD PUSH2 0x753 SWAP2 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x75D SWAP2 SWAP1 PUSH2 0x1BF2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD SLOAD LT ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x7F3 PUSH2 0xA6C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x816 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x855 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x890 SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A1 PUSH2 0xA6C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D DUP4 PUSH1 0x40 MLOAD PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x8F9 PUSH2 0x128F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x2710 PUSH1 0xE SLOAD PUSH1 0x9 SLOAD PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x1BF2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD SLOAD LT ISZERO SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x93E PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x98C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x983 SWAP1 PUSH2 0x1DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xBDC0E037EADB8B0C782400FAF1B352631D6CD8BDF086C0E7EB0028E210041DC9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA54 PUSH2 0x11B9 JUMP JUMPDEST PUSH2 0xA5D PUSH0 PUSH2 0x1298 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA9B PUSH2 0x1240 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0xB1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB11 SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9B SWAP1 PUSH2 0x1EB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x16A9AA39AF49F169911E977347975198C503525F7240D6892A626F0227642FCE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xC99 PUSH2 0x128F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0xCAA SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCD6 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD21 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCF8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD21 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD04 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xD35 PUSH2 0x101D JUMP JUMPDEST SWAP1 POP PUSH2 0xD42 DUP2 DUP6 DUP6 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD55 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9A SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xDE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDC SWAP1 PUSH2 0x1FDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 SLOAD CALLVALUE PUSH2 0xDF4 SWAP2 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE42 SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE5A SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE6B CALLER DUP3 PUSH2 0x1359 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5F7675B09617D2C9FA4FD13058EE5877A9538F626B0308816736E83748A45040 CALLVALUE DUP4 PUSH1 0x40 MLOAD PUSH2 0xEB3 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD LT PUSH2 0xF0C JUMPI PUSH0 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xBDC0E037EADB8B0C782400FAF1B352631D6CD8BDF086C0E7EB0028E210041DC9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP PUSH2 0xF15 PUSH2 0x128F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFA1 PUSH2 0x11B9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1011 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1008 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101A DUP2 PUSH2 0x1298 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1031 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1041 DUP5 DUP5 PUSH2 0xF17 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x10C3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10B4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C2 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1139 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1130 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11A9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B4 DUP4 DUP4 DUP4 PUSH2 0x15A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x11C1 PUSH2 0x101D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11DF PUSH2 0xA6C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x123E JUMPI PUSH2 0x1202 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1235 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127C SWAP1 PUSH2 0x20A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13C9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C0 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13D4 PUSH0 DUP4 DUP4 PUSH2 0x15A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1448 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14B8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AF SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x15A1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1598 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15F7 JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15EB SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16C7 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1681 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1678 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x170E JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1759 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17B6 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1805 DUP3 PUSH2 0x17C3 JUMP JUMPDEST PUSH2 0x180F DUP2 DUP6 PUSH2 0x17CD JUMP JUMPDEST SWAP4 POP PUSH2 0x181F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17DD JUMP JUMPDEST PUSH2 0x1828 DUP2 PUSH2 0x17EB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x184B DUP2 DUP5 PUSH2 0x17FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1880 DUP3 PUSH2 0x1857 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1890 DUP2 PUSH2 0x1876 JUMP JUMPDEST DUP2 EQ PUSH2 0x189A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18AB DUP2 PUSH2 0x1887 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18C3 DUP2 PUSH2 0x18B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x18CD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18DE DUP2 PUSH2 0x18BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18FA JUMPI PUSH2 0x18F9 PUSH2 0x1853 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1907 DUP6 DUP3 DUP7 ADD PUSH2 0x189D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1918 DUP6 DUP3 DUP7 ADD PUSH2 0x18D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH2 0x1922 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x194F PUSH0 DUP4 ADD DUP5 PUSH2 0x192D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x196A JUMPI PUSH2 0x1969 PUSH2 0x1853 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1977 DUP5 DUP3 DUP6 ADD PUSH2 0x189D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1989 DUP2 PUSH2 0x18B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1980 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19BF JUMPI PUSH2 0x19BE PUSH2 0x1853 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19CC DUP7 DUP3 DUP8 ADD PUSH2 0x189D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19DD DUP7 DUP3 DUP8 ADD PUSH2 0x189D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19EE DUP7 DUP3 DUP8 ADD PUSH2 0x18D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0D DUP2 PUSH2 0x19F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A26 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A35 DUP2 PUSH2 0x1876 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4E PUSH0 DUP4 ADD DUP5 PUSH2 0x1A2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH2 0x1A69 PUSH2 0x1853 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A77 DUP6 DUP3 DUP7 ADD PUSH2 0x189D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A88 DUP6 DUP3 DUP7 ADD PUSH2 0x189D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AD6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AE9 JUMPI PUSH2 0x1AE8 PUSH2 0x1A92 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E64696E67207374696C6C20616374697665000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B23 PUSH1 0x14 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2E DUP3 PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B50 DUP2 PUSH2 0x1B17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B8E DUP3 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B99 DUP4 PUSH2 0x18B1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1BA7 DUP2 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1BBE JUMPI PUSH2 0x1BBD PUSH2 0x1B57 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BFC DUP3 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C07 DUP4 PUSH2 0x18B1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C17 JUMPI PUSH2 0x1C16 PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820766F74657300000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C56 PUSH1 0x10 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1C61 DUP3 PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C83 DUP2 PUSH2 0x1C4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2066756E647320746F207769746864726177000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CBE PUSH1 0x14 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC9 DUP3 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CEB DUP2 PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1D0A PUSH0 DUP4 PUSH2 0x1CF2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D15 DUP3 PUSH2 0x1CFC JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D29 DUP3 PUSH2 0x1CFF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177616C206661696C6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D67 PUSH1 0x11 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1D72 DUP3 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D94 DUP2 PUSH2 0x1D5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E64696E6720616C726561647920656E6465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DCF PUSH1 0x15 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDA DUP3 PUSH2 0x1D9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DFC DUP2 PUSH2 0x1DC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D75737420626520616E20696E766573746F7200000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E37 PUSH1 0x13 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1E42 DUP3 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E64 DUP2 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920766F74656400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E9F PUSH1 0xD DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAA DUP3 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ECC DUP2 PUSH2 0x1E93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EDD DUP3 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE8 DUP4 PUSH2 0x18B1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F00 JUMPI PUSH2 0x1EFF PUSH2 0x1B57 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x46756E64696E6720697320636C6F736564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F3A PUSH1 0x11 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1F45 DUP3 PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F67 DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E747269627574696F6E206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FC8 PUSH1 0x23 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD3 DUP3 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FF5 DUP2 PUSH2 0x1FBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x200F PUSH0 DUP4 ADD DUP6 PUSH2 0x1980 JUMP JUMPDEST PUSH2 0x201C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1980 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2036 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x2043 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1980 JUMP JUMPDEST PUSH2 0x2050 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1980 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x208C PUSH1 0x1F DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x2097 DUP3 PUSH2 0x2058 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20B9 DUP2 PUSH2 0x2080 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EOFCREATE 0x25 TIMESTAMP PUSH32 0x5B9C2F019666777F7E0E1EFCDB41CC01ABE12224AA28CAD73530977B64736F6C PUSH4 0x4300081D STOP CALLER ",
							"sourceMap": "297:3574:7:-:0;;;1020:596;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1207:5;1214:7;1239:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:2;1821:7;:22;;;;1675:5:3;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1281:1:7::2;1273:5;:9;1265:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1347:1;1332:12;:16;1324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1426:5;1398:24;:33;;1390:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1476:5;1469:4;:12;;;;1505;1491:11;:26;;;;1553:24;1527:23;:50;;;;1605:4;1587:15;;:22;;;;;;;;;;;;;;;;;;1020:596:::0;;;;;297:3574;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:77::-;2607:7;2636:5;2625:16;;2570:77;;;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:63;;2765:1;2762;2755:12;2706:63;2653:122;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:1323::-;3056:6;3064;3072;3080;3088;3137:3;3125:9;3116:7;3112:23;3108:33;3105:120;;;3144:79;;:::i;:::-;3105:120;3285:1;3274:9;3270:17;3264:24;3315:18;3307:6;3304:30;3301:117;;;3337:79;;:::i;:::-;3301:117;3442:74;3508:7;3499:6;3488:9;3484:22;3442:74;:::i;:::-;3432:84;;3235:291;3586:2;3575:9;3571:18;3565:25;3617:18;3609:6;3606:30;3603:117;;;3639:79;;:::i;:::-;3603:117;3744:74;3810:7;3801:6;3790:9;3786:22;3744:74;:::i;:::-;3734:84;;3536:292;3867:2;3893:64;3949:7;3940:6;3929:9;3925:22;3893:64;:::i;:::-;3883:74;;3838:129;4006:2;4032:64;4088:7;4079:6;4068:9;4064:22;4032:64;:::i;:::-;4022:74;;3977:129;4145:3;4172:64;4228:7;4219:6;4208:9;4204:22;4172:64;:::i;:::-;4162:74;;4116:130;2930:1323;;;;;;;;:::o;4259:126::-;4296:7;4336:42;4329:5;4325:54;4314:65;;4259:126;;;:::o;4391:96::-;4428:7;4457:24;4475:5;4457:24;:::i;:::-;4446:35;;4391:96;;;:::o;4493:118::-;4580:24;4598:5;4580:24;:::i;:::-;4575:3;4568:37;4493:118;;:::o;4617:222::-;4710:4;4748:2;4737:9;4733:18;4725:26;;4761:71;4829:1;4818:9;4814:17;4805:6;4761:71;:::i;:::-;4617:222;;;;:::o;4845:99::-;4897:6;4931:5;4925:12;4915:22;;4845:99;;;:::o;4950:180::-;4998:77;4995:1;4988:88;5095:4;5092:1;5085:15;5119:4;5116:1;5109:15;5136:320;5180:6;5217:1;5211:4;5207:12;5197:22;;5264:1;5258:4;5254:12;5285:18;5275:81;;5341:4;5333:6;5329:17;5319:27;;5275:81;5403:2;5395:6;5392:14;5372:18;5369:38;5366:84;;5422:18;;:::i;:::-;5366:84;5187:269;5136:320;;;:::o;5462:141::-;5511:4;5534:3;5526:11;;5557:3;5554:1;5547:14;5591:4;5588:1;5578:18;5570:26;;5462:141;;;:::o;5609:93::-;5646:6;5693:2;5688;5681:5;5677:14;5673:23;5663:33;;5609:93;;;:::o;5708:107::-;5752:8;5802:5;5796:4;5792:16;5771:37;;5708:107;;;;:::o;5821:393::-;5890:6;5940:1;5928:10;5924:18;5963:97;5993:66;5982:9;5963:97;:::i;:::-;6081:39;6111:8;6100:9;6081:39;:::i;:::-;6069:51;;6153:4;6149:9;6142:5;6138:21;6129:30;;6202:4;6192:8;6188:19;6181:5;6178:30;6168:40;;5897:317;;5821:393;;;;;:::o;6220:60::-;6248:3;6269:5;6262:12;;6220:60;;;:::o;6286:142::-;6336:9;6369:53;6387:34;6396:24;6414:5;6396:24;:::i;:::-;6387:34;:::i;:::-;6369:53;:::i;:::-;6356:66;;6286:142;;;:::o;6434:75::-;6477:3;6498:5;6491:12;;6434:75;;;:::o;6515:269::-;6625:39;6656:7;6625:39;:::i;:::-;6686:91;6735:41;6759:16;6735:41;:::i;:::-;6727:6;6720:4;6714:11;6686:91;:::i;:::-;6680:4;6673:105;6591:193;6515:269;;;:::o;6790:73::-;6835:3;6856:1;6849:8;;6790:73;:::o;6869:189::-;6946:32;;:::i;:::-;6987:65;7045:6;7037;7031:4;6987:65;:::i;:::-;6922:136;6869:189;;:::o;7064:186::-;7124:120;7141:3;7134:5;7131:14;7124:120;;;7195:39;7232:1;7225:5;7195:39;:::i;:::-;7168:1;7161:5;7157:13;7148:22;;7124:120;;;7064:186;;:::o;7256:543::-;7357:2;7352:3;7349:11;7346:446;;;7391:38;7423:5;7391:38;:::i;:::-;7475:29;7493:10;7475:29;:::i;:::-;7465:8;7461:44;7658:2;7646:10;7643:18;7640:49;;;7679:8;7664:23;;7640:49;7702:80;7758:22;7776:3;7758:22;:::i;:::-;7748:8;7744:37;7731:11;7702:80;:::i;:::-;7361:431;;7346:446;7256:543;;;:::o;7805:117::-;7859:8;7909:5;7903:4;7899:16;7878:37;;7805:117;;;;:::o;7928:169::-;7972:6;8005:51;8053:1;8049:6;8041:5;8038:1;8034:13;8005:51;:::i;:::-;8001:56;8086:4;8080;8076:15;8066:25;;7979:118;7928:169;;;;:::o;8102:295::-;8178:4;8324:29;8349:3;8343:4;8324:29;:::i;:::-;8316:37;;8386:3;8383:1;8379:11;8373:4;8370:21;8362:29;;8102:295;;;;:::o;8402:1395::-;8519:37;8552:3;8519:37;:::i;:::-;8621:18;8613:6;8610:30;8607:56;;;8643:18;;:::i;:::-;8607:56;8687:38;8719:4;8713:11;8687:38;:::i;:::-;8772:67;8832:6;8824;8818:4;8772:67;:::i;:::-;8866:1;8890:4;8877:17;;8922:2;8914:6;8911:14;8939:1;8934:618;;;;9596:1;9613:6;9610:77;;;9662:9;9657:3;9653:19;9647:26;9638:35;;9610:77;9713:67;9773:6;9766:5;9713:67;:::i;:::-;9707:4;9700:81;9569:222;8904:887;;8934:618;8986:4;8982:9;8974:6;8970:22;9020:37;9052:4;9020:37;:::i;:::-;9079:1;9093:208;9107:7;9104:1;9101:14;9093:208;;;9186:9;9181:3;9177:19;9171:26;9163:6;9156:42;9237:1;9229:6;9225:14;9215:24;;9284:2;9273:9;9269:18;9256:31;;9130:4;9127:1;9123:12;9118:17;;9093:208;;;9329:6;9320:7;9317:19;9314:179;;;9387:9;9382:3;9378:19;9372:26;9430:48;9472:4;9464:6;9460:17;9449:9;9430:48;:::i;:::-;9422:6;9415:64;9337:156;9314:179;9539:1;9535;9527:6;9523:14;9519:22;9513:4;9506:36;8941:611;;;8904:887;;8494:1303;;;8402:1395;;:::o;9803:169::-;9887:11;9921:6;9916:3;9909:19;9961:4;9956:3;9952:14;9937:29;;9803:169;;;;:::o;9978:177::-;10118:29;10114:1;10106:6;10102:14;10095:53;9978:177;:::o;10161:366::-;10303:3;10324:67;10388:2;10383:3;10324:67;:::i;:::-;10317:74;;10400:93;10489:3;10400:93;:::i;:::-;10518:2;10513:3;10509:12;10502:19;;10161:366;;;:::o;10533:419::-;10699:4;10737:2;10726:9;10722:18;10714:26;;10786:9;10780:4;10776:20;10772:1;10761:9;10757:17;10750:47;10814:131;10940:4;10814:131;:::i;:::-;10806:139;;10533:419;;;:::o;10958:177::-;11098:29;11094:1;11086:6;11082:14;11075:53;10958:177;:::o;11141:366::-;11283:3;11304:67;11368:2;11363:3;11304:67;:::i;:::-;11297:74;;11380:93;11469:3;11380:93;:::i;:::-;11498:2;11493:3;11489:12;11482:19;;11141:366;;;:::o;11513:419::-;11679:4;11717:2;11706:9;11702:18;11694:26;;11766:9;11760:4;11756:20;11752:1;11741:9;11737:17;11730:47;11794:131;11920:4;11794:131;:::i;:::-;11786:139;;11513:419;;;:::o;11938:172::-;12078:24;12074:1;12066:6;12062:14;12055:48;11938:172;:::o;12116:366::-;12258:3;12279:67;12343:2;12338:3;12279:67;:::i;:::-;12272:74;;12355:93;12444:3;12355:93;:::i;:::-;12473:2;12468:3;12464:12;12457:19;;12116:366;;;:::o;12488:419::-;12654:4;12692:2;12681:9;12677:18;12669:26;;12741:9;12735:4;12731:20;12727:1;12716:9;12712:17;12705:47;12769:131;12895:4;12769:131;:::i;:::-;12761:139;;12488:419;;;:::o;297:3574:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_755": {
									"entryPoint": 4132,
									"id": 755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_815": {
									"entryPoint": 5080,
									"id": 815,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4537,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 4953,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_980": {
									"entryPoint": 4125,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": 4751,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 4672,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_863": {
									"entryPoint": 4150,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4760,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_594": {
									"entryPoint": 4297,
									"id": 594,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 5543,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_491": {
									"entryPoint": 3863,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_515": {
									"entryPoint": 1636,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_450": {
									"entryPoint": 2566,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@contractBalance_1344": {
									"entryPoint": 2661,
									"id": 1344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@contribute_1177": {
									"entryPoint": 3405,
									"id": 1177,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contributions_1022": {
									"entryPoint": 2515,
									"id": 1022,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_428": {
									"entryPoint": 2305,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@endFundingManually_1331": {
									"entryPoint": 2358,
									"id": 1331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fundingGoal_1014": {
									"entryPoint": 2655,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fundsRaised_1016": {
									"entryPoint": 2560,
									"id": 1016,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hasEnoughVotes_1312": {
									"entryPoint": 2313,
									"id": 1312,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasVoted_1026": {
									"entryPoint": 1670,
									"id": 1026,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isFundingActive_1018": {
									"entryPoint": 2542,
									"id": 1018,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_410": {
									"entryPoint": 1492,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2668,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rate_1012": {
									"entryPoint": 2299,
									"id": 1012,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2636,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requiredVotesPercentage_1030": {
									"entryPoint": 2536,
									"id": 1030,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_419": {
									"entryPoint": 3227,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_437": {
									"entryPoint": 1705,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalVotes_1028": {
									"entryPoint": 1699,
									"id": 1028,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_547": {
									"entryPoint": 1714,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3993,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_474": {
									"entryPoint": 3371,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@voteForFundRelease_1222": {
									"entryPoint": 2707,
									"id": 1222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawFunds_1292": {
									"entryPoint": 1760,
									"id": 1292,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d6472a439219175f58c2c24311e8dc196b2c1ebdd449fee5365e9b336929ab0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_167c9b3380513941ed45ad6c12ae68092c0fdbdf8dd00ce6e252f9bd866e577a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_589f77ce001b8beeda2f278d91ba16dd7c7bd1709ca2e7c12f193e44d84299d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5e5aa06e63518928aca28b9bd5d4b07f19d38bcb7e3ef13f7b9cb1a8a22ba4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cdbd805c137dcffd16d72dbea3cefe7001c5466d06748eaabed45649b8504a7e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dacec424514392f190ecf5d0b95a745954c9a31ddd7829502ac5c4498a85080d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8227,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d6472a439219175f58c2c24311e8dc196b2c1ebdd449fee5365e9b336929ab0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_167c9b3380513941ed45ad6c12ae68092c0fdbdf8dd00ce6e252f9bd866e577a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_589f77ce001b8beeda2f278d91ba16dd7c7bd1709ca2e7c12f193e44d84299d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5e5aa06e63518928aca28b9bd5d4b07f19d38bcb7e3ef13f7b9cb1a8a22ba4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cdbd805c137dcffd16d72dbea3cefe7001c5466d06748eaabed45649b8504a7e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dacec424514392f190ecf5d0b95a745954c9a31ddd7829502ac5c4498a85080d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8188,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6109,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6802,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6227,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d6472a439219175f58c2c24311e8dc196b2c1ebdd449fee5365e9b336929ab0": {
									"entryPoint": 7202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_167c9b3380513941ed45ad6c12ae68092c0fdbdf8dd00ce6e252f9bd866e577a": {
									"entryPoint": 7683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9": {
									"entryPoint": 7306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6": {
									"entryPoint": 7787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_589f77ce001b8beeda2f278d91ba16dd7c7bd1709ca2e7c12f193e44d84299d2": {
									"entryPoint": 6895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 7420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5e5aa06e63518928aca28b9bd5d4b07f19d38bcb7e3ef13f7b9cb1a8a22ba4c": {
									"entryPoint": 8046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cdbd805c137dcffd16d72dbea3cefe7001c5466d06748eaabed45649b8504a7e": {
									"entryPoint": 7579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dacec424514392f190ecf5d0b95a745954c9a31ddd7829502ac5c4498a85080d": {
									"entryPoint": 7942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 8280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88": {
									"entryPoint": 7475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19222:8",
										"nodeType": "YulBlock",
										"src": "0:19222:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3405:263:8",
													"nodeType": "YulBlock",
													"src": "3405:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3451:83:8",
																"nodeType": "YulBlock",
																"src": "3451:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3453:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3453:77:8"
																			},
																			"nativeSrc": "3453:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3453:79:8"
																		},
																		"nativeSrc": "3453:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3453:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3426:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3426:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3435:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3435:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3422:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:8"
																		},
																		"nativeSrc": "3422:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3422:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3447:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3418:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:8"
																},
																"nativeSrc": "3418:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3418:32:8"
															},
															"nativeSrc": "3415:119:8",
															"nodeType": "YulIf",
															"src": "3415:119:8"
														},
														{
															"nativeSrc": "3544:117:8",
															"nodeType": "YulBlock",
															"src": "3544:117:8",
															"statements": [
																{
																	"nativeSrc": "3559:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3559:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3573:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3573:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3563:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3563:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3588:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3588:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3623:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3623:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3634:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3634:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3619:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3619:3:8"
																				},
																				"nativeSrc": "3619:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3619:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3643:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3643:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3598:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3598:20:8"
																		},
																		"nativeSrc": "3598:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3598:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3588:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3588:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3339:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3375:9:8",
														"nodeType": "YulTypedName",
														"src": "3375:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3386:7:8",
														"nodeType": "YulTypedName",
														"src": "3386:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3398:6:8",
														"nodeType": "YulTypedName",
														"src": "3398:6:8",
														"type": ""
													}
												],
												"src": "3339:329:8"
											},
											{
												"body": {
													"nativeSrc": "3739:53:8",
													"nodeType": "YulBlock",
													"src": "3739:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3756:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3756:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3779:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3779:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3761:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3761:17:8"
																		},
																		"nativeSrc": "3761:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3749:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3749:6:8"
																},
																"nativeSrc": "3749:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3749:37:8"
															},
															"nativeSrc": "3749:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3749:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3674:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3727:5:8",
														"nodeType": "YulTypedName",
														"src": "3727:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3734:3:8",
														"nodeType": "YulTypedName",
														"src": "3734:3:8",
														"type": ""
													}
												],
												"src": "3674:118:8"
											},
											{
												"body": {
													"nativeSrc": "3896:124:8",
													"nodeType": "YulBlock",
													"src": "3896:124:8",
													"statements": [
														{
															"nativeSrc": "3906:26:8",
															"nodeType": "YulAssignment",
															"src": "3906:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3918:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3929:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3914:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3914:3:8"
																},
																"nativeSrc": "3914:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3914:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3906:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3906:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:8"
																		},
																		"nativeSrc": "3995:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3942:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3942:43:8"
																},
																"nativeSrc": "3942:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3942:71:8"
															},
															"nativeSrc": "3942:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3942:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3798:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3868:9:8",
														"nodeType": "YulTypedName",
														"src": "3868:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3880:6:8",
														"nodeType": "YulTypedName",
														"src": "3880:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3891:4:8",
														"nodeType": "YulTypedName",
														"src": "3891:4:8",
														"type": ""
													}
												],
												"src": "3798:222:8"
											},
											{
												"body": {
													"nativeSrc": "4126:519:8",
													"nodeType": "YulBlock",
													"src": "4126:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:8",
																"nodeType": "YulBlock",
																"src": "4172:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:8"
																			},
																			"nativeSrc": "4174:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:8"
																		},
																		"nativeSrc": "4174:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:8"
																		},
																		"nativeSrc": "4143:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:8"
																},
																"nativeSrc": "4139:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:8"
															},
															"nativeSrc": "4136:119:8",
															"nodeType": "YulIf",
															"src": "4136:119:8"
														},
														{
															"nativeSrc": "4265:117:8",
															"nodeType": "YulBlock",
															"src": "4265:117:8",
															"statements": [
																{
																	"nativeSrc": "4280:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:8"
																				},
																				"nativeSrc": "4340:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:8"
																		},
																		"nativeSrc": "4319:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:8",
															"nodeType": "YulBlock",
															"src": "4392:118:8",
															"statements": [
																{
																	"nativeSrc": "4407:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:8"
																				},
																				"nativeSrc": "4468:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:8"
																		},
																		"nativeSrc": "4447:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:8",
															"nodeType": "YulBlock",
															"src": "4520:118:8",
															"statements": [
																{
																	"nativeSrc": "4535:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:8"
																				},
																				"nativeSrc": "4596:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:8"
																		},
																		"nativeSrc": "4575:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:8",
														"nodeType": "YulTypedName",
														"src": "4080:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:8",
														"nodeType": "YulTypedName",
														"src": "4091:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:8",
														"nodeType": "YulTypedName",
														"src": "4103:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:8",
														"nodeType": "YulTypedName",
														"src": "4111:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:8",
														"nodeType": "YulTypedName",
														"src": "4119:6:8",
														"type": ""
													}
												],
												"src": "4026:619:8"
											},
											{
												"body": {
													"nativeSrc": "4694:43:8",
													"nodeType": "YulBlock",
													"src": "4694:43:8",
													"statements": [
														{
															"nativeSrc": "4704:27:8",
															"nodeType": "YulAssignment",
															"src": "4704:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:8"
																},
																"nativeSrc": "4715:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:8",
														"nodeType": "YulTypedName",
														"src": "4676:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:8",
														"nodeType": "YulTypedName",
														"src": "4686:7:8",
														"type": ""
													}
												],
												"src": "4651:86:8"
											},
											{
												"body": {
													"nativeSrc": "4804:51:8",
													"nodeType": "YulBlock",
													"src": "4804:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:8"
																		},
																		"nativeSrc": "4826:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:8"
																},
																"nativeSrc": "4814:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:8"
															},
															"nativeSrc": "4814:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:8",
														"nodeType": "YulTypedName",
														"src": "4792:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:8",
														"nodeType": "YulTypedName",
														"src": "4799:3:8",
														"type": ""
													}
												],
												"src": "4743:112:8"
											},
											{
												"body": {
													"nativeSrc": "4955:120:8",
													"nodeType": "YulBlock",
													"src": "4955:120:8",
													"statements": [
														{
															"nativeSrc": "4965:26:8",
															"nodeType": "YulAssignment",
															"src": "4965:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:8"
																},
																"nativeSrc": "4973:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:8"
																		},
																		"nativeSrc": "5050:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:8"
																},
																"nativeSrc": "5001:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:8"
															},
															"nativeSrc": "5001:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:8",
														"nodeType": "YulTypedName",
														"src": "4927:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:8",
														"nodeType": "YulTypedName",
														"src": "4939:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:8",
														"nodeType": "YulTypedName",
														"src": "4950:4:8",
														"type": ""
													}
												],
												"src": "4861:214:8"
											},
											{
												"body": {
													"nativeSrc": "5146:53:8",
													"nodeType": "YulBlock",
													"src": "5146:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:8"
																		},
																		"nativeSrc": "5168:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:8"
																},
																"nativeSrc": "5156:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:8"
															},
															"nativeSrc": "5156:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:8",
														"nodeType": "YulTypedName",
														"src": "5134:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:8",
														"nodeType": "YulTypedName",
														"src": "5141:3:8",
														"type": ""
													}
												],
												"src": "5081:118:8"
											},
											{
												"body": {
													"nativeSrc": "5303:124:8",
													"nodeType": "YulBlock",
													"src": "5303:124:8",
													"statements": [
														{
															"nativeSrc": "5313:26:8",
															"nodeType": "YulAssignment",
															"src": "5313:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:8"
																},
																"nativeSrc": "5321:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:8"
																		},
																		"nativeSrc": "5402:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:8"
																},
																"nativeSrc": "5349:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:8"
															},
															"nativeSrc": "5349:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:8",
														"nodeType": "YulTypedName",
														"src": "5275:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:8",
														"nodeType": "YulTypedName",
														"src": "5287:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:8",
														"nodeType": "YulTypedName",
														"src": "5298:4:8",
														"type": ""
													}
												],
												"src": "5205:222:8"
											},
											{
												"body": {
													"nativeSrc": "5516:391:8",
													"nodeType": "YulBlock",
													"src": "5516:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:8",
																"nodeType": "YulBlock",
																"src": "5562:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:8"
																			},
																			"nativeSrc": "5564:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:8"
																		},
																		"nativeSrc": "5564:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:8"
																		},
																		"nativeSrc": "5533:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:8"
																},
																"nativeSrc": "5529:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:8"
															},
															"nativeSrc": "5526:119:8",
															"nodeType": "YulIf",
															"src": "5526:119:8"
														},
														{
															"nativeSrc": "5655:117:8",
															"nodeType": "YulBlock",
															"src": "5655:117:8",
															"statements": [
																{
																	"nativeSrc": "5670:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:8"
																				},
																				"nativeSrc": "5730:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:8"
																		},
																		"nativeSrc": "5709:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:8",
															"nodeType": "YulBlock",
															"src": "5782:118:8",
															"statements": [
																{
																	"nativeSrc": "5797:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:8"
																				},
																				"nativeSrc": "5858:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:8"
																		},
																		"nativeSrc": "5837:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:8",
														"nodeType": "YulTypedName",
														"src": "5478:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:8",
														"nodeType": "YulTypedName",
														"src": "5489:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:8",
														"nodeType": "YulTypedName",
														"src": "5501:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:8",
														"nodeType": "YulTypedName",
														"src": "5509:6:8",
														"type": ""
													}
												],
												"src": "5433:474:8"
											},
											{
												"body": {
													"nativeSrc": "5941:152:8",
													"nodeType": "YulBlock",
													"src": "5941:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:8",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:8"
																},
																"nativeSrc": "5951:88:8",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:8"
															},
															"nativeSrc": "5951:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:8"
																},
																"nativeSrc": "6048:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:8"
															},
															"nativeSrc": "6048:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:8"
																},
																"nativeSrc": "6072:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:8"
															},
															"nativeSrc": "6072:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:8"
											},
											{
												"body": {
													"nativeSrc": "6150:269:8",
													"nodeType": "YulBlock",
													"src": "6150:269:8",
													"statements": [
														{
															"nativeSrc": "6160:22:8",
															"nodeType": "YulAssignment",
															"src": "6160:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:8"
																},
																"nativeSrc": "6170:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:8"
																}
															]
														},
														{
															"nativeSrc": "6191:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:8"
																},
																"nativeSrc": "6217:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:8",
																"nodeType": "YulBlock",
																"src": "6268:51:8",
																"statements": [
																	{
																		"nativeSrc": "6282:27:8",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:8"
																			},
																			"nativeSrc": "6292:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:8"
																},
																"nativeSrc": "6241:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:8"
															},
															"nativeSrc": "6238:81:8",
															"nodeType": "YulIf",
															"src": "6238:81:8"
														},
														{
															"body": {
																"nativeSrc": "6371:42:8",
																"nodeType": "YulBlock",
																"src": "6371:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:8"
																			},
																			"nativeSrc": "6385:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:8"
																		},
																		"nativeSrc": "6385:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:8"
																		},
																		"nativeSrc": "6355:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:8"
																},
																"nativeSrc": "6332:38:8",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:8"
															},
															"nativeSrc": "6329:84:8",
															"nodeType": "YulIf",
															"src": "6329:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:8",
														"nodeType": "YulTypedName",
														"src": "6134:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:8",
														"nodeType": "YulTypedName",
														"src": "6143:6:8",
														"type": ""
													}
												],
												"src": "6099:320:8"
											},
											{
												"body": {
													"nativeSrc": "6531:64:8",
													"nodeType": "YulBlock",
													"src": "6531:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6553:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6553:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6561:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6561:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6549:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6549:3:8"
																		},
																		"nativeSrc": "6549:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6549:14:8"
																	},
																	{
																		"hexValue": "46756e64696e67207374696c6c20616374697665",
																		"kind": "string",
																		"nativeSrc": "6565:22:8",
																		"nodeType": "YulLiteral",
																		"src": "6565:22:8",
																		"type": "",
																		"value": "Funding still active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6542:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6542:6:8"
																},
																"nativeSrc": "6542:46:8",
																"nodeType": "YulFunctionCall",
																"src": "6542:46:8"
															},
															"nativeSrc": "6542:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "6542:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_589f77ce001b8beeda2f278d91ba16dd7c7bd1709ca2e7c12f193e44d84299d2",
												"nativeSrc": "6425:170:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6523:6:8",
														"nodeType": "YulTypedName",
														"src": "6523:6:8",
														"type": ""
													}
												],
												"src": "6425:170:8"
											},
											{
												"body": {
													"nativeSrc": "6747:220:8",
													"nodeType": "YulBlock",
													"src": "6747:220:8",
													"statements": [
														{
															"nativeSrc": "6757:74:8",
															"nodeType": "YulAssignment",
															"src": "6757:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6823:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6823:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6828:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6828:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6764:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "6764:58:8"
																},
																"nativeSrc": "6764:67:8",
																"nodeType": "YulFunctionCall",
																"src": "6764:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6757:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6757:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6929:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6929:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_589f77ce001b8beeda2f278d91ba16dd7c7bd1709ca2e7c12f193e44d84299d2",
																	"nativeSrc": "6840:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "6840:88:8"
																},
																"nativeSrc": "6840:93:8",
																"nodeType": "YulFunctionCall",
																"src": "6840:93:8"
															},
															"nativeSrc": "6840:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "6840:93:8"
														},
														{
															"nativeSrc": "6942:19:8",
															"nodeType": "YulAssignment",
															"src": "6942:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6953:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6953:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6958:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6958:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6949:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:8"
																},
																"nativeSrc": "6949:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6949:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6942:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6942:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_589f77ce001b8beeda2f278d91ba16dd7c7bd1709ca2e7c12f193e44d84299d2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6601:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6735:3:8",
														"nodeType": "YulTypedName",
														"src": "6735:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6743:3:8",
														"nodeType": "YulTypedName",
														"src": "6743:3:8",
														"type": ""
													}
												],
												"src": "6601:366:8"
											},
											{
												"body": {
													"nativeSrc": "7144:248:8",
													"nodeType": "YulBlock",
													"src": "7144:248:8",
													"statements": [
														{
															"nativeSrc": "7154:26:8",
															"nodeType": "YulAssignment",
															"src": "7154:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7166:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7166:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7177:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7177:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7162:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7162:3:8"
																},
																"nativeSrc": "7162:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7162:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7154:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7154:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7201:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7201:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7212:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7212:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7197:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7197:3:8"
																		},
																		"nativeSrc": "7197:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7197:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7220:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7220:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7226:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7226:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7216:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:8"
																		},
																		"nativeSrc": "7216:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7216:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7190:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7190:6:8"
																},
																"nativeSrc": "7190:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7190:47:8"
															},
															"nativeSrc": "7190:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7190:47:8"
														},
														{
															"nativeSrc": "7246:139:8",
															"nodeType": "YulAssignment",
															"src": "7246:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7380:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7380:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_589f77ce001b8beeda2f278d91ba16dd7c7bd1709ca2e7c12f193e44d84299d2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7254:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "7254:124:8"
																},
																"nativeSrc": "7254:131:8",
																"nodeType": "YulFunctionCall",
																"src": "7254:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7246:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7246:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_589f77ce001b8beeda2f278d91ba16dd7c7bd1709ca2e7c12f193e44d84299d2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6973:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7124:9:8",
														"nodeType": "YulTypedName",
														"src": "7124:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7139:4:8",
														"nodeType": "YulTypedName",
														"src": "7139:4:8",
														"type": ""
													}
												],
												"src": "6973:419:8"
											},
											{
												"body": {
													"nativeSrc": "7426:152:8",
													"nodeType": "YulBlock",
													"src": "7426:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7443:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7443:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7446:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7446:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7436:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7436:6:8"
																},
																"nativeSrc": "7436:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7436:88:8"
															},
															"nativeSrc": "7436:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7436:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7540:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7540:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7543:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7543:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7533:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7533:6:8"
																},
																"nativeSrc": "7533:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7533:15:8"
															},
															"nativeSrc": "7533:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7533:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7564:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7564:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7567:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7567:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7557:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7557:6:8"
																},
																"nativeSrc": "7557:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7557:15:8"
															},
															"nativeSrc": "7557:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7557:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7398:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7398:180:8"
											},
											{
												"body": {
													"nativeSrc": "7632:362:8",
													"nodeType": "YulBlock",
													"src": "7632:362:8",
													"statements": [
														{
															"nativeSrc": "7642:25:8",
															"nodeType": "YulAssignment",
															"src": "7642:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7665:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7665:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7647:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7647:17:8"
																},
																"nativeSrc": "7647:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7647:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7642:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7642:1:8"
																}
															]
														},
														{
															"nativeSrc": "7676:25:8",
															"nodeType": "YulAssignment",
															"src": "7676:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7699:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7699:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7681:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7681:17:8"
																},
																"nativeSrc": "7681:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7681:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7676:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7676:1:8"
																}
															]
														},
														{
															"nativeSrc": "7710:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7710:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7733:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7733:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7736:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7736:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7729:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7729:3:8"
																},
																"nativeSrc": "7729:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7729:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7714:11:8",
																	"nodeType": "YulTypedName",
																	"src": "7714:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7747:41:8",
															"nodeType": "YulAssignment",
															"src": "7747:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7776:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "7776:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7758:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7758:17:8"
																},
																"nativeSrc": "7758:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7758:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7747:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "7747:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7965:22:8",
																"nodeType": "YulBlock",
																"src": "7965:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7967:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7967:16:8"
																			},
																			"nativeSrc": "7967:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7967:18:8"
																		},
																		"nativeSrc": "7967:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7967:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7898:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "7898:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7891:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "7891:6:8"
																				},
																				"nativeSrc": "7891:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7891:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7921:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "7921:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7928:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "7928:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7937:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "7937:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7924:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7924:3:8"
																						},
																						"nativeSrc": "7924:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7924:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7918:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "7918:2:8"
																				},
																				"nativeSrc": "7918:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7918:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7871:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7871:2:8"
																		},
																		"nativeSrc": "7871:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7871:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7851:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7851:6:8"
																},
																"nativeSrc": "7851:113:8",
																"nodeType": "YulFunctionCall",
																"src": "7851:113:8"
															},
															"nativeSrc": "7848:139:8",
															"nodeType": "YulIf",
															"src": "7848:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7584:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7615:1:8",
														"nodeType": "YulTypedName",
														"src": "7615:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7618:1:8",
														"nodeType": "YulTypedName",
														"src": "7618:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7624:7:8",
														"nodeType": "YulTypedName",
														"src": "7624:7:8",
														"type": ""
													}
												],
												"src": "7584:410:8"
											},
											{
												"body": {
													"nativeSrc": "8028:152:8",
													"nodeType": "YulBlock",
													"src": "8028:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8045:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8045:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8048:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8048:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8038:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8038:6:8"
																},
																"nativeSrc": "8038:88:8",
																"nodeType": "YulFunctionCall",
																"src": "8038:88:8"
															},
															"nativeSrc": "8038:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "8038:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8142:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8142:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8145:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8145:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8135:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8135:6:8"
																},
																"nativeSrc": "8135:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8135:15:8"
															},
															"nativeSrc": "8135:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8135:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8166:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8166:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8169:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8169:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8159:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8159:6:8"
																},
																"nativeSrc": "8159:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8159:15:8"
															},
															"nativeSrc": "8159:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8159:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8000:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8000:180:8"
											},
											{
												"body": {
													"nativeSrc": "8228:143:8",
													"nodeType": "YulBlock",
													"src": "8228:143:8",
													"statements": [
														{
															"nativeSrc": "8238:25:8",
															"nodeType": "YulAssignment",
															"src": "8238:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8261:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8261:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8243:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8243:17:8"
																},
																"nativeSrc": "8243:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8243:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8238:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8238:1:8"
																}
															]
														},
														{
															"nativeSrc": "8272:25:8",
															"nodeType": "YulAssignment",
															"src": "8272:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8295:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8295:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8277:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8277:17:8"
																},
																"nativeSrc": "8277:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8277:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8272:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8272:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8319:22:8",
																"nodeType": "YulBlock",
																"src": "8319:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8321:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8321:16:8"
																			},
																			"nativeSrc": "8321:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8321:18:8"
																		},
																		"nativeSrc": "8321:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8321:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8316:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8316:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8309:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8309:6:8"
																},
																"nativeSrc": "8309:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8309:9:8"
															},
															"nativeSrc": "8306:35:8",
															"nodeType": "YulIf",
															"src": "8306:35:8"
														},
														{
															"nativeSrc": "8351:14:8",
															"nodeType": "YulAssignment",
															"src": "8351:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8360:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8360:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8363:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8363:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8356:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8356:3:8"
																},
																"nativeSrc": "8356:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8356:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8351:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8351:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8186:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8217:1:8",
														"nodeType": "YulTypedName",
														"src": "8217:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8220:1:8",
														"nodeType": "YulTypedName",
														"src": "8220:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8226:1:8",
														"nodeType": "YulTypedName",
														"src": "8226:1:8",
														"type": ""
													}
												],
												"src": "8186:185:8"
											},
											{
												"body": {
													"nativeSrc": "8483:60:8",
													"nodeType": "YulBlock",
													"src": "8483:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8505:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8505:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8513:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8513:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8501:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8501:3:8"
																		},
																		"nativeSrc": "8501:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8501:14:8"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820766f746573",
																		"kind": "string",
																		"nativeSrc": "8517:18:8",
																		"nodeType": "YulLiteral",
																		"src": "8517:18:8",
																		"type": "",
																		"value": "Not enough votes"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8494:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8494:6:8"
																},
																"nativeSrc": "8494:42:8",
																"nodeType": "YulFunctionCall",
																"src": "8494:42:8"
															},
															"nativeSrc": "8494:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "8494:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_0d6472a439219175f58c2c24311e8dc196b2c1ebdd449fee5365e9b336929ab0",
												"nativeSrc": "8377:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8475:6:8",
														"nodeType": "YulTypedName",
														"src": "8475:6:8",
														"type": ""
													}
												],
												"src": "8377:166:8"
											},
											{
												"body": {
													"nativeSrc": "8695:220:8",
													"nodeType": "YulBlock",
													"src": "8695:220:8",
													"statements": [
														{
															"nativeSrc": "8705:74:8",
															"nodeType": "YulAssignment",
															"src": "8705:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8771:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8771:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8776:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8776:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8712:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8712:58:8"
																},
																"nativeSrc": "8712:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8712:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8705:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8705:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8877:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8877:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d6472a439219175f58c2c24311e8dc196b2c1ebdd449fee5365e9b336929ab0",
																	"nativeSrc": "8788:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8788:88:8"
																},
																"nativeSrc": "8788:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8788:93:8"
															},
															"nativeSrc": "8788:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8788:93:8"
														},
														{
															"nativeSrc": "8890:19:8",
															"nodeType": "YulAssignment",
															"src": "8890:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8901:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8901:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8906:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8906:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8897:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8897:3:8"
																},
																"nativeSrc": "8897:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8897:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8890:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8890:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d6472a439219175f58c2c24311e8dc196b2c1ebdd449fee5365e9b336929ab0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8549:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8683:3:8",
														"nodeType": "YulTypedName",
														"src": "8683:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8691:3:8",
														"nodeType": "YulTypedName",
														"src": "8691:3:8",
														"type": ""
													}
												],
												"src": "8549:366:8"
											},
											{
												"body": {
													"nativeSrc": "9092:248:8",
													"nodeType": "YulBlock",
													"src": "9092:248:8",
													"statements": [
														{
															"nativeSrc": "9102:26:8",
															"nodeType": "YulAssignment",
															"src": "9102:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9114:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9114:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9125:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9125:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9110:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9110:3:8"
																},
																"nativeSrc": "9110:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9110:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9102:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9102:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9149:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9149:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9160:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9160:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9145:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9145:3:8"
																		},
																		"nativeSrc": "9145:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9145:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9168:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9168:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9174:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9174:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9164:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9164:3:8"
																		},
																		"nativeSrc": "9164:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9164:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9138:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9138:6:8"
																},
																"nativeSrc": "9138:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9138:47:8"
															},
															"nativeSrc": "9138:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9138:47:8"
														},
														{
															"nativeSrc": "9194:139:8",
															"nodeType": "YulAssignment",
															"src": "9194:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9328:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9328:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d6472a439219175f58c2c24311e8dc196b2c1ebdd449fee5365e9b336929ab0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9202:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "9202:124:8"
																},
																"nativeSrc": "9202:131:8",
																"nodeType": "YulFunctionCall",
																"src": "9202:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9194:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9194:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d6472a439219175f58c2c24311e8dc196b2c1ebdd449fee5365e9b336929ab0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8921:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9072:9:8",
														"nodeType": "YulTypedName",
														"src": "9072:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9087:4:8",
														"nodeType": "YulTypedName",
														"src": "9087:4:8",
														"type": ""
													}
												],
												"src": "8921:419:8"
											},
											{
												"body": {
													"nativeSrc": "9452:64:8",
													"nodeType": "YulBlock",
													"src": "9452:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9474:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9474:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9482:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9482:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9470:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9470:3:8"
																		},
																		"nativeSrc": "9470:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9470:14:8"
																	},
																	{
																		"hexValue": "4e6f2066756e647320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "9486:22:8",
																		"nodeType": "YulLiteral",
																		"src": "9486:22:8",
																		"type": "",
																		"value": "No funds to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9463:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9463:6:8"
																},
																"nativeSrc": "9463:46:8",
																"nodeType": "YulFunctionCall",
																"src": "9463:46:8"
															},
															"nativeSrc": "9463:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "9463:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
												"nativeSrc": "9346:170:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9444:6:8",
														"nodeType": "YulTypedName",
														"src": "9444:6:8",
														"type": ""
													}
												],
												"src": "9346:170:8"
											},
											{
												"body": {
													"nativeSrc": "9668:220:8",
													"nodeType": "YulBlock",
													"src": "9668:220:8",
													"statements": [
														{
															"nativeSrc": "9678:74:8",
															"nodeType": "YulAssignment",
															"src": "9678:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9744:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9744:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9749:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9749:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9685:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "9685:58:8"
																},
																"nativeSrc": "9685:67:8",
																"nodeType": "YulFunctionCall",
																"src": "9685:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9678:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9678:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9850:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9850:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																	"nativeSrc": "9761:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "9761:88:8"
																},
																"nativeSrc": "9761:93:8",
																"nodeType": "YulFunctionCall",
																"src": "9761:93:8"
															},
															"nativeSrc": "9761:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "9761:93:8"
														},
														{
															"nativeSrc": "9863:19:8",
															"nodeType": "YulAssignment",
															"src": "9863:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9874:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9874:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9879:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9879:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9870:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9870:3:8"
																},
																"nativeSrc": "9870:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9870:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9863:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9863:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9522:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9656:3:8",
														"nodeType": "YulTypedName",
														"src": "9656:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9664:3:8",
														"nodeType": "YulTypedName",
														"src": "9664:3:8",
														"type": ""
													}
												],
												"src": "9522:366:8"
											},
											{
												"body": {
													"nativeSrc": "10065:248:8",
													"nodeType": "YulBlock",
													"src": "10065:248:8",
													"statements": [
														{
															"nativeSrc": "10075:26:8",
															"nodeType": "YulAssignment",
															"src": "10075:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10087:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10087:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10098:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10098:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10083:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10083:3:8"
																},
																"nativeSrc": "10083:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10083:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10075:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10075:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10122:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10122:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10133:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10133:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10118:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10118:3:8"
																		},
																		"nativeSrc": "10118:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10118:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10141:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10141:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10147:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10147:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10137:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10137:3:8"
																		},
																		"nativeSrc": "10137:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10137:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10111:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10111:6:8"
																},
																"nativeSrc": "10111:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10111:47:8"
															},
															"nativeSrc": "10111:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10111:47:8"
														},
														{
															"nativeSrc": "10167:139:8",
															"nodeType": "YulAssignment",
															"src": "10167:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10301:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10301:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10175:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10175:124:8"
																},
																"nativeSrc": "10175:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10175:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10167:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10167:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9894:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10045:9:8",
														"nodeType": "YulTypedName",
														"src": "10045:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10060:4:8",
														"nodeType": "YulTypedName",
														"src": "10060:4:8",
														"type": ""
													}
												],
												"src": "9894:419:8"
											},
											{
												"body": {
													"nativeSrc": "10432:34:8",
													"nodeType": "YulBlock",
													"src": "10432:34:8",
													"statements": [
														{
															"nativeSrc": "10442:18:8",
															"nodeType": "YulAssignment",
															"src": "10442:18:8",
															"value": {
																"name": "pos",
																"nativeSrc": "10457:3:8",
																"nodeType": "YulIdentifier",
																"src": "10457:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10442:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "10442:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10319:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10404:3:8",
														"nodeType": "YulTypedName",
														"src": "10404:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10409:6:8",
														"nodeType": "YulTypedName",
														"src": "10409:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10420:11:8",
														"nodeType": "YulTypedName",
														"src": "10420:11:8",
														"type": ""
													}
												],
												"src": "10319:147:8"
											},
											{
												"body": {
													"nativeSrc": "10578:8:8",
													"nodeType": "YulBlock",
													"src": "10578:8:8",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "10472:114:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10570:6:8",
														"nodeType": "YulTypedName",
														"src": "10570:6:8",
														"type": ""
													}
												],
												"src": "10472:114:8"
											},
											{
												"body": {
													"nativeSrc": "10755:235:8",
													"nodeType": "YulBlock",
													"src": "10755:235:8",
													"statements": [
														{
															"nativeSrc": "10765:90:8",
															"nodeType": "YulAssignment",
															"src": "10765:90:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10848:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10848:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10853:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10853:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10772:75:8",
																	"nodeType": "YulIdentifier",
																	"src": "10772:75:8"
																},
																"nativeSrc": "10772:83:8",
																"nodeType": "YulFunctionCall",
																"src": "10772:83:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10765:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10765:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10953:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10953:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "10864:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10864:88:8"
																},
																"nativeSrc": "10864:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10864:93:8"
															},
															"nativeSrc": "10864:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10864:93:8"
														},
														{
															"nativeSrc": "10966:18:8",
															"nodeType": "YulAssignment",
															"src": "10966:18:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10977:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10977:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10982:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10982:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10973:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10973:3:8"
																},
																"nativeSrc": "10973:11:8",
																"nodeType": "YulFunctionCall",
																"src": "10973:11:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10966:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10966:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10592:398:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10743:3:8",
														"nodeType": "YulTypedName",
														"src": "10743:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10751:3:8",
														"nodeType": "YulTypedName",
														"src": "10751:3:8",
														"type": ""
													}
												],
												"src": "10592:398:8"
											},
											{
												"body": {
													"nativeSrc": "11184:191:8",
													"nodeType": "YulBlock",
													"src": "11184:191:8",
													"statements": [
														{
															"nativeSrc": "11195:154:8",
															"nodeType": "YulAssignment",
															"src": "11195:154:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11345:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11345:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11202:141:8",
																	"nodeType": "YulIdentifier",
																	"src": "11202:141:8"
																},
																"nativeSrc": "11202:147:8",
																"nodeType": "YulFunctionCall",
																"src": "11202:147:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11195:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11195:3:8"
																}
															]
														},
														{
															"nativeSrc": "11359:10:8",
															"nodeType": "YulAssignment",
															"src": "11359:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "11366:3:8",
																"nodeType": "YulIdentifier",
																"src": "11366:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11359:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11359:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10996:379:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11171:3:8",
														"nodeType": "YulTypedName",
														"src": "11171:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11180:3:8",
														"nodeType": "YulTypedName",
														"src": "11180:3:8",
														"type": ""
													}
												],
												"src": "10996:379:8"
											},
											{
												"body": {
													"nativeSrc": "11487:61:8",
													"nodeType": "YulBlock",
													"src": "11487:61:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11509:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11509:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11517:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11517:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11505:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11505:3:8"
																		},
																		"nativeSrc": "11505:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11505:14:8"
																	},
																	{
																		"hexValue": "5769746864726177616c206661696c6564",
																		"kind": "string",
																		"nativeSrc": "11521:19:8",
																		"nodeType": "YulLiteral",
																		"src": "11521:19:8",
																		"type": "",
																		"value": "Withdrawal failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11498:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11498:6:8"
																},
																"nativeSrc": "11498:43:8",
																"nodeType": "YulFunctionCall",
																"src": "11498:43:8"
															},
															"nativeSrc": "11498:43:8",
															"nodeType": "YulExpressionStatement",
															"src": "11498:43:8"
														}
													]
												},
												"name": "store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
												"nativeSrc": "11381:167:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11479:6:8",
														"nodeType": "YulTypedName",
														"src": "11479:6:8",
														"type": ""
													}
												],
												"src": "11381:167:8"
											},
											{
												"body": {
													"nativeSrc": "11700:220:8",
													"nodeType": "YulBlock",
													"src": "11700:220:8",
													"statements": [
														{
															"nativeSrc": "11710:74:8",
															"nodeType": "YulAssignment",
															"src": "11710:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11776:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11776:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11781:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11781:2:8",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11717:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11717:58:8"
																},
																"nativeSrc": "11717:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11717:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11710:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11710:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11882:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11882:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																	"nativeSrc": "11793:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11793:88:8"
																},
																"nativeSrc": "11793:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11793:93:8"
															},
															"nativeSrc": "11793:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11793:93:8"
														},
														{
															"nativeSrc": "11895:19:8",
															"nodeType": "YulAssignment",
															"src": "11895:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11906:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11906:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11911:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11911:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11902:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11902:3:8"
																},
																"nativeSrc": "11902:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11902:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11895:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11895:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11554:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11688:3:8",
														"nodeType": "YulTypedName",
														"src": "11688:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11696:3:8",
														"nodeType": "YulTypedName",
														"src": "11696:3:8",
														"type": ""
													}
												],
												"src": "11554:366:8"
											},
											{
												"body": {
													"nativeSrc": "12097:248:8",
													"nodeType": "YulBlock",
													"src": "12097:248:8",
													"statements": [
														{
															"nativeSrc": "12107:26:8",
															"nodeType": "YulAssignment",
															"src": "12107:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12119:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12119:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12130:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12130:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12115:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12115:3:8"
																},
																"nativeSrc": "12115:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12115:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12107:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12107:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12154:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12154:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12165:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12165:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12150:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12150:3:8"
																		},
																		"nativeSrc": "12150:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12150:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12173:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12173:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12179:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12179:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12169:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12169:3:8"
																		},
																		"nativeSrc": "12169:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12169:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12143:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12143:6:8"
																},
																"nativeSrc": "12143:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12143:47:8"
															},
															"nativeSrc": "12143:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12143:47:8"
														},
														{
															"nativeSrc": "12199:139:8",
															"nodeType": "YulAssignment",
															"src": "12199:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12333:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12333:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12207:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12207:124:8"
																},
																"nativeSrc": "12207:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12207:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12199:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12199:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11926:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12077:9:8",
														"nodeType": "YulTypedName",
														"src": "12077:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12092:4:8",
														"nodeType": "YulTypedName",
														"src": "12092:4:8",
														"type": ""
													}
												],
												"src": "11926:419:8"
											},
											{
												"body": {
													"nativeSrc": "12457:65:8",
													"nodeType": "YulBlock",
													"src": "12457:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12479:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12479:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12487:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12487:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12475:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12475:3:8"
																		},
																		"nativeSrc": "12475:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12475:14:8"
																	},
																	{
																		"hexValue": "46756e64696e6720616c726561647920656e646564",
																		"kind": "string",
																		"nativeSrc": "12491:23:8",
																		"nodeType": "YulLiteral",
																		"src": "12491:23:8",
																		"type": "",
																		"value": "Funding already ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12468:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12468:6:8"
																},
																"nativeSrc": "12468:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12468:47:8"
															},
															"nativeSrc": "12468:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12468:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_cdbd805c137dcffd16d72dbea3cefe7001c5466d06748eaabed45649b8504a7e",
												"nativeSrc": "12351:171:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12449:6:8",
														"nodeType": "YulTypedName",
														"src": "12449:6:8",
														"type": ""
													}
												],
												"src": "12351:171:8"
											},
											{
												"body": {
													"nativeSrc": "12674:220:8",
													"nodeType": "YulBlock",
													"src": "12674:220:8",
													"statements": [
														{
															"nativeSrc": "12684:74:8",
															"nodeType": "YulAssignment",
															"src": "12684:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12750:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12750:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12755:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12755:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12691:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12691:58:8"
																},
																"nativeSrc": "12691:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12691:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12684:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12684:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12856:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12856:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cdbd805c137dcffd16d72dbea3cefe7001c5466d06748eaabed45649b8504a7e",
																	"nativeSrc": "12767:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "12767:88:8"
																},
																"nativeSrc": "12767:93:8",
																"nodeType": "YulFunctionCall",
																"src": "12767:93:8"
															},
															"nativeSrc": "12767:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "12767:93:8"
														},
														{
															"nativeSrc": "12869:19:8",
															"nodeType": "YulAssignment",
															"src": "12869:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12880:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12880:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12885:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12885:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12876:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12876:3:8"
																},
																"nativeSrc": "12876:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12876:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12869:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12869:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cdbd805c137dcffd16d72dbea3cefe7001c5466d06748eaabed45649b8504a7e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12528:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12662:3:8",
														"nodeType": "YulTypedName",
														"src": "12662:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12670:3:8",
														"nodeType": "YulTypedName",
														"src": "12670:3:8",
														"type": ""
													}
												],
												"src": "12528:366:8"
											},
											{
												"body": {
													"nativeSrc": "13071:248:8",
													"nodeType": "YulBlock",
													"src": "13071:248:8",
													"statements": [
														{
															"nativeSrc": "13081:26:8",
															"nodeType": "YulAssignment",
															"src": "13081:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13093:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13093:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13104:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13104:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13089:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13089:3:8"
																},
																"nativeSrc": "13089:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13089:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13081:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13081:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13128:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13128:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13139:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13139:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13124:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13124:3:8"
																		},
																		"nativeSrc": "13124:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13124:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13147:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13147:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13153:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13153:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13143:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13143:3:8"
																		},
																		"nativeSrc": "13143:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13143:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13117:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13117:6:8"
																},
																"nativeSrc": "13117:47:8",
																"nodeType": "YulFunctionCall",
																"src": "13117:47:8"
															},
															"nativeSrc": "13117:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "13117:47:8"
														},
														{
															"nativeSrc": "13173:139:8",
															"nodeType": "YulAssignment",
															"src": "13173:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13307:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13307:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cdbd805c137dcffd16d72dbea3cefe7001c5466d06748eaabed45649b8504a7e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13181:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "13181:124:8"
																},
																"nativeSrc": "13181:131:8",
																"nodeType": "YulFunctionCall",
																"src": "13181:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13173:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13173:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cdbd805c137dcffd16d72dbea3cefe7001c5466d06748eaabed45649b8504a7e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12900:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13051:9:8",
														"nodeType": "YulTypedName",
														"src": "13051:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13066:4:8",
														"nodeType": "YulTypedName",
														"src": "13066:4:8",
														"type": ""
													}
												],
												"src": "12900:419:8"
											},
											{
												"body": {
													"nativeSrc": "13431:63:8",
													"nodeType": "YulBlock",
													"src": "13431:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13453:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13453:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13461:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13461:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13449:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13449:3:8"
																		},
																		"nativeSrc": "13449:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13449:14:8"
																	},
																	{
																		"hexValue": "4d75737420626520616e20696e766573746f72",
																		"kind": "string",
																		"nativeSrc": "13465:21:8",
																		"nodeType": "YulLiteral",
																		"src": "13465:21:8",
																		"type": "",
																		"value": "Must be an investor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13442:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13442:6:8"
																},
																"nativeSrc": "13442:45:8",
																"nodeType": "YulFunctionCall",
																"src": "13442:45:8"
															},
															"nativeSrc": "13442:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "13442:45:8"
														}
													]
												},
												"name": "store_literal_in_memory_167c9b3380513941ed45ad6c12ae68092c0fdbdf8dd00ce6e252f9bd866e577a",
												"nativeSrc": "13325:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13423:6:8",
														"nodeType": "YulTypedName",
														"src": "13423:6:8",
														"type": ""
													}
												],
												"src": "13325:169:8"
											},
											{
												"body": {
													"nativeSrc": "13646:220:8",
													"nodeType": "YulBlock",
													"src": "13646:220:8",
													"statements": [
														{
															"nativeSrc": "13656:74:8",
															"nodeType": "YulAssignment",
															"src": "13656:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13722:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13722:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13727:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13727:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13663:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "13663:58:8"
																},
																"nativeSrc": "13663:67:8",
																"nodeType": "YulFunctionCall",
																"src": "13663:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13656:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13656:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13828:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13828:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_167c9b3380513941ed45ad6c12ae68092c0fdbdf8dd00ce6e252f9bd866e577a",
																	"nativeSrc": "13739:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13739:88:8"
																},
																"nativeSrc": "13739:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13739:93:8"
															},
															"nativeSrc": "13739:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13739:93:8"
														},
														{
															"nativeSrc": "13841:19:8",
															"nodeType": "YulAssignment",
															"src": "13841:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13852:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13852:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13857:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13857:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13848:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13848:3:8"
																},
																"nativeSrc": "13848:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13848:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13841:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13841:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_167c9b3380513941ed45ad6c12ae68092c0fdbdf8dd00ce6e252f9bd866e577a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13500:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13634:3:8",
														"nodeType": "YulTypedName",
														"src": "13634:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13642:3:8",
														"nodeType": "YulTypedName",
														"src": "13642:3:8",
														"type": ""
													}
												],
												"src": "13500:366:8"
											},
											{
												"body": {
													"nativeSrc": "14043:248:8",
													"nodeType": "YulBlock",
													"src": "14043:248:8",
													"statements": [
														{
															"nativeSrc": "14053:26:8",
															"nodeType": "YulAssignment",
															"src": "14053:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14065:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14065:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14076:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14076:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14061:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14061:3:8"
																},
																"nativeSrc": "14061:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14061:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14053:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14053:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14100:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14100:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14111:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14111:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14096:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14096:3:8"
																		},
																		"nativeSrc": "14096:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14096:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14119:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "14119:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14125:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14125:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14115:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14115:3:8"
																		},
																		"nativeSrc": "14115:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14115:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14089:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14089:6:8"
																},
																"nativeSrc": "14089:47:8",
																"nodeType": "YulFunctionCall",
																"src": "14089:47:8"
															},
															"nativeSrc": "14089:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "14089:47:8"
														},
														{
															"nativeSrc": "14145:139:8",
															"nodeType": "YulAssignment",
															"src": "14145:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14279:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14279:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_167c9b3380513941ed45ad6c12ae68092c0fdbdf8dd00ce6e252f9bd866e577a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14153:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "14153:124:8"
																},
																"nativeSrc": "14153:131:8",
																"nodeType": "YulFunctionCall",
																"src": "14153:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14145:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14145:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_167c9b3380513941ed45ad6c12ae68092c0fdbdf8dd00ce6e252f9bd866e577a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13872:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14023:9:8",
														"nodeType": "YulTypedName",
														"src": "14023:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14038:4:8",
														"nodeType": "YulTypedName",
														"src": "14038:4:8",
														"type": ""
													}
												],
												"src": "13872:419:8"
											},
											{
												"body": {
													"nativeSrc": "14403:57:8",
													"nodeType": "YulBlock",
													"src": "14403:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14425:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "14425:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14433:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14433:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14421:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14421:3:8"
																		},
																		"nativeSrc": "14421:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14421:14:8"
																	},
																	{
																		"hexValue": "416c726561647920766f746564",
																		"kind": "string",
																		"nativeSrc": "14437:15:8",
																		"nodeType": "YulLiteral",
																		"src": "14437:15:8",
																		"type": "",
																		"value": "Already voted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14414:6:8"
																},
																"nativeSrc": "14414:39:8",
																"nodeType": "YulFunctionCall",
																"src": "14414:39:8"
															},
															"nativeSrc": "14414:39:8",
															"nodeType": "YulExpressionStatement",
															"src": "14414:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
												"nativeSrc": "14297:163:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14395:6:8",
														"nodeType": "YulTypedName",
														"src": "14395:6:8",
														"type": ""
													}
												],
												"src": "14297:163:8"
											},
											{
												"body": {
													"nativeSrc": "14612:220:8",
													"nodeType": "YulBlock",
													"src": "14612:220:8",
													"statements": [
														{
															"nativeSrc": "14622:74:8",
															"nodeType": "YulAssignment",
															"src": "14622:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14688:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14688:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14693:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14693:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14629:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "14629:58:8"
																},
																"nativeSrc": "14629:67:8",
																"nodeType": "YulFunctionCall",
																"src": "14629:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14622:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14622:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14794:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14794:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
																	"nativeSrc": "14705:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "14705:88:8"
																},
																"nativeSrc": "14705:93:8",
																"nodeType": "YulFunctionCall",
																"src": "14705:93:8"
															},
															"nativeSrc": "14705:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "14705:93:8"
														},
														{
															"nativeSrc": "14807:19:8",
															"nodeType": "YulAssignment",
															"src": "14807:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14818:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14818:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14823:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14823:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14814:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14814:3:8"
																},
																"nativeSrc": "14814:12:8",
																"nodeType": "YulFunctionCall",
																"src": "14814:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14807:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14807:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14466:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14600:3:8",
														"nodeType": "YulTypedName",
														"src": "14600:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14608:3:8",
														"nodeType": "YulTypedName",
														"src": "14608:3:8",
														"type": ""
													}
												],
												"src": "14466:366:8"
											},
											{
												"body": {
													"nativeSrc": "15009:248:8",
													"nodeType": "YulBlock",
													"src": "15009:248:8",
													"statements": [
														{
															"nativeSrc": "15019:26:8",
															"nodeType": "YulAssignment",
															"src": "15019:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15031:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15031:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15042:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15042:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15027:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15027:3:8"
																},
																"nativeSrc": "15027:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15027:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15019:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15019:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15066:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15066:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15077:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15077:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15062:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15062:3:8"
																		},
																		"nativeSrc": "15062:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15062:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15085:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15085:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15091:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15091:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15081:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15081:3:8"
																		},
																		"nativeSrc": "15081:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15081:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15055:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15055:6:8"
																},
																"nativeSrc": "15055:47:8",
																"nodeType": "YulFunctionCall",
																"src": "15055:47:8"
															},
															"nativeSrc": "15055:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "15055:47:8"
														},
														{
															"nativeSrc": "15111:139:8",
															"nodeType": "YulAssignment",
															"src": "15111:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15245:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15245:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15119:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "15119:124:8"
																},
																"nativeSrc": "15119:131:8",
																"nodeType": "YulFunctionCall",
																"src": "15119:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15111:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15111:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14838:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14989:9:8",
														"nodeType": "YulTypedName",
														"src": "14989:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15004:4:8",
														"nodeType": "YulTypedName",
														"src": "15004:4:8",
														"type": ""
													}
												],
												"src": "14838:419:8"
											},
											{
												"body": {
													"nativeSrc": "15307:147:8",
													"nodeType": "YulBlock",
													"src": "15307:147:8",
													"statements": [
														{
															"nativeSrc": "15317:25:8",
															"nodeType": "YulAssignment",
															"src": "15317:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15340:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15340:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15322:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "15322:17:8"
																},
																"nativeSrc": "15322:20:8",
																"nodeType": "YulFunctionCall",
																"src": "15322:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15317:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "15317:1:8"
																}
															]
														},
														{
															"nativeSrc": "15351:25:8",
															"nodeType": "YulAssignment",
															"src": "15351:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15374:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15374:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15356:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "15356:17:8"
																},
																"nativeSrc": "15356:20:8",
																"nodeType": "YulFunctionCall",
																"src": "15356:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15351:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "15351:1:8"
																}
															]
														},
														{
															"nativeSrc": "15385:16:8",
															"nodeType": "YulAssignment",
															"src": "15385:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15396:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15396:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15399:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15399:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15392:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15392:3:8"
																},
																"nativeSrc": "15392:9:8",
																"nodeType": "YulFunctionCall",
																"src": "15392:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15385:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15385:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15425:22:8",
																"nodeType": "YulBlock",
																"src": "15425:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15427:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "15427:16:8"
																			},
																			"nativeSrc": "15427:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15427:18:8"
																		},
																		"nativeSrc": "15427:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "15427:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15417:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15417:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15420:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15420:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15414:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "15414:2:8"
																},
																"nativeSrc": "15414:10:8",
																"nodeType": "YulFunctionCall",
																"src": "15414:10:8"
															},
															"nativeSrc": "15411:36:8",
															"nodeType": "YulIf",
															"src": "15411:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15263:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15294:1:8",
														"nodeType": "YulTypedName",
														"src": "15294:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15297:1:8",
														"nodeType": "YulTypedName",
														"src": "15297:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15303:3:8",
														"nodeType": "YulTypedName",
														"src": "15303:3:8",
														"type": ""
													}
												],
												"src": "15263:191:8"
											},
											{
												"body": {
													"nativeSrc": "15566:61:8",
													"nodeType": "YulBlock",
													"src": "15566:61:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15588:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15588:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15596:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15596:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15584:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15584:3:8"
																		},
																		"nativeSrc": "15584:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15584:14:8"
																	},
																	{
																		"hexValue": "46756e64696e6720697320636c6f736564",
																		"kind": "string",
																		"nativeSrc": "15600:19:8",
																		"nodeType": "YulLiteral",
																		"src": "15600:19:8",
																		"type": "",
																		"value": "Funding is closed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15577:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15577:6:8"
																},
																"nativeSrc": "15577:43:8",
																"nodeType": "YulFunctionCall",
																"src": "15577:43:8"
															},
															"nativeSrc": "15577:43:8",
															"nodeType": "YulExpressionStatement",
															"src": "15577:43:8"
														}
													]
												},
												"name": "store_literal_in_memory_dacec424514392f190ecf5d0b95a745954c9a31ddd7829502ac5c4498a85080d",
												"nativeSrc": "15460:167:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15558:6:8",
														"nodeType": "YulTypedName",
														"src": "15558:6:8",
														"type": ""
													}
												],
												"src": "15460:167:8"
											},
											{
												"body": {
													"nativeSrc": "15779:220:8",
													"nodeType": "YulBlock",
													"src": "15779:220:8",
													"statements": [
														{
															"nativeSrc": "15789:74:8",
															"nodeType": "YulAssignment",
															"src": "15789:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15855:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15855:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15860:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15860:2:8",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15796:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "15796:58:8"
																},
																"nativeSrc": "15796:67:8",
																"nodeType": "YulFunctionCall",
																"src": "15796:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15789:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15789:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15961:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15961:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dacec424514392f190ecf5d0b95a745954c9a31ddd7829502ac5c4498a85080d",
																	"nativeSrc": "15872:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "15872:88:8"
																},
																"nativeSrc": "15872:93:8",
																"nodeType": "YulFunctionCall",
																"src": "15872:93:8"
															},
															"nativeSrc": "15872:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "15872:93:8"
														},
														{
															"nativeSrc": "15974:19:8",
															"nodeType": "YulAssignment",
															"src": "15974:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15985:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15985:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15990:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15990:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15981:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15981:3:8"
																},
																"nativeSrc": "15981:12:8",
																"nodeType": "YulFunctionCall",
																"src": "15981:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15974:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15974:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dacec424514392f190ecf5d0b95a745954c9a31ddd7829502ac5c4498a85080d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15633:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15767:3:8",
														"nodeType": "YulTypedName",
														"src": "15767:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15775:3:8",
														"nodeType": "YulTypedName",
														"src": "15775:3:8",
														"type": ""
													}
												],
												"src": "15633:366:8"
											},
											{
												"body": {
													"nativeSrc": "16176:248:8",
													"nodeType": "YulBlock",
													"src": "16176:248:8",
													"statements": [
														{
															"nativeSrc": "16186:26:8",
															"nodeType": "YulAssignment",
															"src": "16186:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16198:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "16198:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16209:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16209:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16194:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16194:3:8"
																},
																"nativeSrc": "16194:18:8",
																"nodeType": "YulFunctionCall",
																"src": "16194:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16186:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16186:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16233:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16233:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16244:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16244:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16229:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16229:3:8"
																		},
																		"nativeSrc": "16229:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16229:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16252:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "16252:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16258:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16258:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16248:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16248:3:8"
																		},
																		"nativeSrc": "16248:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16248:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16222:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16222:6:8"
																},
																"nativeSrc": "16222:47:8",
																"nodeType": "YulFunctionCall",
																"src": "16222:47:8"
															},
															"nativeSrc": "16222:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "16222:47:8"
														},
														{
															"nativeSrc": "16278:139:8",
															"nodeType": "YulAssignment",
															"src": "16278:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16412:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16412:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dacec424514392f190ecf5d0b95a745954c9a31ddd7829502ac5c4498a85080d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16286:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "16286:124:8"
																},
																"nativeSrc": "16286:131:8",
																"nodeType": "YulFunctionCall",
																"src": "16286:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16278:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16278:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dacec424514392f190ecf5d0b95a745954c9a31ddd7829502ac5c4498a85080d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16005:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16156:9:8",
														"nodeType": "YulTypedName",
														"src": "16156:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16171:4:8",
														"nodeType": "YulTypedName",
														"src": "16171:4:8",
														"type": ""
													}
												],
												"src": "16005:419:8"
											},
											{
												"body": {
													"nativeSrc": "16536:116:8",
													"nodeType": "YulBlock",
													"src": "16536:116:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16558:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16558:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16566:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16566:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16554:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16554:3:8"
																		},
																		"nativeSrc": "16554:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16554:14:8"
																	},
																	{
																		"hexValue": "436f6e747269627574696f6e206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nativeSrc": "16570:34:8",
																		"nodeType": "YulLiteral",
																		"src": "16570:34:8",
																		"type": "",
																		"value": "Contribution must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16547:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16547:6:8"
																},
																"nativeSrc": "16547:58:8",
																"nodeType": "YulFunctionCall",
																"src": "16547:58:8"
															},
															"nativeSrc": "16547:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "16547:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16626:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16626:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16634:2:8",
																				"nodeType": "YulLiteral",
																				"src": "16634:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16622:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16622:3:8"
																		},
																		"nativeSrc": "16622:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16622:15:8"
																	},
																	{
																		"hexValue": "6e2030",
																		"kind": "string",
																		"nativeSrc": "16639:5:8",
																		"nodeType": "YulLiteral",
																		"src": "16639:5:8",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16615:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16615:6:8"
																},
																"nativeSrc": "16615:30:8",
																"nodeType": "YulFunctionCall",
																"src": "16615:30:8"
															},
															"nativeSrc": "16615:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "16615:30:8"
														}
													]
												},
												"name": "store_literal_in_memory_c5e5aa06e63518928aca28b9bd5d4b07f19d38bcb7e3ef13f7b9cb1a8a22ba4c",
												"nativeSrc": "16430:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16528:6:8",
														"nodeType": "YulTypedName",
														"src": "16528:6:8",
														"type": ""
													}
												],
												"src": "16430:222:8"
											},
											{
												"body": {
													"nativeSrc": "16804:220:8",
													"nodeType": "YulBlock",
													"src": "16804:220:8",
													"statements": [
														{
															"nativeSrc": "16814:74:8",
															"nodeType": "YulAssignment",
															"src": "16814:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16880:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16880:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16885:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16885:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16821:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "16821:58:8"
																},
																"nativeSrc": "16821:67:8",
																"nodeType": "YulFunctionCall",
																"src": "16821:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16814:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16814:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16986:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16986:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5e5aa06e63518928aca28b9bd5d4b07f19d38bcb7e3ef13f7b9cb1a8a22ba4c",
																	"nativeSrc": "16897:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "16897:88:8"
																},
																"nativeSrc": "16897:93:8",
																"nodeType": "YulFunctionCall",
																"src": "16897:93:8"
															},
															"nativeSrc": "16897:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "16897:93:8"
														},
														{
															"nativeSrc": "16999:19:8",
															"nodeType": "YulAssignment",
															"src": "16999:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17010:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17010:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17015:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17015:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17006:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17006:3:8"
																},
																"nativeSrc": "17006:12:8",
																"nodeType": "YulFunctionCall",
																"src": "17006:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16999:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16999:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5e5aa06e63518928aca28b9bd5d4b07f19d38bcb7e3ef13f7b9cb1a8a22ba4c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16658:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16792:3:8",
														"nodeType": "YulTypedName",
														"src": "16792:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16800:3:8",
														"nodeType": "YulTypedName",
														"src": "16800:3:8",
														"type": ""
													}
												],
												"src": "16658:366:8"
											},
											{
												"body": {
													"nativeSrc": "17201:248:8",
													"nodeType": "YulBlock",
													"src": "17201:248:8",
													"statements": [
														{
															"nativeSrc": "17211:26:8",
															"nodeType": "YulAssignment",
															"src": "17211:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17223:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17223:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17234:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17234:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17219:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17219:3:8"
																},
																"nativeSrc": "17219:18:8",
																"nodeType": "YulFunctionCall",
																"src": "17219:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17211:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17211:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17258:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17258:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17269:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17269:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17254:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17254:3:8"
																		},
																		"nativeSrc": "17254:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17254:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17277:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "17277:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17283:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17283:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17273:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17273:3:8"
																		},
																		"nativeSrc": "17273:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17273:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17247:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17247:6:8"
																},
																"nativeSrc": "17247:47:8",
																"nodeType": "YulFunctionCall",
																"src": "17247:47:8"
															},
															"nativeSrc": "17247:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "17247:47:8"
														},
														{
															"nativeSrc": "17303:139:8",
															"nodeType": "YulAssignment",
															"src": "17303:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17437:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17437:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5e5aa06e63518928aca28b9bd5d4b07f19d38bcb7e3ef13f7b9cb1a8a22ba4c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17311:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "17311:124:8"
																},
																"nativeSrc": "17311:131:8",
																"nodeType": "YulFunctionCall",
																"src": "17311:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17303:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17303:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5e5aa06e63518928aca28b9bd5d4b07f19d38bcb7e3ef13f7b9cb1a8a22ba4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17030:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17181:9:8",
														"nodeType": "YulTypedName",
														"src": "17181:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17196:4:8",
														"nodeType": "YulTypedName",
														"src": "17196:4:8",
														"type": ""
													}
												],
												"src": "17030:419:8"
											},
											{
												"body": {
													"nativeSrc": "17581:206:8",
													"nodeType": "YulBlock",
													"src": "17581:206:8",
													"statements": [
														{
															"nativeSrc": "17591:26:8",
															"nodeType": "YulAssignment",
															"src": "17591:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17603:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17603:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17614:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17614:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17599:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17599:3:8"
																},
																"nativeSrc": "17599:18:8",
																"nodeType": "YulFunctionCall",
																"src": "17599:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17591:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17591:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17671:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17671:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17684:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17684:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17695:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17695:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17680:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17680:3:8"
																		},
																		"nativeSrc": "17680:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17680:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17627:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "17627:43:8"
																},
																"nativeSrc": "17627:71:8",
																"nodeType": "YulFunctionCall",
																"src": "17627:71:8"
															},
															"nativeSrc": "17627:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "17627:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17752:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17752:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17765:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17765:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17776:2:8",
																				"nodeType": "YulLiteral",
																				"src": "17776:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17761:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17761:3:8"
																		},
																		"nativeSrc": "17761:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17761:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17708:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "17708:43:8"
																},
																"nativeSrc": "17708:72:8",
																"nodeType": "YulFunctionCall",
																"src": "17708:72:8"
															},
															"nativeSrc": "17708:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "17708:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17455:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17545:9:8",
														"nodeType": "YulTypedName",
														"src": "17545:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17557:6:8",
														"nodeType": "YulTypedName",
														"src": "17557:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17565:6:8",
														"nodeType": "YulTypedName",
														"src": "17565:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17576:4:8",
														"nodeType": "YulTypedName",
														"src": "17576:4:8",
														"type": ""
													}
												],
												"src": "17455:332:8"
											},
											{
												"body": {
													"nativeSrc": "17947:288:8",
													"nodeType": "YulBlock",
													"src": "17947:288:8",
													"statements": [
														{
															"nativeSrc": "17957:26:8",
															"nodeType": "YulAssignment",
															"src": "17957:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17969:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17969:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17980:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17980:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17965:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17965:3:8"
																},
																"nativeSrc": "17965:18:8",
																"nodeType": "YulFunctionCall",
																"src": "17965:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17957:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17957:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18037:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "18037:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18050:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18050:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18061:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18061:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18046:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18046:3:8"
																		},
																		"nativeSrc": "18046:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18046:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17993:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "17993:43:8"
																},
																"nativeSrc": "17993:71:8",
																"nodeType": "YulFunctionCall",
																"src": "17993:71:8"
															},
															"nativeSrc": "17993:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "17993:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18118:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "18118:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18131:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18131:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18142:2:8",
																				"nodeType": "YulLiteral",
																				"src": "18142:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18127:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18127:3:8"
																		},
																		"nativeSrc": "18127:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18127:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18074:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "18074:43:8"
																},
																"nativeSrc": "18074:72:8",
																"nodeType": "YulFunctionCall",
																"src": "18074:72:8"
															},
															"nativeSrc": "18074:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "18074:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18200:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "18200:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18213:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18213:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18224:2:8",
																				"nodeType": "YulLiteral",
																				"src": "18224:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18209:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18209:3:8"
																		},
																		"nativeSrc": "18209:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18209:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18156:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "18156:43:8"
																},
																"nativeSrc": "18156:72:8",
																"nodeType": "YulFunctionCall",
																"src": "18156:72:8"
															},
															"nativeSrc": "18156:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "18156:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17793:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17903:9:8",
														"nodeType": "YulTypedName",
														"src": "17903:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17915:6:8",
														"nodeType": "YulTypedName",
														"src": "17915:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17923:6:8",
														"nodeType": "YulTypedName",
														"src": "17923:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17931:6:8",
														"nodeType": "YulTypedName",
														"src": "17931:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17942:4:8",
														"nodeType": "YulTypedName",
														"src": "17942:4:8",
														"type": ""
													}
												],
												"src": "17793:442:8"
											},
											{
												"body": {
													"nativeSrc": "18347:75:8",
													"nodeType": "YulBlock",
													"src": "18347:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18369:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "18369:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18377:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18377:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18365:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18365:3:8"
																		},
																		"nativeSrc": "18365:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18365:14:8"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "18381:33:8",
																		"nodeType": "YulLiteral",
																		"src": "18381:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18358:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18358:6:8"
																},
																"nativeSrc": "18358:57:8",
																"nodeType": "YulFunctionCall",
																"src": "18358:57:8"
															},
															"nativeSrc": "18358:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "18358:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "18241:181:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18339:6:8",
														"nodeType": "YulTypedName",
														"src": "18339:6:8",
														"type": ""
													}
												],
												"src": "18241:181:8"
											},
											{
												"body": {
													"nativeSrc": "18574:220:8",
													"nodeType": "YulBlock",
													"src": "18574:220:8",
													"statements": [
														{
															"nativeSrc": "18584:74:8",
															"nodeType": "YulAssignment",
															"src": "18584:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18650:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18650:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18655:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18655:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18591:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "18591:58:8"
																},
																"nativeSrc": "18591:67:8",
																"nodeType": "YulFunctionCall",
																"src": "18591:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18584:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18584:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18756:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18756:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "18667:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "18667:88:8"
																},
																"nativeSrc": "18667:93:8",
																"nodeType": "YulFunctionCall",
																"src": "18667:93:8"
															},
															"nativeSrc": "18667:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "18667:93:8"
														},
														{
															"nativeSrc": "18769:19:8",
															"nodeType": "YulAssignment",
															"src": "18769:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18780:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18780:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18785:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18785:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18776:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18776:3:8"
																},
																"nativeSrc": "18776:12:8",
																"nodeType": "YulFunctionCall",
																"src": "18776:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18769:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18769:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18428:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18562:3:8",
														"nodeType": "YulTypedName",
														"src": "18562:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18570:3:8",
														"nodeType": "YulTypedName",
														"src": "18570:3:8",
														"type": ""
													}
												],
												"src": "18428:366:8"
											},
											{
												"body": {
													"nativeSrc": "18971:248:8",
													"nodeType": "YulBlock",
													"src": "18971:248:8",
													"statements": [
														{
															"nativeSrc": "18981:26:8",
															"nodeType": "YulAssignment",
															"src": "18981:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18993:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "18993:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19004:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19004:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18989:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18989:3:8"
																},
																"nativeSrc": "18989:18:8",
																"nodeType": "YulFunctionCall",
																"src": "18989:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18981:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18981:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19028:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19028:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19039:1:8",
																				"nodeType": "YulLiteral",
																				"src": "19039:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19024:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19024:3:8"
																		},
																		"nativeSrc": "19024:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19024:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19047:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "19047:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19053:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19053:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19043:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19043:3:8"
																		},
																		"nativeSrc": "19043:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19043:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19017:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19017:6:8"
																},
																"nativeSrc": "19017:47:8",
																"nodeType": "YulFunctionCall",
																"src": "19017:47:8"
															},
															"nativeSrc": "19017:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "19017:47:8"
														},
														{
															"nativeSrc": "19073:139:8",
															"nodeType": "YulAssignment",
															"src": "19073:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19207:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19207:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19081:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "19081:124:8"
																},
																"nativeSrc": "19081:131:8",
																"nodeType": "YulFunctionCall",
																"src": "19081:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19073:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19073:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18800:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18951:9:8",
														"nodeType": "YulTypedName",
														"src": "18951:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18966:4:8",
														"nodeType": "YulTypedName",
														"src": "18966:4:8",
														"type": ""
													}
												],
												"src": "18800:419:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_589f77ce001b8beeda2f278d91ba16dd7c7bd1709ca2e7c12f193e44d84299d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Funding still active\")\n\n    }\n\n    function abi_encode_t_stringliteral_589f77ce001b8beeda2f278d91ba16dd7c7bd1709ca2e7c12f193e44d84299d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_589f77ce001b8beeda2f278d91ba16dd7c7bd1709ca2e7c12f193e44d84299d2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_589f77ce001b8beeda2f278d91ba16dd7c7bd1709ca2e7c12f193e44d84299d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_589f77ce001b8beeda2f278d91ba16dd7c7bd1709ca2e7c12f193e44d84299d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_0d6472a439219175f58c2c24311e8dc196b2c1ebdd449fee5365e9b336929ab0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough votes\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d6472a439219175f58c2c24311e8dc196b2c1ebdd449fee5365e9b336929ab0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_0d6472a439219175f58c2c24311e8dc196b2c1ebdd449fee5365e9b336929ab0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d6472a439219175f58c2c24311e8dc196b2c1ebdd449fee5365e9b336929ab0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d6472a439219175f58c2c24311e8dc196b2c1ebdd449fee5365e9b336929ab0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"No funds to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cdbd805c137dcffd16d72dbea3cefe7001c5466d06748eaabed45649b8504a7e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Funding already ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_cdbd805c137dcffd16d72dbea3cefe7001c5466d06748eaabed45649b8504a7e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_cdbd805c137dcffd16d72dbea3cefe7001c5466d06748eaabed45649b8504a7e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cdbd805c137dcffd16d72dbea3cefe7001c5466d06748eaabed45649b8504a7e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cdbd805c137dcffd16d72dbea3cefe7001c5466d06748eaabed45649b8504a7e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_167c9b3380513941ed45ad6c12ae68092c0fdbdf8dd00ce6e252f9bd866e577a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be an investor\")\n\n    }\n\n    function abi_encode_t_stringliteral_167c9b3380513941ed45ad6c12ae68092c0fdbdf8dd00ce6e252f9bd866e577a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_167c9b3380513941ed45ad6c12ae68092c0fdbdf8dd00ce6e252f9bd866e577a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_167c9b3380513941ed45ad6c12ae68092c0fdbdf8dd00ce6e252f9bd866e577a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_167c9b3380513941ed45ad6c12ae68092c0fdbdf8dd00ce6e252f9bd866e577a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already voted\")\n\n    }\n\n    function abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_dacec424514392f190ecf5d0b95a745954c9a31ddd7829502ac5c4498a85080d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Funding is closed\")\n\n    }\n\n    function abi_encode_t_stringliteral_dacec424514392f190ecf5d0b95a745954c9a31ddd7829502ac5c4498a85080d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_dacec424514392f190ecf5d0b95a745954c9a31ddd7829502ac5c4498a85080d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dacec424514392f190ecf5d0b95a745954c9a31ddd7829502ac5c4498a85080d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dacec424514392f190ecf5d0b95a745954c9a31ddd7829502ac5c4498a85080d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c5e5aa06e63518928aca28b9bd5d4b07f19d38bcb7e3ef13f7b9cb1a8a22ba4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contribution must be greater tha\")\n\n        mstore(add(memPtr, 32), \"n 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_c5e5aa06e63518928aca28b9bd5d4b07f19d38bcb7e3ef13f7b9cb1a8a22ba4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_c5e5aa06e63518928aca28b9bd5d4b07f19d38bcb7e3ef13f7b9cb1a8a22ba4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5e5aa06e63518928aca28b9bd5d4b07f19d38bcb7e3ef13f7b9cb1a8a22ba4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5e5aa06e63518928aca28b9bd5d4b07f19d38bcb7e3ef13f7b9cb1a8a22ba4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610180575f3560e01c8063636d6c9d116100d05780638da5cb5b11610089578063a9059cbb11610063578063a9059cbb1461052a578063d7bb99ba14610566578063dd62ed3e14610570578063f2fde38b146105ac57610180565b80638da5cb5b146104c057806394b6a4b8146104ea57806395d89b411461050057610180565b8063636d6c9d146103c65780636681b9fd146103f057806370a082311461041a578063715018a6146104565780637a3a0e841461046c5780638b7afe2e1461049657610180565b806324600fc31161013d5780633e186253116101175780633e186253146103205780633fc5144e1461034a57806342e94c90146103605780635ec1cfb71461039c57610180565b806324600fc3146102b65780632c4e722e146102cc578063313ce567146102f657610180565b806306fdde0314610184578063095ea7b3146101ae57806309eef43e146101ea5780630d15fd771461022657806318160ddd1461025057806323b872dd1461027a575b5f5ffd5b34801561018f575f5ffd5b506101986105d4565b6040516101a59190611833565b60405180910390f35b3480156101b9575f5ffd5b506101d460048036038101906101cf91906118e4565b610664565b6040516101e1919061193c565b60405180910390f35b3480156101f5575f5ffd5b50610210600480360381019061020b9190611955565b610686565b60405161021d919061193c565b60405180910390f35b348015610231575f5ffd5b5061023a6106a3565b604051610247919061198f565b60405180910390f35b34801561025b575f5ffd5b506102646106a9565b604051610271919061198f565b60405180910390f35b348015610285575f5ffd5b506102a0600480360381019061029b91906119a8565b6106b2565b6040516102ad919061193c565b60405180910390f35b3480156102c1575f5ffd5b506102ca6106e0565b005b3480156102d7575f5ffd5b506102e06108fb565b6040516102ed919061198f565b60405180910390f35b348015610301575f5ffd5b5061030a610901565b6040516103179190611a13565b60405180910390f35b34801561032b575f5ffd5b50610334610909565b604051610341919061193c565b60405180910390f35b348015610355575f5ffd5b5061035e610936565b005b34801561036b575f5ffd5b5061038660048036038101906103819190611955565b6109d3565b604051610393919061198f565b60405180910390f35b3480156103a7575f5ffd5b506103b06109e8565b6040516103bd919061198f565b60405180910390f35b3480156103d1575f5ffd5b506103da6109ee565b6040516103e7919061193c565b60405180910390f35b3480156103fb575f5ffd5b50610404610a00565b604051610411919061198f565b60405180910390f35b348015610425575f5ffd5b50610440600480360381019061043b9190611955565b610a06565b60405161044d919061198f565b60405180910390f35b348015610461575f5ffd5b5061046a610a4c565b005b348015610477575f5ffd5b50610480610a5f565b60405161048d919061198f565b60405180910390f35b3480156104a1575f5ffd5b506104aa610a65565b6040516104b7919061198f565b60405180910390f35b3480156104cb575f5ffd5b506104d4610a6c565b6040516104e19190611a3b565b60405180910390f35b3480156104f5575f5ffd5b506104fe610a93565b005b34801561050b575f5ffd5b50610514610c9b565b6040516105219190611833565b60405180910390f35b348015610535575f5ffd5b50610550600480360381019061054b91906118e4565b610d2b565b60405161055d919061193c565b60405180910390f35b61056e610d4d565b005b34801561057b575f5ffd5b5061059660048036038101906105919190611a54565b610f17565b6040516105a3919061198f565b60405180910390f35b3480156105b7575f5ffd5b506105d260048036038101906105cd9190611955565b610f99565b005b6060600580546105e390611abf565b80601f016020809104026020016040519081016040528092919081815260200182805461060f90611abf565b801561065a5780601f106106315761010080835404028352916020019161065a565b820191905f5260205f20905b81548152906001019060200180831161063d57829003601f168201915b5050505050905090565b5f5f61066e61101d565b905061067b818585611024565b600191505092915050565b600c602052805f5260405f205f915054906101000a900460ff1681565b600d5481565b5f600454905090565b5f5f6106bc61101d565b90506106c9858285611036565b6106d48585856110c9565b60019150509392505050565b6106e86111b9565b6106f0611240565b600a5f9054906101000a900460ff161561073f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073690611b39565b60405180910390fd5b5f612710600e546009546107539190611b84565b61075d9190611bf2565b905080600d5410156107a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079b90611c6c565b60405180910390fd5b5f4790505f81116107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190611cd4565b60405180910390fd5b5f6107f3610a6c565b73ffffffffffffffffffffffffffffffffffffffff168260405161081690611d1f565b5f6040518083038185875af1925050503d805f8114610850576040519150601f19603f3d011682016040523d82523d5f602084013e610855565b606091505b5050905080610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090611d7d565b60405180910390fd5b6108a1610a6c565b73ffffffffffffffffffffffffffffffffffffffff167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d836040516108e6919061198f565b60405180910390a25050506108f961128f565b565b60075481565b5f6012905090565b5f5f612710600e5460095461091e9190611b84565b6109289190611bf2565b905080600d54101591505090565b61093e6111b9565b600a5f9054906101000a900460ff1661098c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098390611de5565b60405180910390fd5b5f600a5f6101000a81548160ff0219169083151502179055507fbdc0e037eadb8b0c782400faf1b352631d6cd8bdf086c0e7eb0028e210041dc960405160405180910390a1565b600b602052805f5260405f205f915090505481565b600e5481565b600a5f9054906101000a900460ff1681565b60095481565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610a546111b9565b610a5d5f611298565b565b60085481565b5f47905090565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a9b611240565b5f600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205411610b1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1190611e4d565b60405180910390fd5b600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610ba4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9b90611eb5565b60405180910390fd5b6001600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600d5f828254610c479190611ed3565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f16a9aa39af49f169911e977347975198c503525f7240d6892a626f0227642fce60405160405180910390a2610c9961128f565b565b606060068054610caa90611abf565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd690611abf565b8015610d215780601f10610cf857610100808354040283529160200191610d21565b820191905f5260205f20905b815481529060010190602001808311610d0457829003601f168201915b5050505050905090565b5f5f610d3561101d565b9050610d428185856110c9565b600191505092915050565b610d55611240565b600a5f9054906101000a900460ff16610da3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9a90611f50565b60405180910390fd5b5f3411610de5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddc90611fde565b60405180910390fd5b5f60075434610df49190611b84565b905034600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610e429190611ed3565b925050819055503460095f828254610e5a9190611ed3565b92505081905550610e6b3382611359565b3373ffffffffffffffffffffffffffffffffffffffff167f5f7675b09617d2c9fa4fd13058ee5877a9538f626b0308816736e83748a450403483604051610eb3929190611ffc565b60405180910390a260085460095410610f0c575f600a5f6101000a81548160ff0219169083151502179055507fbdc0e037eadb8b0c782400faf1b352631d6cd8bdf086c0e7eb0028e210041dc960405160405180910390a15b50610f1561128f565b565b5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610fa16111b9565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611011575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110089190611a3b565b60405180910390fd5b61101a81611298565b50565b5f33905090565b61103183838360016113d8565b505050565b5f6110418484610f17565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156110c357818110156110b4578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016110ab93929190612023565b60405180910390fd5b6110c284848484035f6113d8565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611139575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111309190611a3b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111a9575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111a09190611a3b565b60405180910390fd5b6111b48383836115a7565b505050565b6111c161101d565b73ffffffffffffffffffffffffffffffffffffffff166111df610a6c565b73ffffffffffffffffffffffffffffffffffffffff161461123e5761120261101d565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112359190611a3b565b60405180910390fd5b565b600260015403611285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127c906120a2565b60405180910390fd5b6002600181905550565b60018081905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113c9575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113c09190611a3b565b60405180910390fd5b6113d45f83836115a7565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611448575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161143f9190611a3b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114b8575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114af9190611a3b565b60405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156115a1578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611598919061198f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115f7578060045f8282546115eb9190611ed3565b925050819055506116c7565b5f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611681578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161167893929190612023565b60405180910390fd5b81810360025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361170e578060045f8282540392505081905550611759565b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117b6919061198f565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611805826117c3565b61180f81856117cd565b935061181f8185602086016117dd565b611828816117eb565b840191505092915050565b5f6020820190508181035f83015261184b81846117fb565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61188082611857565b9050919050565b61189081611876565b811461189a575f5ffd5b50565b5f813590506118ab81611887565b92915050565b5f819050919050565b6118c3816118b1565b81146118cd575f5ffd5b50565b5f813590506118de816118ba565b92915050565b5f5f604083850312156118fa576118f9611853565b5b5f6119078582860161189d565b9250506020611918858286016118d0565b9150509250929050565b5f8115159050919050565b61193681611922565b82525050565b5f60208201905061194f5f83018461192d565b92915050565b5f6020828403121561196a57611969611853565b5b5f6119778482850161189d565b91505092915050565b611989816118b1565b82525050565b5f6020820190506119a25f830184611980565b92915050565b5f5f5f606084860312156119bf576119be611853565b5b5f6119cc8682870161189d565b93505060206119dd8682870161189d565b92505060406119ee868287016118d0565b9150509250925092565b5f60ff82169050919050565b611a0d816119f8565b82525050565b5f602082019050611a265f830184611a04565b92915050565b611a3581611876565b82525050565b5f602082019050611a4e5f830184611a2c565b92915050565b5f5f60408385031215611a6a57611a69611853565b5b5f611a778582860161189d565b9250506020611a888582860161189d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ad657607f821691505b602082108103611ae957611ae8611a92565b5b50919050565b7f46756e64696e67207374696c6c206163746976650000000000000000000000005f82015250565b5f611b236014836117cd565b9150611b2e82611aef565b602082019050919050565b5f6020820190508181035f830152611b5081611b17565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611b8e826118b1565b9150611b99836118b1565b9250828202611ba7816118b1565b91508282048414831517611bbe57611bbd611b57565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611bfc826118b1565b9150611c07836118b1565b925082611c1757611c16611bc5565b5b828204905092915050565b7f4e6f7420656e6f75676820766f746573000000000000000000000000000000005f82015250565b5f611c566010836117cd565b9150611c6182611c22565b602082019050919050565b5f6020820190508181035f830152611c8381611c4a565b9050919050565b7f4e6f2066756e647320746f2077697468647261770000000000000000000000005f82015250565b5f611cbe6014836117cd565b9150611cc982611c8a565b602082019050919050565b5f6020820190508181035f830152611ceb81611cb2565b9050919050565b5f81905092915050565b50565b5f611d0a5f83611cf2565b9150611d1582611cfc565b5f82019050919050565b5f611d2982611cff565b9150819050919050565b7f5769746864726177616c206661696c65640000000000000000000000000000005f82015250565b5f611d676011836117cd565b9150611d7282611d33565b602082019050919050565b5f6020820190508181035f830152611d9481611d5b565b9050919050565b7f46756e64696e6720616c726561647920656e64656400000000000000000000005f82015250565b5f611dcf6015836117cd565b9150611dda82611d9b565b602082019050919050565b5f6020820190508181035f830152611dfc81611dc3565b9050919050565b7f4d75737420626520616e20696e766573746f72000000000000000000000000005f82015250565b5f611e376013836117cd565b9150611e4282611e03565b602082019050919050565b5f6020820190508181035f830152611e6481611e2b565b9050919050565b7f416c726561647920766f746564000000000000000000000000000000000000005f82015250565b5f611e9f600d836117cd565b9150611eaa82611e6b565b602082019050919050565b5f6020820190508181035f830152611ecc81611e93565b9050919050565b5f611edd826118b1565b9150611ee8836118b1565b9250828201905080821115611f0057611eff611b57565b5b92915050565b7f46756e64696e6720697320636c6f7365640000000000000000000000000000005f82015250565b5f611f3a6011836117cd565b9150611f4582611f06565b602082019050919050565b5f6020820190508181035f830152611f6781611f2e565b9050919050565b7f436f6e747269627574696f6e206d7573742062652067726561746572207468615f8201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b5f611fc86023836117cd565b9150611fd382611f6e565b604082019050919050565b5f6020820190508181035f830152611ff581611fbc565b9050919050565b5f60408201905061200f5f830185611980565b61201c6020830184611980565b9392505050565b5f6060820190506120365f830186611a2c565b6120436020830185611980565b6120506040830184611980565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61208c601f836117cd565b915061209782612058565b602082019050919050565b5f6020820190508181035f8301526120b981612080565b905091905056fea2646970667358221220ec25427f5b9c2f019666777f7e0e1efcdb41cc01abe12224aa28cad73530977b64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x180 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x636D6C9D GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xD7BB99BA EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5AC JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x94B6A4B8 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x500 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x636D6C9D EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x6681B9FD EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x7A3A0E84 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x8B7AFE2E EQ PUSH2 0x496 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x24600FC3 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x3E186253 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x3E186253 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x3FC5144E EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x42E94C90 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x5EC1CFB7 EQ PUSH2 0x39C JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2F6 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x9EEF43E EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xD15FD77 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x27A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x198 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1955 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x264 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x6E0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x936 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1955 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3B0 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3DA PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x404 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x425 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x1955 JUMP JUMPDEST PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x46A PUSH2 0xA4C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x477 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x480 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4AA PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4D4 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4FE PUSH2 0xA93 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x514 PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x550 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56E PUSH2 0xD4D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x596 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x1955 JUMP JUMPDEST PUSH2 0xF99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x5E3 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x60F SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x65A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x631 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x65A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x63D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x66E PUSH2 0x101D JUMP JUMPDEST SWAP1 POP PUSH2 0x67B DUP2 DUP6 DUP6 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6BC PUSH2 0x101D JUMP JUMPDEST SWAP1 POP PUSH2 0x6C9 DUP6 DUP3 DUP6 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x6D4 DUP6 DUP6 DUP6 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0x11B9 JUMP JUMPDEST PUSH2 0x6F0 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x736 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0xE SLOAD PUSH1 0x9 SLOAD PUSH2 0x753 SWAP2 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x75D SWAP2 SWAP1 PUSH2 0x1BF2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD SLOAD LT ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x7F3 PUSH2 0xA6C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x816 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x855 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x890 SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A1 PUSH2 0xA6C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D DUP4 PUSH1 0x40 MLOAD PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x8F9 PUSH2 0x128F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x2710 PUSH1 0xE SLOAD PUSH1 0x9 SLOAD PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x1BF2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD SLOAD LT ISZERO SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x93E PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x98C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x983 SWAP1 PUSH2 0x1DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xBDC0E037EADB8B0C782400FAF1B352631D6CD8BDF086C0E7EB0028E210041DC9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA54 PUSH2 0x11B9 JUMP JUMPDEST PUSH2 0xA5D PUSH0 PUSH2 0x1298 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA9B PUSH2 0x1240 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0xB1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB11 SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9B SWAP1 PUSH2 0x1EB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x16A9AA39AF49F169911E977347975198C503525F7240D6892A626F0227642FCE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xC99 PUSH2 0x128F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0xCAA SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCD6 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD21 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCF8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD21 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD04 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xD35 PUSH2 0x101D JUMP JUMPDEST SWAP1 POP PUSH2 0xD42 DUP2 DUP6 DUP6 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD55 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9A SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xDE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDC SWAP1 PUSH2 0x1FDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 SLOAD CALLVALUE PUSH2 0xDF4 SWAP2 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE42 SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE5A SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE6B CALLER DUP3 PUSH2 0x1359 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5F7675B09617D2C9FA4FD13058EE5877A9538F626B0308816736E83748A45040 CALLVALUE DUP4 PUSH1 0x40 MLOAD PUSH2 0xEB3 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD LT PUSH2 0xF0C JUMPI PUSH0 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xBDC0E037EADB8B0C782400FAF1B352631D6CD8BDF086C0E7EB0028E210041DC9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP PUSH2 0xF15 PUSH2 0x128F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFA1 PUSH2 0x11B9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1011 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1008 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101A DUP2 PUSH2 0x1298 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1031 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1041 DUP5 DUP5 PUSH2 0xF17 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x10C3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10B4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C2 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1139 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1130 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11A9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B4 DUP4 DUP4 DUP4 PUSH2 0x15A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x11C1 PUSH2 0x101D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11DF PUSH2 0xA6C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x123E JUMPI PUSH2 0x1202 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1235 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127C SWAP1 PUSH2 0x20A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13C9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C0 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13D4 PUSH0 DUP4 DUP4 PUSH2 0x15A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1448 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14B8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AF SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x15A1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1598 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15F7 JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15EB SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16C7 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1681 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1678 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x170E JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1759 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17B6 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1805 DUP3 PUSH2 0x17C3 JUMP JUMPDEST PUSH2 0x180F DUP2 DUP6 PUSH2 0x17CD JUMP JUMPDEST SWAP4 POP PUSH2 0x181F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17DD JUMP JUMPDEST PUSH2 0x1828 DUP2 PUSH2 0x17EB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x184B DUP2 DUP5 PUSH2 0x17FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1880 DUP3 PUSH2 0x1857 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1890 DUP2 PUSH2 0x1876 JUMP JUMPDEST DUP2 EQ PUSH2 0x189A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18AB DUP2 PUSH2 0x1887 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18C3 DUP2 PUSH2 0x18B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x18CD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18DE DUP2 PUSH2 0x18BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18FA JUMPI PUSH2 0x18F9 PUSH2 0x1853 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1907 DUP6 DUP3 DUP7 ADD PUSH2 0x189D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1918 DUP6 DUP3 DUP7 ADD PUSH2 0x18D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH2 0x1922 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x194F PUSH0 DUP4 ADD DUP5 PUSH2 0x192D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x196A JUMPI PUSH2 0x1969 PUSH2 0x1853 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1977 DUP5 DUP3 DUP6 ADD PUSH2 0x189D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1989 DUP2 PUSH2 0x18B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1980 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19BF JUMPI PUSH2 0x19BE PUSH2 0x1853 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19CC DUP7 DUP3 DUP8 ADD PUSH2 0x189D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19DD DUP7 DUP3 DUP8 ADD PUSH2 0x189D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19EE DUP7 DUP3 DUP8 ADD PUSH2 0x18D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0D DUP2 PUSH2 0x19F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A26 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A35 DUP2 PUSH2 0x1876 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4E PUSH0 DUP4 ADD DUP5 PUSH2 0x1A2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH2 0x1A69 PUSH2 0x1853 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A77 DUP6 DUP3 DUP7 ADD PUSH2 0x189D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A88 DUP6 DUP3 DUP7 ADD PUSH2 0x189D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AD6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AE9 JUMPI PUSH2 0x1AE8 PUSH2 0x1A92 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E64696E67207374696C6C20616374697665000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B23 PUSH1 0x14 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2E DUP3 PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B50 DUP2 PUSH2 0x1B17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B8E DUP3 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B99 DUP4 PUSH2 0x18B1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1BA7 DUP2 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1BBE JUMPI PUSH2 0x1BBD PUSH2 0x1B57 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BFC DUP3 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C07 DUP4 PUSH2 0x18B1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C17 JUMPI PUSH2 0x1C16 PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820766F74657300000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C56 PUSH1 0x10 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1C61 DUP3 PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C83 DUP2 PUSH2 0x1C4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2066756E647320746F207769746864726177000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CBE PUSH1 0x14 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC9 DUP3 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CEB DUP2 PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1D0A PUSH0 DUP4 PUSH2 0x1CF2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D15 DUP3 PUSH2 0x1CFC JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D29 DUP3 PUSH2 0x1CFF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177616C206661696C6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D67 PUSH1 0x11 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1D72 DUP3 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D94 DUP2 PUSH2 0x1D5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E64696E6720616C726561647920656E6465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DCF PUSH1 0x15 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDA DUP3 PUSH2 0x1D9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DFC DUP2 PUSH2 0x1DC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D75737420626520616E20696E766573746F7200000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E37 PUSH1 0x13 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1E42 DUP3 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E64 DUP2 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920766F74656400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E9F PUSH1 0xD DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAA DUP3 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ECC DUP2 PUSH2 0x1E93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EDD DUP3 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE8 DUP4 PUSH2 0x18B1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F00 JUMPI PUSH2 0x1EFF PUSH2 0x1B57 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x46756E64696E6720697320636C6F736564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F3A PUSH1 0x11 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1F45 DUP3 PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F67 DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E747269627574696F6E206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FC8 PUSH1 0x23 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD3 DUP3 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FF5 DUP2 PUSH2 0x1FBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x200F PUSH0 DUP4 ADD DUP6 PUSH2 0x1980 JUMP JUMPDEST PUSH2 0x201C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1980 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2036 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x2043 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1980 JUMP JUMPDEST PUSH2 0x2050 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1980 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x208C PUSH1 0x1F DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x2097 DUP3 PUSH2 0x2058 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20B9 DUP2 PUSH2 0x2080 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EOFCREATE 0x25 TIMESTAMP PUSH32 0x5B9C2F019666777F7E0E1EFCDB41CC01ABE12224AA28CAD73530977B64736F6C PUSH4 0x4300081D STOP CALLER ",
							"sourceMap": "297:3574:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;612:40:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;658:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2690:535:7;;;;;;;;;;;;;:::i;:::-;;353:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3282:185:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3534:177;;;;;;;;;;;;;:::i;:::-;;533:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;689:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;461:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;429:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;397:26:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3765:104;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2295:307:7;;;;;;;;;;;;;:::i;:::-;;1981:93:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1676:546:7;;;:::i;:::-;;3551:140:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:3;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;612:40:7:-;;;;;;;;;;;;;;;;;;;;;;:::o;658:25::-;;;;:::o;2849:97:3:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2690:535:7:-;1531:13:0;:11;:13::i;:::-;2261:21:2::1;:19;:21::i;:::-;2766:15:7::2;;;;;;;;;;;2765:16;2757:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2816:21;2882:5;2855:23;;2841:11;;:37;;;;:::i;:::-;2840:47;;;;:::i;:::-;2816:71;;2919:13;2905:10;;:27;;2897:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2964:14;2981:21;2964:38;;3029:1;3020:6;:10;3012:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;3067:12;3092:7;:5;:7::i;:::-;3084:21;;3113:6;3084:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3066:58;;;3142:7;3134:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;3202:7;:5;:7::i;:::-;3187:31;;;3211:6;3187:31;;;;;;:::i;:::-;;;;;;;;2747:478;;;2303:20:2::1;:18;:20::i;:::-;2690:535:7:o:0;353:19::-;;;;:::o;2707:82:3:-;2756:5;2780:2;2773:9;;2707:82;:::o;3282:185:7:-;3329:4;3345:21;3411:5;3384:23;;3370:11;;:37;;;;:::i;:::-;3369:47;;;;:::i;:::-;3345:71;;3447:13;3433:10;;:27;;3426:34;;;3282:185;:::o;3534:177::-;1531:13:0;:11;:13::i;:::-;3601:15:7::1;;;;;;;;;;;3593:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;3670:5;3652:15;;:23;;;;;;;;;;;;;;;;;;3690:14;;;;;;;;;;3534:177::o:0;533:48::-;;;;;;;;;;;;;;;;;:::o;689:38::-;;;;:::o;461:27::-;;;;;;;;;;;;;:::o;429:26::-;;;;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;397:26:7:-;;;;:::o;3765:104::-;3815:7;3841:21;3834:28;;3765:104;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2295:307:7:-;2261:21:2;:19;:21::i;:::-;2393:1:7::1;2365:13;:25;2379:10;2365:25;;;;;;;;;;;;;;;;:29;2357:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2437:8;:20;2446:10;2437:20;;;;;;;;;;;;;;;;;;;;;;;;;2436:21;2428:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2509:4;2486:8;:20;2495:10;2486:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2537:13;:25;2551:10;2537:25;;;;;;;;;;;;;;;;2523:10;;:39;;;;;;;:::i;:::-;;;;;;;;2584:10;2578:17;;;;;;;;;;;;2303:20:2::0;:18;:20::i;:::-;2295:307:7:o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;1676:546:7:-;2261:21:2;:19;:21::i;:::-;1746:15:7::1;;;;;;;;;;;1738:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1813:1;1801:9;:13;1793:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1865:20;1900:4;;1888:9;:16;;;;:::i;:::-;1865:39;;1943:9;1914:13;:25;1928:10;1914:25;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;1977:9;1962:11;;:24;;;;;;;:::i;:::-;;;;;;;;1997:31;2003:10;2015:12;1997:5;:31::i;:::-;2056:10;2043:49;;;2068:9;2079:12;2043:49;;;;;;;:::i;:::-;;;;;;;;2122:11;;2107;;:26;2103:113;;2167:5;2149:15;;:23;;;;;;;;;;;;;;;;;;2191:14;;;;;;;;;;2103:113;1728:494;2303:20:2::0;:18;:20::i;:::-;1676:546:7:o;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:329::-;3398:6;3447:2;3435:9;3426:7;3422:23;3418:32;3415:119;;;3453:79;;:::i;:::-;3415:119;3573:1;3598:53;3643:7;3634:6;3623:9;3619:22;3598:53;:::i;:::-;3588:63;;3544:117;3339:329;;;;:::o;3674:118::-;3761:24;3779:5;3761:24;:::i;:::-;3756:3;3749:37;3674:118;;:::o;3798:222::-;3891:4;3929:2;3918:9;3914:18;3906:26;;3942:71;4010:1;3999:9;3995:17;3986:6;3942:71;:::i;:::-;3798:222;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:170::-;6565:22;6561:1;6553:6;6549:14;6542:46;6425:170;:::o;6601:366::-;6743:3;6764:67;6828:2;6823:3;6764:67;:::i;:::-;6757:74;;6840:93;6929:3;6840:93;:::i;:::-;6958:2;6953:3;6949:12;6942:19;;6601:366;;;:::o;6973:419::-;7139:4;7177:2;7166:9;7162:18;7154:26;;7226:9;7220:4;7216:20;7212:1;7201:9;7197:17;7190:47;7254:131;7380:4;7254:131;:::i;:::-;7246:139;;6973:419;;;:::o;7398:180::-;7446:77;7443:1;7436:88;7543:4;7540:1;7533:15;7567:4;7564:1;7557:15;7584:410;7624:7;7647:20;7665:1;7647:20;:::i;:::-;7642:25;;7681:20;7699:1;7681:20;:::i;:::-;7676:25;;7736:1;7733;7729:9;7758:30;7776:11;7758:30;:::i;:::-;7747:41;;7937:1;7928:7;7924:15;7921:1;7918:22;7898:1;7891:9;7871:83;7848:139;;7967:18;;:::i;:::-;7848:139;7632:362;7584:410;;;;:::o;8000:180::-;8048:77;8045:1;8038:88;8145:4;8142:1;8135:15;8169:4;8166:1;8159:15;8186:185;8226:1;8243:20;8261:1;8243:20;:::i;:::-;8238:25;;8277:20;8295:1;8277:20;:::i;:::-;8272:25;;8316:1;8306:35;;8321:18;;:::i;:::-;8306:35;8363:1;8360;8356:9;8351:14;;8186:185;;;;:::o;8377:166::-;8517:18;8513:1;8505:6;8501:14;8494:42;8377:166;:::o;8549:366::-;8691:3;8712:67;8776:2;8771:3;8712:67;:::i;:::-;8705:74;;8788:93;8877:3;8788:93;:::i;:::-;8906:2;8901:3;8897:12;8890:19;;8549:366;;;:::o;8921:419::-;9087:4;9125:2;9114:9;9110:18;9102:26;;9174:9;9168:4;9164:20;9160:1;9149:9;9145:17;9138:47;9202:131;9328:4;9202:131;:::i;:::-;9194:139;;8921:419;;;:::o;9346:170::-;9486:22;9482:1;9474:6;9470:14;9463:46;9346:170;:::o;9522:366::-;9664:3;9685:67;9749:2;9744:3;9685:67;:::i;:::-;9678:74;;9761:93;9850:3;9761:93;:::i;:::-;9879:2;9874:3;9870:12;9863:19;;9522:366;;;:::o;9894:419::-;10060:4;10098:2;10087:9;10083:18;10075:26;;10147:9;10141:4;10137:20;10133:1;10122:9;10118:17;10111:47;10175:131;10301:4;10175:131;:::i;:::-;10167:139;;9894:419;;;:::o;10319:147::-;10420:11;10457:3;10442:18;;10319:147;;;;:::o;10472:114::-;;:::o;10592:398::-;10751:3;10772:83;10853:1;10848:3;10772:83;:::i;:::-;10765:90;;10864:93;10953:3;10864:93;:::i;:::-;10982:1;10977:3;10973:11;10966:18;;10592:398;;;:::o;10996:379::-;11180:3;11202:147;11345:3;11202:147;:::i;:::-;11195:154;;11366:3;11359:10;;10996:379;;;:::o;11381:167::-;11521:19;11517:1;11509:6;11505:14;11498:43;11381:167;:::o;11554:366::-;11696:3;11717:67;11781:2;11776:3;11717:67;:::i;:::-;11710:74;;11793:93;11882:3;11793:93;:::i;:::-;11911:2;11906:3;11902:12;11895:19;;11554:366;;;:::o;11926:419::-;12092:4;12130:2;12119:9;12115:18;12107:26;;12179:9;12173:4;12169:20;12165:1;12154:9;12150:17;12143:47;12207:131;12333:4;12207:131;:::i;:::-;12199:139;;11926:419;;;:::o;12351:171::-;12491:23;12487:1;12479:6;12475:14;12468:47;12351:171;:::o;12528:366::-;12670:3;12691:67;12755:2;12750:3;12691:67;:::i;:::-;12684:74;;12767:93;12856:3;12767:93;:::i;:::-;12885:2;12880:3;12876:12;12869:19;;12528:366;;;:::o;12900:419::-;13066:4;13104:2;13093:9;13089:18;13081:26;;13153:9;13147:4;13143:20;13139:1;13128:9;13124:17;13117:47;13181:131;13307:4;13181:131;:::i;:::-;13173:139;;12900:419;;;:::o;13325:169::-;13465:21;13461:1;13453:6;13449:14;13442:45;13325:169;:::o;13500:366::-;13642:3;13663:67;13727:2;13722:3;13663:67;:::i;:::-;13656:74;;13739:93;13828:3;13739:93;:::i;:::-;13857:2;13852:3;13848:12;13841:19;;13500:366;;;:::o;13872:419::-;14038:4;14076:2;14065:9;14061:18;14053:26;;14125:9;14119:4;14115:20;14111:1;14100:9;14096:17;14089:47;14153:131;14279:4;14153:131;:::i;:::-;14145:139;;13872:419;;;:::o;14297:163::-;14437:15;14433:1;14425:6;14421:14;14414:39;14297:163;:::o;14466:366::-;14608:3;14629:67;14693:2;14688:3;14629:67;:::i;:::-;14622:74;;14705:93;14794:3;14705:93;:::i;:::-;14823:2;14818:3;14814:12;14807:19;;14466:366;;;:::o;14838:419::-;15004:4;15042:2;15031:9;15027:18;15019:26;;15091:9;15085:4;15081:20;15077:1;15066:9;15062:17;15055:47;15119:131;15245:4;15119:131;:::i;:::-;15111:139;;14838:419;;;:::o;15263:191::-;15303:3;15322:20;15340:1;15322:20;:::i;:::-;15317:25;;15356:20;15374:1;15356:20;:::i;:::-;15351:25;;15399:1;15396;15392:9;15385:16;;15420:3;15417:1;15414:10;15411:36;;;15427:18;;:::i;:::-;15411:36;15263:191;;;;:::o;15460:167::-;15600:19;15596:1;15588:6;15584:14;15577:43;15460:167;:::o;15633:366::-;15775:3;15796:67;15860:2;15855:3;15796:67;:::i;:::-;15789:74;;15872:93;15961:3;15872:93;:::i;:::-;15990:2;15985:3;15981:12;15974:19;;15633:366;;;:::o;16005:419::-;16171:4;16209:2;16198:9;16194:18;16186:26;;16258:9;16252:4;16248:20;16244:1;16233:9;16229:17;16222:47;16286:131;16412:4;16286:131;:::i;:::-;16278:139;;16005:419;;;:::o;16430:222::-;16570:34;16566:1;16558:6;16554:14;16547:58;16639:5;16634:2;16626:6;16622:15;16615:30;16430:222;:::o;16658:366::-;16800:3;16821:67;16885:2;16880:3;16821:67;:::i;:::-;16814:74;;16897:93;16986:3;16897:93;:::i;:::-;17015:2;17010:3;17006:12;16999:19;;16658:366;;;:::o;17030:419::-;17196:4;17234:2;17223:9;17219:18;17211:26;;17283:9;17277:4;17273:20;17269:1;17258:9;17254:17;17247:47;17311:131;17437:4;17311:131;:::i;:::-;17303:139;;17030:419;;;:::o;17455:332::-;17576:4;17614:2;17603:9;17599:18;17591:26;;17627:71;17695:1;17684:9;17680:17;17671:6;17627:71;:::i;:::-;17708:72;17776:2;17765:9;17761:18;17752:6;17708:72;:::i;:::-;17455:332;;;;;:::o;17793:442::-;17942:4;17980:2;17969:9;17965:18;17957:26;;17993:71;18061:1;18050:9;18046:17;18037:6;17993:71;:::i;:::-;18074:72;18142:2;18131:9;18127:18;18118:6;18074:72;:::i;:::-;18156;18224:2;18213:9;18209:18;18200:6;18156:72;:::i;:::-;17793:442;;;;;;:::o;18241:181::-;18381:33;18377:1;18369:6;18365:14;18358:57;18241:181;:::o;18428:366::-;18570:3;18591:67;18655:2;18650:3;18591:67;:::i;:::-;18584:74;;18667:93;18756:3;18667:93;:::i;:::-;18785:2;18780:3;18776:12;18769:19;;18428:366;;;:::o;18800:419::-;18966:4;19004:2;18993:9;18989:18;18981:26;;19053:9;19047:4;19043:20;19039:1;19028:9;19024:17;19017:47;19081:131;19207:4;19081:131;:::i;:::-;19073:139;;18800:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1687600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"contractBalance()": "467",
								"contribute()": "infinite",
								"contributions(address)": "2891",
								"decimals()": "428",
								"endFundingManually()": "infinite",
								"fundingGoal()": "2536",
								"fundsRaised()": "2470",
								"hasEnoughVotes()": "infinite",
								"hasVoted(address)": "2901",
								"isFundingActive()": "2489",
								"name()": "infinite",
								"owner()": "2559",
								"rate()": "2493",
								"renounceOwnership()": "infinite",
								"requiredVotesPercentage()": "2536",
								"symbol()": "infinite",
								"totalSupply()": "2544",
								"totalVotes()": "2515",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"voteForFundRelease()": "infinite",
								"withdrawFunds()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 297,
									"end": 3871,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 297,
									"end": 3871,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 297,
									"end": 3871,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1020,
									"end": 1616,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1207,
									"end": 1212,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1214,
									"end": 1221,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1239,
									"end": 1249,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1281,
									"end": 1282,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1278,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1282,
									"modifierDepth": 2,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1265,
									"end": 1314,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1265,
									"end": 1314,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1347,
									"end": 1348,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1332,
									"end": 1344,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1332,
									"end": 1348,
									"modifierDepth": 2,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1324,
									"end": 1380,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1324,
									"end": 1380,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1426,
									"end": 1431,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2710"
								},
								{
									"begin": 1398,
									"end": 1422,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1398,
									"end": 1431,
									"modifierDepth": 2,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1398,
									"end": 1431,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1390,
									"end": 1458,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1390,
									"end": 1458,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1476,
									"end": 1481,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1469,
									"end": 1473,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1469,
									"end": 1481,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1469,
									"end": 1481,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1469,
									"end": 1481,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1469,
									"end": 1481,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1505,
									"end": 1517,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1491,
									"end": 1502,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1491,
									"end": 1517,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1491,
									"end": 1517,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1491,
									"end": 1517,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1491,
									"end": 1517,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1553,
									"end": 1577,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1527,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "E"
								},
								{
									"begin": 1527,
									"end": 1577,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1527,
									"end": 1577,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1527,
									"end": 1577,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1527,
									"end": 1577,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1609,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1587,
									"end": 1602,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 1587,
									"end": 1602,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1609,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1616,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 297,
									"end": 3871,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 297,
									"end": 3871,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 8
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2641,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2726,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2716,
									"end": 2751,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2755,
									"end": 2767,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2653,
									"end": 2775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2838,
									"end": 2843,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2875,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2863,
									"end": 2876,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 2912,
									"end": 2917,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 2885,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3056,
									"end": 3062,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3064,
									"end": 3070,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3072,
									"end": 3078,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3080,
									"end": 3086,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3088,
									"end": 3094,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3137,
									"end": 3140,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 3125,
									"end": 3134,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3116,
									"end": 3123,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3135,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3108,
									"end": 3141,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 3105,
									"end": 3225,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3105,
									"end": 3225,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 3105,
									"end": 3225,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3144,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 3144,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 3144,
									"end": 3223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3144,
									"end": 3223,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 3144,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3105,
									"end": 3225,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 3105,
									"end": 3225,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3285,
									"end": 3286,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3274,
									"end": 3283,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3270,
									"end": 3287,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3264,
									"end": 3288,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3315,
									"end": 3333,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3307,
									"end": 3313,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3304,
									"end": 3334,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3301,
									"end": 3418,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3301,
									"end": 3418,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 3301,
									"end": 3418,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3337,
									"end": 3416,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 3337,
									"end": 3416,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 3337,
									"end": 3416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3337,
									"end": 3416,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 3337,
									"end": 3416,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3301,
									"end": 3418,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 3301,
									"end": 3418,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3442,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 3508,
									"end": 3515,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3505,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3488,
									"end": 3497,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 3484,
									"end": 3506,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3442,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 3442,
									"end": 3516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3442,
									"end": 3516,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 3442,
									"end": 3516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3432,
									"end": 3516,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 3432,
									"end": 3516,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3235,
									"end": 3526,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3586,
									"end": 3588,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3575,
									"end": 3584,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3589,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3565,
									"end": 3590,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3617,
									"end": 3635,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3609,
									"end": 3615,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3606,
									"end": 3636,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3603,
									"end": 3720,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3603,
									"end": 3720,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 3603,
									"end": 3720,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3639,
									"end": 3718,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 3639,
									"end": 3718,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 3639,
									"end": 3718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3639,
									"end": 3718,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 3639,
									"end": 3718,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3603,
									"end": 3720,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 3603,
									"end": 3720,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3744,
									"end": 3818,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 3810,
									"end": 3817,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 3801,
									"end": 3807,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3790,
									"end": 3799,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 3786,
									"end": 3808,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3744,
									"end": 3818,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 3744,
									"end": 3818,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3744,
									"end": 3818,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 3744,
									"end": 3818,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3734,
									"end": 3818,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3734,
									"end": 3818,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3536,
									"end": 3828,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3867,
									"end": 3869,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3893,
									"end": 3957,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 3949,
									"end": 3956,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 3940,
									"end": 3946,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3929,
									"end": 3938,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 3947,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3893,
									"end": 3957,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 3893,
									"end": 3957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3893,
									"end": 3957,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 3893,
									"end": 3957,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3883,
									"end": 3957,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3883,
									"end": 3957,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3838,
									"end": 3967,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4006,
									"end": 4008,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4032,
									"end": 4096,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 4088,
									"end": 4095,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4079,
									"end": 4085,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4068,
									"end": 4077,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4064,
									"end": 4086,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4032,
									"end": 4096,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 4032,
									"end": 4096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4032,
									"end": 4096,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 4032,
									"end": 4096,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4022,
									"end": 4096,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4022,
									"end": 4096,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3977,
									"end": 4106,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4145,
									"end": 4148,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 4172,
									"end": 4236,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 4228,
									"end": 4235,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4219,
									"end": 4225,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4208,
									"end": 4217,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4204,
									"end": 4226,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4172,
									"end": 4236,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 4172,
									"end": 4236,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4172,
									"end": 4236,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 4172,
									"end": 4236,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4162,
									"end": 4236,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4162,
									"end": 4236,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4116,
									"end": 4246,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4259,
									"end": 4385,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 4259,
									"end": 4385,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4296,
									"end": 4303,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4336,
									"end": 4378,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4329,
									"end": 4334,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4325,
									"end": 4379,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4314,
									"end": 4379,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4314,
									"end": 4379,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4259,
									"end": 4385,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4259,
									"end": 4385,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4259,
									"end": 4385,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4259,
									"end": 4385,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4391,
									"end": 4487,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 4391,
									"end": 4487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4428,
									"end": 4435,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4457,
									"end": 4481,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 4475,
									"end": 4480,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4457,
									"end": 4481,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 4457,
									"end": 4481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4457,
									"end": 4481,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 4457,
									"end": 4481,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4446,
									"end": 4481,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4446,
									"end": 4481,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4391,
									"end": 4487,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4391,
									"end": 4487,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4391,
									"end": 4487,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4391,
									"end": 4487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4493,
									"end": 4611,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 4493,
									"end": 4611,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4580,
									"end": 4604,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 4598,
									"end": 4603,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4580,
									"end": 4604,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 4580,
									"end": 4604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4580,
									"end": 4604,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 4580,
									"end": 4604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4575,
									"end": 4578,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4568,
									"end": 4605,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4493,
									"end": 4611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4493,
									"end": 4611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4493,
									"end": 4611,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4839,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 4617,
									"end": 4839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4710,
									"end": 4714,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4748,
									"end": 4750,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4737,
									"end": 4746,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4733,
									"end": 4751,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4725,
									"end": 4751,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4725,
									"end": 4751,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4832,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 4829,
									"end": 4830,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4814,
									"end": 4831,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4805,
									"end": 4811,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4832,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 4761,
									"end": 4832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4832,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 4761,
									"end": 4832,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4845,
									"end": 4944,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 4845,
									"end": 4944,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4897,
									"end": 4903,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4931,
									"end": 4936,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4925,
									"end": 4937,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4915,
									"end": 4937,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4915,
									"end": 4937,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4845,
									"end": 4944,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4845,
									"end": 4944,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4845,
									"end": 4944,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4845,
									"end": 4944,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 5130,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 4950,
									"end": 5130,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4998,
									"end": 5075,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4995,
									"end": 4996,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4988,
									"end": 5076,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5095,
									"end": 5099,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 5092,
									"end": 5093,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 5085,
									"end": 5100,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5119,
									"end": 5123,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 5116,
									"end": 5117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5109,
									"end": 5124,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5136,
									"end": 5456,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 5136,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5180,
									"end": 5186,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5217,
									"end": 5218,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5211,
									"end": 5215,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5207,
									"end": 5219,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5219,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5219,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5264,
									"end": 5265,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5258,
									"end": 5262,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5254,
									"end": 5266,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5285,
									"end": 5303,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5275,
									"end": 5356,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 5275,
									"end": 5356,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5341,
									"end": 5345,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 5333,
									"end": 5339,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5329,
									"end": 5346,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5319,
									"end": 5346,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5319,
									"end": 5346,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5275,
									"end": 5356,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 5275,
									"end": 5356,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5403,
									"end": 5405,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5395,
									"end": 5401,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5392,
									"end": 5406,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5372,
									"end": 5390,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5369,
									"end": 5407,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5450,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 5366,
									"end": 5450,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5422,
									"end": 5440,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 5422,
									"end": 5440,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 5422,
									"end": 5440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5422,
									"end": 5440,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 5422,
									"end": 5440,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5450,
									"name": "tag",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 5366,
									"end": 5450,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5187,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5136,
									"end": 5456,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5136,
									"end": 5456,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5136,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5136,
									"end": 5456,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5462,
									"end": 5603,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 5462,
									"end": 5603,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5511,
									"end": 5515,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5534,
									"end": 5537,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5526,
									"end": 5537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5526,
									"end": 5537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5557,
									"end": 5560,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5554,
									"end": 5555,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5547,
									"end": 5561,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5591,
									"end": 5595,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5588,
									"end": 5589,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5578,
									"end": 5596,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 5570,
									"end": 5596,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5570,
									"end": 5596,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5462,
									"end": 5603,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5462,
									"end": 5603,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5462,
									"end": 5603,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5462,
									"end": 5603,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5609,
									"end": 5702,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 5609,
									"end": 5702,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5646,
									"end": 5652,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5693,
									"end": 5695,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5688,
									"end": 5690,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5681,
									"end": 5686,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5677,
									"end": 5691,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5673,
									"end": 5696,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 5663,
									"end": 5696,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5663,
									"end": 5696,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5609,
									"end": 5702,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5609,
									"end": 5702,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5609,
									"end": 5702,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5609,
									"end": 5702,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5708,
									"end": 5815,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 5708,
									"end": 5815,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5752,
									"end": 5760,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5802,
									"end": 5807,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5796,
									"end": 5800,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5792,
									"end": 5808,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 5771,
									"end": 5808,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5771,
									"end": 5808,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5708,
									"end": 5815,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5708,
									"end": 5815,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5708,
									"end": 5815,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5708,
									"end": 5815,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5708,
									"end": 5815,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5821,
									"end": 6214,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 5821,
									"end": 6214,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5890,
									"end": 5896,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5940,
									"end": 5941,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5928,
									"end": 5938,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5924,
									"end": 5942,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6060,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 5993,
									"end": 6059,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5982,
									"end": 5991,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6060,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 5963,
									"end": 6060,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6060,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 5963,
									"end": 6060,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6081,
									"end": 6120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 6111,
									"end": 6119,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6100,
									"end": 6109,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6081,
									"end": 6120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 6081,
									"end": 6120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6081,
									"end": 6120,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 6081,
									"end": 6120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6069,
									"end": 6120,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 6069,
									"end": 6120,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6153,
									"end": 6157,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6158,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6142,
									"end": 6147,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6138,
									"end": 6159,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6129,
									"end": 6159,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 6129,
									"end": 6159,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6202,
									"end": 6206,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6192,
									"end": 6200,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6188,
									"end": 6207,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6181,
									"end": 6186,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6178,
									"end": 6208,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 6168,
									"end": 6208,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6168,
									"end": 6208,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5897,
									"end": 6214,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5897,
									"end": 6214,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5821,
									"end": 6214,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 5821,
									"end": 6214,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5821,
									"end": 6214,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5821,
									"end": 6214,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5821,
									"end": 6214,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5821,
									"end": 6214,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6220,
									"end": 6280,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 6220,
									"end": 6280,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6248,
									"end": 6251,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6269,
									"end": 6274,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6262,
									"end": 6274,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6262,
									"end": 6274,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6220,
									"end": 6280,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6220,
									"end": 6280,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6220,
									"end": 6280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6220,
									"end": 6280,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6286,
									"end": 6428,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 6286,
									"end": 6428,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6336,
									"end": 6345,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6369,
									"end": 6422,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 6387,
									"end": 6421,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 6396,
									"end": 6420,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 6414,
									"end": 6419,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6396,
									"end": 6420,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 6396,
									"end": 6420,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6396,
									"end": 6420,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 6396,
									"end": 6420,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6387,
									"end": 6421,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 6387,
									"end": 6421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6387,
									"end": 6421,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 6387,
									"end": 6421,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6369,
									"end": 6422,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 6369,
									"end": 6422,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6369,
									"end": 6422,
									"name": "tag",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 6369,
									"end": 6422,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6356,
									"end": 6422,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6356,
									"end": 6422,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6286,
									"end": 6428,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6286,
									"end": 6428,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6286,
									"end": 6428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6286,
									"end": 6428,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6434,
									"end": 6509,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 6434,
									"end": 6509,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6480,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6498,
									"end": 6503,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6491,
									"end": 6503,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6491,
									"end": 6503,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6434,
									"end": 6509,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6434,
									"end": 6509,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6434,
									"end": 6509,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6434,
									"end": 6509,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6515,
									"end": 6784,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6515,
									"end": 6784,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6625,
									"end": 6664,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 6656,
									"end": 6663,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6625,
									"end": 6664,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 6625,
									"end": 6664,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6625,
									"end": 6664,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 6625,
									"end": 6664,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6686,
									"end": 6777,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 6735,
									"end": 6776,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 6759,
									"end": 6775,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6735,
									"end": 6776,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 6735,
									"end": 6776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6735,
									"end": 6776,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 6735,
									"end": 6776,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6727,
									"end": 6733,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6720,
									"end": 6724,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6714,
									"end": 6725,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 6686,
									"end": 6777,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 6686,
									"end": 6777,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6686,
									"end": 6777,
									"name": "tag",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 6686,
									"end": 6777,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6680,
									"end": 6684,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6673,
									"end": 6778,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6591,
									"end": 6784,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6515,
									"end": 6784,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6515,
									"end": 6784,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6515,
									"end": 6784,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6515,
									"end": 6784,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6790,
									"end": 6863,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 6790,
									"end": 6863,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6835,
									"end": 6838,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6856,
									"end": 6857,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6849,
									"end": 6857,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6849,
									"end": 6857,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6790,
									"end": 6863,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6790,
									"end": 6863,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6869,
									"end": 7058,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 6869,
									"end": 7058,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6946,
									"end": 6978,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 6946,
									"end": 6978,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 6946,
									"end": 6978,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6946,
									"end": 6978,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 6946,
									"end": 6978,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6987,
									"end": 7052,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 7045,
									"end": 7051,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7037,
									"end": 7043,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7031,
									"end": 7035,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6987,
									"end": 7052,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6987,
									"end": 7052,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6987,
									"end": 7052,
									"name": "tag",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 6987,
									"end": 7052,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6922,
									"end": 7058,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6869,
									"end": 7058,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6869,
									"end": 7058,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6869,
									"end": 7058,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7064,
									"end": 7250,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 7064,
									"end": 7250,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7124,
									"end": 7244,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 7124,
									"end": 7244,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7141,
									"end": 7144,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7134,
									"end": 7139,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7131,
									"end": 7145,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 7124,
									"end": 7244,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7124,
									"end": 7244,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 7124,
									"end": 7244,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7195,
									"end": 7234,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 7232,
									"end": 7233,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7225,
									"end": 7230,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7195,
									"end": 7234,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 7195,
									"end": 7234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7195,
									"end": 7234,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 7195,
									"end": 7234,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7168,
									"end": 7169,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7161,
									"end": 7166,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7157,
									"end": 7170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7148,
									"end": 7170,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7148,
									"end": 7170,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7124,
									"end": 7244,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 7124,
									"end": 7244,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7124,
									"end": 7244,
									"name": "tag",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 7124,
									"end": 7244,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7064,
									"end": 7250,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7064,
									"end": 7250,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7064,
									"end": 7250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7256,
									"end": 7799,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 7256,
									"end": 7799,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7357,
									"end": 7359,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 7352,
									"end": 7355,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7349,
									"end": 7360,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7346,
									"end": 7792,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7346,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 7346,
									"end": 7792,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7391,
									"end": 7429,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 7423,
									"end": 7428,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7391,
									"end": 7429,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 7391,
									"end": 7429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7391,
									"end": 7429,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 7391,
									"end": 7429,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7475,
									"end": 7504,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 7493,
									"end": 7503,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7475,
									"end": 7504,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 7475,
									"end": 7504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7475,
									"end": 7504,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 7475,
									"end": 7504,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7465,
									"end": 7473,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7461,
									"end": 7505,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7658,
									"end": 7660,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7646,
									"end": 7656,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7643,
									"end": 7661,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 7640,
									"end": 7689,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7640,
									"end": 7689,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 7640,
									"end": 7689,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7679,
									"end": 7687,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 7687,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 7687,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7640,
									"end": 7689,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 7640,
									"end": 7689,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7702,
									"end": 7782,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 7758,
									"end": 7780,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 7776,
									"end": 7779,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7758,
									"end": 7780,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 7758,
									"end": 7780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7758,
									"end": 7780,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 7758,
									"end": 7780,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7748,
									"end": 7756,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7744,
									"end": 7781,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7731,
									"end": 7742,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7702,
									"end": 7782,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 7702,
									"end": 7782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7702,
									"end": 7782,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 7702,
									"end": 7782,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7361,
									"end": 7792,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7361,
									"end": 7792,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7346,
									"end": 7792,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 7346,
									"end": 7792,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7256,
									"end": 7799,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7256,
									"end": 7799,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7256,
									"end": 7799,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7256,
									"end": 7799,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7805,
									"end": 7922,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 7805,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7859,
									"end": 7867,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7909,
									"end": 7914,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7903,
									"end": 7907,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7899,
									"end": 7915,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 7878,
									"end": 7915,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7878,
									"end": 7915,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7805,
									"end": 7922,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7805,
									"end": 7922,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7805,
									"end": 7922,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7805,
									"end": 7922,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7805,
									"end": 7922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7928,
									"end": 8097,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 7928,
									"end": 8097,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7972,
									"end": 7978,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8005,
									"end": 8056,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 8053,
									"end": 8054,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8049,
									"end": 8055,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 8041,
									"end": 8046,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8038,
									"end": 8039,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 8034,
									"end": 8047,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 8005,
									"end": 8056,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 8005,
									"end": 8056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8005,
									"end": 8056,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 8005,
									"end": 8056,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8001,
									"end": 8057,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 8086,
									"end": 8090,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 8080,
									"end": 8084,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8076,
									"end": 8091,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8066,
									"end": 8091,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8066,
									"end": 8091,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7979,
									"end": 8097,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7928,
									"end": 8097,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7928,
									"end": 8097,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7928,
									"end": 8097,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7928,
									"end": 8097,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7928,
									"end": 8097,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8102,
									"end": 8397,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 8102,
									"end": 8397,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8178,
									"end": 8182,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8324,
									"end": 8353,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 8349,
									"end": 8352,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8343,
									"end": 8347,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8324,
									"end": 8353,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 8324,
									"end": 8353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8324,
									"end": 8353,
									"name": "tag",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 8324,
									"end": 8353,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8316,
									"end": 8353,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8316,
									"end": 8353,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8386,
									"end": 8389,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8383,
									"end": 8384,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 8379,
									"end": 8390,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 8373,
									"end": 8377,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8370,
									"end": 8391,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 8362,
									"end": 8391,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8362,
									"end": 8391,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8102,
									"end": 8397,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8102,
									"end": 8397,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8102,
									"end": 8397,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8102,
									"end": 8397,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8102,
									"end": 8397,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8402,
									"end": 9797,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 8402,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8519,
									"end": 8556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 8552,
									"end": 8555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8519,
									"end": 8556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 8519,
									"end": 8556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8519,
									"end": 8556,
									"name": "tag",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 8519,
									"end": 8556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8621,
									"end": 8639,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8613,
									"end": 8619,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8610,
									"end": 8640,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 8607,
									"end": 8663,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8607,
									"end": 8663,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 8607,
									"end": 8663,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8643,
									"end": 8661,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 8643,
									"end": 8661,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 8643,
									"end": 8661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8643,
									"end": 8661,
									"name": "tag",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 8643,
									"end": 8661,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8607,
									"end": 8663,
									"name": "tag",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 8607,
									"end": 8663,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8687,
									"end": 8725,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 8719,
									"end": 8723,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8713,
									"end": 8724,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 8687,
									"end": 8725,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 8687,
									"end": 8725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8687,
									"end": 8725,
									"name": "tag",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 8687,
									"end": 8725,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8772,
									"end": 8839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 8832,
									"end": 8838,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8824,
									"end": 8830,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8818,
									"end": 8822,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8772,
									"end": 8839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 8772,
									"end": 8839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8772,
									"end": 8839,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 8772,
									"end": 8839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8866,
									"end": 8867,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8890,
									"end": 8894,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8877,
									"end": 8894,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8877,
									"end": 8894,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8922,
									"end": 8924,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8914,
									"end": 8920,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8911,
									"end": 8925,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 8939,
									"end": 8940,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8934,
									"end": 9552,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8934,
									"end": 9552,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 8934,
									"end": 9552,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 8934,
									"end": 9552,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9596,
									"end": 9597,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9613,
									"end": 9619,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9610,
									"end": 9687,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9610,
									"end": 9687,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 9610,
									"end": 9687,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9662,
									"end": 9671,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9657,
									"end": 9660,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 9653,
									"end": 9672,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9647,
									"end": 9673,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 9638,
									"end": 9673,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9638,
									"end": 9673,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9610,
									"end": 9687,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 9610,
									"end": 9687,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9713,
									"end": 9780,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 9773,
									"end": 9779,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 9766,
									"end": 9771,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9713,
									"end": 9780,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 9713,
									"end": 9780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9713,
									"end": 9780,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 9713,
									"end": 9780,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9707,
									"end": 9711,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 9700,
									"end": 9781,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 9569,
									"end": 9791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8904,
									"end": 9791,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 8904,
									"end": 9791,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8934,
									"end": 9552,
									"name": "tag",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 8934,
									"end": 9552,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8986,
									"end": 8990,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8982,
									"end": 8991,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 8974,
									"end": 8980,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8970,
									"end": 8992,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 9020,
									"end": 9057,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 9052,
									"end": 9056,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 9020,
									"end": 9057,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 9020,
									"end": 9057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9020,
									"end": 9057,
									"name": "tag",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 9020,
									"end": 9057,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9079,
									"end": 9080,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9093,
									"end": 9301,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 9093,
									"end": 9301,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9107,
									"end": 9114,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9104,
									"end": 9105,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9101,
									"end": 9115,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 9093,
									"end": 9301,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9093,
									"end": 9301,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 9093,
									"end": 9301,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9186,
									"end": 9195,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9181,
									"end": 9184,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 9177,
									"end": 9196,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9171,
									"end": 9197,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9169,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9156,
									"end": 9198,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 9237,
									"end": 9238,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 9229,
									"end": 9235,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9225,
									"end": 9239,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9215,
									"end": 9239,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9215,
									"end": 9239,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9284,
									"end": 9286,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9273,
									"end": 9282,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 9269,
									"end": 9287,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9256,
									"end": 9287,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 9256,
									"end": 9287,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9130,
									"end": 9134,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9127,
									"end": 9128,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9123,
									"end": 9135,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9118,
									"end": 9135,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9118,
									"end": 9135,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9093,
									"end": 9301,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 9093,
									"end": 9301,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9093,
									"end": 9301,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 9093,
									"end": 9301,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9329,
									"end": 9335,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 9320,
									"end": 9327,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9317,
									"end": 9336,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 9314,
									"end": 9493,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9314,
									"end": 9493,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 9314,
									"end": 9493,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9387,
									"end": 9396,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9382,
									"end": 9385,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 9378,
									"end": 9397,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9372,
									"end": 9398,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 9430,
									"end": 9478,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 9472,
									"end": 9476,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 9464,
									"end": 9470,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 9460,
									"end": 9477,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 9449,
									"end": 9458,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9430,
									"end": 9478,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 9430,
									"end": 9478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9430,
									"end": 9478,
									"name": "tag",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 9430,
									"end": 9478,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9422,
									"end": 9428,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9415,
									"end": 9479,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 9337,
									"end": 9493,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9314,
									"end": 9493,
									"name": "tag",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 9314,
									"end": 9493,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9539,
									"end": 9540,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 9535,
									"end": 9536,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 9527,
									"end": 9533,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 9523,
									"end": 9537,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 9519,
									"end": 9541,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9513,
									"end": 9517,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 9506,
									"end": 9542,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8941,
									"end": 9552,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8941,
									"end": 9552,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8941,
									"end": 9552,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8904,
									"end": 9791,
									"name": "tag",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 8904,
									"end": 9791,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8904,
									"end": 9791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8494,
									"end": 9797,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8494,
									"end": 9797,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8494,
									"end": 9797,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8402,
									"end": 9797,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8402,
									"end": 9797,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8402,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9887,
									"end": 9898,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9921,
									"end": 9927,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9916,
									"end": 9919,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9909,
									"end": 9928,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9961,
									"end": 9965,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9956,
									"end": 9959,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9952,
									"end": 9966,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9937,
									"end": 9966,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9937,
									"end": 9966,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9972,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9978,
									"end": 10155,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 9978,
									"end": 10155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10118,
									"end": 10147,
									"name": "PUSH",
									"source": 8,
									"value": "52617465206D7573742062652067726561746572207468616E20300000000000"
								},
								{
									"begin": 10114,
									"end": 10115,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10106,
									"end": 10112,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10102,
									"end": 10116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10095,
									"end": 10148,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9978,
									"end": 10155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9978,
									"end": 10155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10161,
									"end": 10527,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 10161,
									"end": 10527,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10303,
									"end": 10306,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10324,
									"end": 10391,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 10388,
									"end": 10390,
									"name": "PUSH",
									"source": 8,
									"value": "1B"
								},
								{
									"begin": 10383,
									"end": 10386,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10324,
									"end": 10391,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 10324,
									"end": 10391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10324,
									"end": 10391,
									"name": "tag",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 10324,
									"end": 10391,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10317,
									"end": 10391,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10317,
									"end": 10391,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10400,
									"end": 10493,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 10489,
									"end": 10492,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10400,
									"end": 10493,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 10400,
									"end": 10493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10400,
									"end": 10493,
									"name": "tag",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 10400,
									"end": 10493,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10518,
									"end": 10520,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10513,
									"end": 10516,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10509,
									"end": 10521,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10502,
									"end": 10521,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10502,
									"end": 10521,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10161,
									"end": 10527,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10161,
									"end": 10527,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10161,
									"end": 10527,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10161,
									"end": 10527,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10533,
									"end": 10952,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 10533,
									"end": 10952,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10699,
									"end": 10703,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10737,
									"end": 10739,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10726,
									"end": 10735,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10722,
									"end": 10740,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10714,
									"end": 10740,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10714,
									"end": 10740,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10786,
									"end": 10795,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10780,
									"end": 10784,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10776,
									"end": 10796,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 10772,
									"end": 10773,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10761,
									"end": 10770,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10757,
									"end": 10774,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10750,
									"end": 10797,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10814,
									"end": 10945,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 10940,
									"end": 10944,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10814,
									"end": 10945,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 10814,
									"end": 10945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10814,
									"end": 10945,
									"name": "tag",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 10814,
									"end": 10945,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10806,
									"end": 10945,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10806,
									"end": 10945,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10533,
									"end": 10952,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10533,
									"end": 10952,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10533,
									"end": 10952,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10533,
									"end": 10952,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10958,
									"end": 11135,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 10958,
									"end": 11135,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11098,
									"end": 11127,
									"name": "PUSH",
									"source": 8,
									"value": "476F616C206D7573742062652067726561746572207468616E20300000000000"
								},
								{
									"begin": 11094,
									"end": 11095,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11086,
									"end": 11092,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11082,
									"end": 11096,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11075,
									"end": 11128,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10958,
									"end": 11135,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10958,
									"end": 11135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11141,
									"end": 11507,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 11141,
									"end": 11507,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11283,
									"end": 11286,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11304,
									"end": 11371,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 11368,
									"end": 11370,
									"name": "PUSH",
									"source": 8,
									"value": "1B"
								},
								{
									"begin": 11363,
									"end": 11366,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11304,
									"end": 11371,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 11304,
									"end": 11371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11304,
									"end": 11371,
									"name": "tag",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 11304,
									"end": 11371,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11297,
									"end": 11371,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11297,
									"end": 11371,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11380,
									"end": 11473,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 11469,
									"end": 11472,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11380,
									"end": 11473,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 11380,
									"end": 11473,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11380,
									"end": 11473,
									"name": "tag",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 11380,
									"end": 11473,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11498,
									"end": 11500,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11493,
									"end": 11496,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11489,
									"end": 11501,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11482,
									"end": 11501,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11482,
									"end": 11501,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11141,
									"end": 11507,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11141,
									"end": 11507,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11141,
									"end": 11507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11141,
									"end": 11507,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11513,
									"end": 11932,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 11513,
									"end": 11932,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11679,
									"end": 11683,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11717,
									"end": 11719,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11706,
									"end": 11715,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11702,
									"end": 11720,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11694,
									"end": 11720,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11694,
									"end": 11720,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11766,
									"end": 11775,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 11760,
									"end": 11764,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 11756,
									"end": 11776,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 11752,
									"end": 11753,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11741,
									"end": 11750,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11737,
									"end": 11754,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11730,
									"end": 11777,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 11794,
									"end": 11925,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "201"
								},
								{
									"begin": 11920,
									"end": 11924,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 11794,
									"end": 11925,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 11794,
									"end": 11925,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11794,
									"end": 11925,
									"name": "tag",
									"source": 8,
									"value": "201"
								},
								{
									"begin": 11794,
									"end": 11925,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11786,
									"end": 11925,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11786,
									"end": 11925,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11513,
									"end": 11932,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11513,
									"end": 11932,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11513,
									"end": 11932,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11513,
									"end": 11932,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11938,
									"end": 12110,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 11938,
									"end": 12110,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 12078,
									"end": 12102,
									"name": "PUSH",
									"source": 8,
									"value": "566F7465732070657263656E74206D6178203130302500000000000000000000"
								},
								{
									"begin": 12074,
									"end": 12075,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 12066,
									"end": 12072,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 12062,
									"end": 12076,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 12055,
									"end": 12103,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 11938,
									"end": 12110,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11938,
									"end": 12110,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 12116,
									"end": 12482,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 12116,
									"end": 12482,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 12258,
									"end": 12261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 12279,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 12343,
									"end": 12345,
									"name": "PUSH",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 12338,
									"end": 12341,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 12279,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 12279,
									"end": 12346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 12279,
									"end": 12346,
									"name": "tag",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 12279,
									"end": 12346,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 12272,
									"end": 12346,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 12272,
									"end": 12346,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 12355,
									"end": 12448,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 12444,
									"end": 12447,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 12355,
									"end": 12448,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 12355,
									"end": 12448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 12355,
									"end": 12448,
									"name": "tag",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 12355,
									"end": 12448,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 12473,
									"end": 12475,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 12468,
									"end": 12471,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 12464,
									"end": 12476,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 12457,
									"end": 12476,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 12457,
									"end": 12476,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 12116,
									"end": 12482,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 12116,
									"end": 12482,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 12116,
									"end": 12482,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 12116,
									"end": 12482,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 12488,
									"end": 12907,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 12488,
									"end": 12907,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 12654,
									"end": 12658,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 12692,
									"end": 12694,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 12681,
									"end": 12690,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 12677,
									"end": 12695,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 12669,
									"end": 12695,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 12669,
									"end": 12695,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 12741,
									"end": 12750,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 12735,
									"end": 12739,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 12731,
									"end": 12751,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 12727,
									"end": 12728,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 12716,
									"end": 12725,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 12712,
									"end": 12729,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 12705,
									"end": 12752,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 12769,
									"end": 12900,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "207"
								},
								{
									"begin": 12895,
									"end": 12899,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 12769,
									"end": 12900,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 12769,
									"end": 12900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 12769,
									"end": 12900,
									"name": "tag",
									"source": 8,
									"value": "207"
								},
								{
									"begin": 12769,
									"end": 12900,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 12761,
									"end": 12900,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 12761,
									"end": 12900,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 12488,
									"end": 12907,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 12488,
									"end": 12907,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 12488,
									"end": 12907,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 12488,
									"end": 12907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 297,
									"end": 3871,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 297,
									"end": 3871,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 297,
									"end": 3871,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 3871,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 297,
									"end": 3871,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 3871,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 3871,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 297,
									"end": 3871,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 3871,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ec25427f5b9c2f019666777f7e0e1efcdb41cc01abe12224aa28cad73530977b64736f6c634300081d0033",
									".code": [
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "636D6C9D"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "D7BB99BA"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "94B6A4B8"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "636D6C9D"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "6681B9FD"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "7A3A0E84"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "8B7AFE2E"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "24600FC3"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "3E186253"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "3E186253"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "3FC5144E"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "42E94C90"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "5EC1CFB7"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "24600FC3"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "2C4E722E"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "9EEF43E"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "D15FD77"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 3871,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 612,
											"end": 652,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 612,
											"end": 652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 612,
											"end": 652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 612,
											"end": 652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 658,
											"end": 683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 658,
											"end": 683,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 683,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 683,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 658,
											"end": 683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 658,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 658,
											"end": 683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 658,
											"end": 683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 683,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 658,
											"end": 683,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 658,
											"end": 683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 658,
											"end": 683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 683,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2690,
											"end": 3225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 353,
											"end": 372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 353,
											"end": 372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 372,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 353,
											"end": 372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 353,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 353,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 353,
											"end": 372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 353,
											"end": 372,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 353,
											"end": 372,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 353,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 353,
											"end": 372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 353,
											"end": 372,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3282,
											"end": 3467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3282,
											"end": 3467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3534,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 533,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 533,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 533,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 689,
											"end": 727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 689,
											"end": 727,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 727,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 689,
											"end": 727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 689,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 689,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 689,
											"end": 727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 689,
											"end": 727,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 689,
											"end": 727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 689,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 689,
											"end": 727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 689,
											"end": 727,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 461,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 461,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 429,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 429,
											"end": 455,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 455,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 429,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 429,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 429,
											"end": 455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 429,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 455,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 429,
											"end": 455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 429,
											"end": 455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 429,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 455,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 397,
											"end": 423,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 397,
											"end": 423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 397,
											"end": 423,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 423,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 423,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 397,
											"end": 423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 397,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 397,
											"end": 423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 397,
											"end": 423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 397,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 397,
											"end": 423,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 397,
											"end": 423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 397,
											"end": 423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 397,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 3765,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3765,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2295,
											"end": 2602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 2222,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1676,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1676,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1676,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 2222,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1676,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 2222,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 612,
											"end": 652,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 612,
											"end": 652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 658,
											"end": 683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 658,
											"end": 683,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 658,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2690,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2781,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2766,
											"end": 2781,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2781,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2781,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2781,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2781,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2766,
											"end": 2781,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2781,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2781,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2781,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2766,
											"end": 2781,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2765,
											"end": 2781,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2757,
											"end": 2806,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2757,
											"end": 2806,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2837,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2887,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2855,
											"end": 2878,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 2855,
											"end": 2878,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2841,
											"end": 2852,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2878,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2841,
											"end": 2878,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2878,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2878,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2841,
											"end": 2878,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2878,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2841,
											"end": 2878,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2887,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2840,
											"end": 2887,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2887,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2887,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2840,
											"end": 2887,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2887,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2840,
											"end": 2887,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2887,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2887,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2932,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2915,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 2905,
											"end": 2915,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2932,
											"modifierDepth": 2,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2932,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2897,
											"end": 2953,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2897,
											"end": 2953,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2978,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 3002,
											"modifierDepth": 2,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 3002,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 3002,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3030,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3020,
											"end": 3030,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3012,
											"end": 3055,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3012,
											"end": 3055,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3079,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3099,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3092,
											"end": 3097,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3092,
											"end": 3099,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3099,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3092,
											"end": 3099,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3105,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3084,
											"end": 3105,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3113,
											"end": 3119,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3084,
											"end": 3124,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3124,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3124,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3124,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3124,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3149,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3134,
											"end": 3171,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3134,
											"end": 3171,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3209,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3202,
											"end": 3207,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3202,
											"end": 3209,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3209,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3202,
											"end": 3209,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "EAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D"
										},
										{
											"begin": 3211,
											"end": 3217,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3187,
											"end": 3218,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3218,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 3225,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 3225,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 3225,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 3225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 353,
											"end": 372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 353,
											"end": 372,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 353,
											"end": 372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3416,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 3384,
											"end": 3407,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 3384,
											"end": 3407,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3370,
											"end": 3407,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3407,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3370,
											"end": 3407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3407,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3370,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3369,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3369,
											"end": 3416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3369,
											"end": 3416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3369,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3369,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3369,
											"end": 3416,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3369,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3460,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3433,
											"end": 3443,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 3433,
											"end": 3443,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3433,
											"end": 3460,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3433,
											"end": 3460,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3534,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3601,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3601,
											"end": 3616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3616,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3601,
											"end": 3616,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3616,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3601,
											"end": 3616,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3593,
											"end": 3642,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3593,
											"end": 3642,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3652,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "BDC0E037EADB8B0C782400FAF1B352631D6CD8BDF086C0E7EB0028E210041DC9"
										},
										{
											"begin": 3690,
											"end": 3704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3704,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3704,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3704,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3704,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3704,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 533,
											"end": 581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 689,
											"end": 727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 689,
											"end": 727,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 689,
											"end": 727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 461,
											"end": 488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 429,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 429,
											"end": 455,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 429,
											"end": 455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 397,
											"end": 423,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 397,
											"end": 423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 397,
											"end": 423,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 397,
											"end": 423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3841,
											"end": 3862,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 3834,
											"end": 3862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3834,
											"end": 3862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2295,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2389,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2390,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2394,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2357,
											"end": 2418,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2357,
											"end": 2418,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2456,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2437,
											"end": 2457,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2457,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2428,
											"end": 2475,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2428,
											"end": 2475,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2509,
											"end": 2513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2486,
											"end": 2494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2505,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2513,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2561,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2562,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 2523,
											"end": 2533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2523,
											"end": 2562,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2562,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2594,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2578,
											"end": 2595,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "16A9AA39AF49F169911E977347975198C503525F7240D6892A626F0227642FCE"
										},
										{
											"begin": 2578,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2595,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2595,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2595,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2595,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2595,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2595,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2295,
											"end": 2602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 2222,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1676,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1746,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1761,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1746,
											"end": 1761,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1761,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1746,
											"end": 1761,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 1738,
											"end": 1783,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 1738,
											"end": 1783,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1810,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1814,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 1793,
											"end": 1854,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 1793,
											"end": 1854,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1900,
											"end": 1904,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1897,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 1888,
											"end": 1904,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 1888,
											"end": 1904,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 1888,
											"end": 1904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1904,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1952,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1938,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 1914,
											"end": 1952,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1986,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1962,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 1962,
											"end": 1986,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1986,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1997,
											"end": 2028,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2003,
											"end": 2013,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2015,
											"end": 2027,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1997,
											"end": 2002,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 1997,
											"end": 2028,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1997,
											"end": 2028,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 1997,
											"end": 2028,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2066,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5F7675B09617D2C9FA4FD13058EE5877A9538F626B0308816736E83748A45040"
										},
										{
											"begin": 2068,
											"end": 2077,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2043,
											"end": 2092,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2092,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2122,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2122,
											"end": 2133,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2107,
											"end": 2118,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2133,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2103,
											"end": 2216,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2149,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2172,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "BDC0E037EADB8B0C782400FAF1B352631D6CD8BDF086C0E7EB0028E210041DC9"
										},
										{
											"begin": 2191,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2205,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2205,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2205,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2216,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2103,
											"end": 2216,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 2222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 2222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3422,
											"end": 3445,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3418,
											"end": 3450,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 3453,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 3598,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3661,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 3761,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3756,
											"end": 3759,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3786,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3674,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 3942,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6425,
											"end": 6595,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 6425,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6587,
											"name": "PUSH",
											"source": 8,
											"value": "46756E64696E67207374696C6C20616374697665000000000000000000000000"
										},
										{
											"begin": 6561,
											"end": 6562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6559,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6588,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6425,
											"end": 6595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6425,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6967,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 6601,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6764,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 6828,
											"end": 6830,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 6823,
											"end": 6826,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6764,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 6764,
											"end": 6831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6764,
											"end": 6831,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 6764,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6757,
											"end": 6831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6757,
											"end": 6831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 6929,
											"end": 6932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 6840,
											"end": 6933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6933,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 6840,
											"end": 6933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6958,
											"end": 6960,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6953,
											"end": 6956,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6942,
											"end": 6961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6942,
											"end": 6961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6967,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7392,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 6973,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7139,
											"end": 7143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7177,
											"end": 7179,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7166,
											"end": 7175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7162,
											"end": 7180,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7154,
											"end": 7180,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7154,
											"end": 7180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7226,
											"end": 7235,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7224,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7216,
											"end": 7236,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7213,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7210,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7197,
											"end": 7214,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7254,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 7380,
											"end": 7384,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7254,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 7254,
											"end": 7385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7254,
											"end": 7385,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 7254,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7246,
											"end": 7385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7246,
											"end": 7385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7392,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7392,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7398,
											"end": 7578,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 7398,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7446,
											"end": 7523,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7443,
											"end": 7444,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7436,
											"end": 7524,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7543,
											"end": 7547,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7540,
											"end": 7541,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7533,
											"end": 7548,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7571,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7564,
											"end": 7565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7557,
											"end": 7572,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7994,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 7584,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7647,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 7665,
											"end": 7666,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7647,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 7647,
											"end": 7667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7647,
											"end": 7667,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 7647,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7642,
											"end": 7667,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7642,
											"end": 7667,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 7699,
											"end": 7700,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 7681,
											"end": 7701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7701,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 7681,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7676,
											"end": 7701,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7676,
											"end": 7701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7736,
											"end": 7737,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7734,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7729,
											"end": 7738,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 7776,
											"end": 7787,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 7758,
											"end": 7788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7788,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 7758,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7747,
											"end": 7788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7747,
											"end": 7788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7937,
											"end": 7938,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7928,
											"end": 7935,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7921,
											"end": 7922,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7940,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7898,
											"end": 7899,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7891,
											"end": 7900,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7954,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7848,
											"end": 7987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 7848,
											"end": 7987,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7967,
											"end": 7985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 7967,
											"end": 7985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 7967,
											"end": 7985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7967,
											"end": 7985,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 7967,
											"end": 7985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7848,
											"end": 7987,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 7848,
											"end": 7987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7632,
											"end": 7994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7994,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7994,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8000,
											"end": 8180,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 8000,
											"end": 8180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8048,
											"end": 8125,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8045,
											"end": 8046,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8038,
											"end": 8126,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8145,
											"end": 8149,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 8142,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8135,
											"end": 8150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8169,
											"end": 8173,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8166,
											"end": 8167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8159,
											"end": 8174,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8186,
											"end": 8371,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 8186,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8226,
											"end": 8227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8243,
											"end": 8263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 8261,
											"end": 8262,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8243,
											"end": 8263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 8243,
											"end": 8263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8243,
											"end": 8263,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 8243,
											"end": 8263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8238,
											"end": 8263,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8238,
											"end": 8263,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8277,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 8295,
											"end": 8296,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8277,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 8277,
											"end": 8297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8277,
											"end": 8297,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 8277,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8272,
											"end": 8297,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8272,
											"end": 8297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8316,
											"end": 8317,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 8306,
											"end": 8341,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 8321,
											"end": 8339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8341,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 8306,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8360,
											"end": 8361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8356,
											"end": 8365,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8351,
											"end": 8365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8351,
											"end": 8365,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8186,
											"end": 8371,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8186,
											"end": 8371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8186,
											"end": 8371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8186,
											"end": 8371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8186,
											"end": 8371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8377,
											"end": 8543,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 8377,
											"end": 8543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8517,
											"end": 8535,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7420656E6F75676820766F74657300000000000000000000000000000000"
										},
										{
											"begin": 8513,
											"end": 8514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8505,
											"end": 8511,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8501,
											"end": 8515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8494,
											"end": 8536,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8377,
											"end": 8543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8377,
											"end": 8543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8549,
											"end": 8915,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 8549,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8691,
											"end": 8694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8712,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 8776,
											"end": 8778,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 8771,
											"end": 8774,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8712,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 8712,
											"end": 8779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8712,
											"end": 8779,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 8712,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8705,
											"end": 8779,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8705,
											"end": 8779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8788,
											"end": 8881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 8877,
											"end": 8880,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8788,
											"end": 8881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 8788,
											"end": 8881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8788,
											"end": 8881,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 8788,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8906,
											"end": 8908,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8901,
											"end": 8904,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8897,
											"end": 8909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8890,
											"end": 8909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8890,
											"end": 8909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8549,
											"end": 8915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8549,
											"end": 8915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8549,
											"end": 8915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8549,
											"end": 8915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8921,
											"end": 9340,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 8921,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9087,
											"end": 9091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9125,
											"end": 9127,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9114,
											"end": 9123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9110,
											"end": 9128,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9102,
											"end": 9128,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9102,
											"end": 9128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9174,
											"end": 9183,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9168,
											"end": 9172,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9164,
											"end": 9184,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9160,
											"end": 9161,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9149,
											"end": 9158,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9145,
											"end": 9162,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9138,
											"end": 9185,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 9328,
											"end": 9332,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 9202,
											"end": 9333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9333,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 9202,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9194,
											"end": 9333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9194,
											"end": 9333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8921,
											"end": 9340,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8921,
											"end": 9340,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8921,
											"end": 9340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8921,
											"end": 9340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9346,
											"end": 9516,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 9346,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9486,
											"end": 9508,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F2066756E647320746F207769746864726177000000000000000000000000"
										},
										{
											"begin": 9482,
											"end": 9483,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9474,
											"end": 9480,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9470,
											"end": 9484,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9463,
											"end": 9509,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9346,
											"end": 9516,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9346,
											"end": 9516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9522,
											"end": 9888,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 9522,
											"end": 9888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9664,
											"end": 9667,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9685,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 9749,
											"end": 9751,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 9744,
											"end": 9747,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9685,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 9685,
											"end": 9752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9685,
											"end": 9752,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 9685,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9678,
											"end": 9752,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9678,
											"end": 9752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 9854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 9850,
											"end": 9853,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 9854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 9761,
											"end": 9854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 9854,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 9761,
											"end": 9854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9879,
											"end": 9881,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9874,
											"end": 9877,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9870,
											"end": 9882,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9863,
											"end": 9882,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9863,
											"end": 9882,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9522,
											"end": 9888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9522,
											"end": 9888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9522,
											"end": 9888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9522,
											"end": 9888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9894,
											"end": 10313,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 9894,
											"end": 10313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10060,
											"end": 10064,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10098,
											"end": 10100,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10087,
											"end": 10096,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10083,
											"end": 10101,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10075,
											"end": 10101,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10075,
											"end": 10101,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10147,
											"end": 10156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10141,
											"end": 10145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10133,
											"end": 10134,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10122,
											"end": 10131,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10118,
											"end": 10135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10111,
											"end": 10158,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10175,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 10301,
											"end": 10305,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10175,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 10175,
											"end": 10306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10175,
											"end": 10306,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 10175,
											"end": 10306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10167,
											"end": 10306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10167,
											"end": 10306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9894,
											"end": 10313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9894,
											"end": 10313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9894,
											"end": 10313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9894,
											"end": 10313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10319,
											"end": 10466,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 10319,
											"end": 10466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10420,
											"end": 10431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10457,
											"end": 10460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10442,
											"end": 10460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10442,
											"end": 10460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10319,
											"end": 10466,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10319,
											"end": 10466,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10319,
											"end": 10466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10319,
											"end": 10466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10319,
											"end": 10466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10472,
											"end": 10586,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 10472,
											"end": 10586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10472,
											"end": 10586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10472,
											"end": 10586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10592,
											"end": 10990,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 10592,
											"end": 10990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10751,
											"end": 10754,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 10853,
											"end": 10854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10848,
											"end": 10851,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10772,
											"end": 10855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 10772,
											"end": 10855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10772,
											"end": 10855,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 10772,
											"end": 10855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10765,
											"end": 10855,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10765,
											"end": 10855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10864,
											"end": 10957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 10953,
											"end": 10956,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10864,
											"end": 10957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 10864,
											"end": 10957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10864,
											"end": 10957,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 10864,
											"end": 10957,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 10983,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10973,
											"end": 10984,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10966,
											"end": 10984,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10966,
											"end": 10984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10592,
											"end": 10990,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10592,
											"end": 10990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10592,
											"end": 10990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10592,
											"end": 10990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11375,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 10996,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11180,
											"end": 11183,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11202,
											"end": 11349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 11345,
											"end": 11348,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11202,
											"end": 11349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 11202,
											"end": 11349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11202,
											"end": 11349,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 11202,
											"end": 11349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11195,
											"end": 11349,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11195,
											"end": 11349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11366,
											"end": 11369,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11359,
											"end": 11369,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11359,
											"end": 11369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11375,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11375,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11381,
											"end": 11548,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 11381,
											"end": 11548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11521,
											"end": 11540,
											"name": "PUSH",
											"source": 8,
											"value": "5769746864726177616C206661696C6564000000000000000000000000000000"
										},
										{
											"begin": 11517,
											"end": 11518,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11509,
											"end": 11515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11505,
											"end": 11519,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11498,
											"end": 11541,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11381,
											"end": 11548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11381,
											"end": 11548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11554,
											"end": 11920,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 11554,
											"end": 11920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11696,
											"end": 11699,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11717,
											"end": 11784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 11781,
											"end": 11783,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 11776,
											"end": 11779,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 11717,
											"end": 11784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11784,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 11717,
											"end": 11784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11710,
											"end": 11784,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11710,
											"end": 11784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11793,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 11882,
											"end": 11885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11793,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 11793,
											"end": 11886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11793,
											"end": 11886,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 11793,
											"end": 11886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11911,
											"end": 11913,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11906,
											"end": 11909,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11902,
											"end": 11914,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11895,
											"end": 11914,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11895,
											"end": 11914,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11554,
											"end": 11920,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11554,
											"end": 11920,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11554,
											"end": 11920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11554,
											"end": 11920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11926,
											"end": 12345,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 11926,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12092,
											"end": 12096,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12130,
											"end": 12132,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12119,
											"end": 12128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12115,
											"end": 12133,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12107,
											"end": 12133,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12107,
											"end": 12133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12179,
											"end": 12188,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12173,
											"end": 12177,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12169,
											"end": 12189,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12165,
											"end": 12166,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12154,
											"end": 12163,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12150,
											"end": 12167,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12143,
											"end": 12190,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12207,
											"end": 12338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 12333,
											"end": 12337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12207,
											"end": 12338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 12207,
											"end": 12338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12207,
											"end": 12338,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 12207,
											"end": 12338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12199,
											"end": 12338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12199,
											"end": 12338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11926,
											"end": 12345,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11926,
											"end": 12345,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11926,
											"end": 12345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11926,
											"end": 12345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12351,
											"end": 12522,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 12351,
											"end": 12522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12491,
											"end": 12514,
											"name": "PUSH",
											"source": 8,
											"value": "46756E64696E6720616C726561647920656E6465640000000000000000000000"
										},
										{
											"begin": 12487,
											"end": 12488,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12479,
											"end": 12485,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12475,
											"end": 12489,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12468,
											"end": 12515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12351,
											"end": 12522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12351,
											"end": 12522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12528,
											"end": 12894,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 12528,
											"end": 12894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12670,
											"end": 12673,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12691,
											"end": 12758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 12755,
											"end": 12757,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 12750,
											"end": 12753,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12691,
											"end": 12758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 12691,
											"end": 12758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12691,
											"end": 12758,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 12691,
											"end": 12758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12684,
											"end": 12758,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12684,
											"end": 12758,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12767,
											"end": 12860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 12856,
											"end": 12859,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12767,
											"end": 12860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 12767,
											"end": 12860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12767,
											"end": 12860,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 12767,
											"end": 12860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12885,
											"end": 12887,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12880,
											"end": 12883,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12876,
											"end": 12888,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12869,
											"end": 12888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12869,
											"end": 12888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12528,
											"end": 12894,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12528,
											"end": 12894,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12528,
											"end": 12894,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12528,
											"end": 12894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12900,
											"end": 13319,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 12900,
											"end": 13319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13066,
											"end": 13070,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13104,
											"end": 13106,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13093,
											"end": 13102,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13089,
											"end": 13107,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13081,
											"end": 13107,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13081,
											"end": 13107,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13153,
											"end": 13162,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13147,
											"end": 13151,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13143,
											"end": 13163,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13139,
											"end": 13140,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13128,
											"end": 13137,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13124,
											"end": 13141,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13117,
											"end": 13164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13181,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 13307,
											"end": 13311,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13181,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 13181,
											"end": 13312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13181,
											"end": 13312,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 13181,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13173,
											"end": 13312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13173,
											"end": 13312,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12900,
											"end": 13319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12900,
											"end": 13319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12900,
											"end": 13319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12900,
											"end": 13319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13325,
											"end": 13494,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 13325,
											"end": 13494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13465,
											"end": 13486,
											"name": "PUSH",
											"source": 8,
											"value": "4D75737420626520616E20696E766573746F7200000000000000000000000000"
										},
										{
											"begin": 13461,
											"end": 13462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13453,
											"end": 13459,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13449,
											"end": 13463,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13442,
											"end": 13487,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13325,
											"end": 13494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13325,
											"end": 13494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13500,
											"end": 13866,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 13500,
											"end": 13866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13642,
											"end": 13645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13663,
											"end": 13730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 13727,
											"end": 13729,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 13722,
											"end": 13725,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13663,
											"end": 13730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 13663,
											"end": 13730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13663,
											"end": 13730,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 13663,
											"end": 13730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13730,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13739,
											"end": 13832,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 13828,
											"end": 13831,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13739,
											"end": 13832,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 13739,
											"end": 13832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13739,
											"end": 13832,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 13739,
											"end": 13832,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13857,
											"end": 13859,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13852,
											"end": 13855,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13848,
											"end": 13860,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13841,
											"end": 13860,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13841,
											"end": 13860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13500,
											"end": 13866,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13500,
											"end": 13866,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13500,
											"end": 13866,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13500,
											"end": 13866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13872,
											"end": 14291,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 13872,
											"end": 14291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14038,
											"end": 14042,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14076,
											"end": 14078,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14065,
											"end": 14074,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14061,
											"end": 14079,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14053,
											"end": 14079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14053,
											"end": 14079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14125,
											"end": 14134,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14119,
											"end": 14123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14115,
											"end": 14135,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14111,
											"end": 14112,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14100,
											"end": 14109,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14096,
											"end": 14113,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14089,
											"end": 14136,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14153,
											"end": 14284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 14279,
											"end": 14283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14153,
											"end": 14284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 14153,
											"end": 14284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14153,
											"end": 14284,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 14153,
											"end": 14284,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14145,
											"end": 14284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14145,
											"end": 14284,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13872,
											"end": 14291,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13872,
											"end": 14291,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13872,
											"end": 14291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13872,
											"end": 14291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14297,
											"end": 14460,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 14297,
											"end": 14460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14437,
											"end": 14452,
											"name": "PUSH",
											"source": 8,
											"value": "416C726561647920766F74656400000000000000000000000000000000000000"
										},
										{
											"begin": 14433,
											"end": 14434,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14425,
											"end": 14431,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14421,
											"end": 14435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14414,
											"end": 14453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14297,
											"end": 14460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14297,
											"end": 14460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14466,
											"end": 14832,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 14466,
											"end": 14832,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14608,
											"end": 14611,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14629,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 14693,
											"end": 14695,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 14688,
											"end": 14691,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14629,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 14629,
											"end": 14696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14629,
											"end": 14696,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 14629,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14622,
											"end": 14696,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14622,
											"end": 14696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14705,
											"end": 14798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 14794,
											"end": 14797,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14705,
											"end": 14798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 14705,
											"end": 14798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14705,
											"end": 14798,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 14705,
											"end": 14798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14823,
											"end": 14825,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14818,
											"end": 14821,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14814,
											"end": 14826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14807,
											"end": 14826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14807,
											"end": 14826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14466,
											"end": 14832,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14466,
											"end": 14832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14466,
											"end": 14832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14466,
											"end": 14832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14838,
											"end": 15257,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 14838,
											"end": 15257,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15004,
											"end": 15008,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15042,
											"end": 15044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15031,
											"end": 15040,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15027,
											"end": 15045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15019,
											"end": 15045,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15019,
											"end": 15045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15091,
											"end": 15100,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15085,
											"end": 15089,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15081,
											"end": 15101,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15077,
											"end": 15078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15066,
											"end": 15075,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15062,
											"end": 15079,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15055,
											"end": 15102,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15119,
											"end": 15250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 15245,
											"end": 15249,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15119,
											"end": 15250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 15119,
											"end": 15250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15119,
											"end": 15250,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 15119,
											"end": 15250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15111,
											"end": 15250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15111,
											"end": 15250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14838,
											"end": 15257,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14838,
											"end": 15257,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14838,
											"end": 15257,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14838,
											"end": 15257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15263,
											"end": 15454,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 15263,
											"end": 15454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15303,
											"end": 15306,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15322,
											"end": 15342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 15340,
											"end": 15341,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15322,
											"end": 15342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 15322,
											"end": 15342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15322,
											"end": 15342,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 15322,
											"end": 15342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15317,
											"end": 15342,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15317,
											"end": 15342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15356,
											"end": 15376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 15374,
											"end": 15375,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15356,
											"end": 15376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 15356,
											"end": 15376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15356,
											"end": 15376,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 15356,
											"end": 15376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15351,
											"end": 15376,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15351,
											"end": 15376,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15399,
											"end": 15400,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15397,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15392,
											"end": 15401,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15385,
											"end": 15401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15385,
											"end": 15401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15420,
											"end": 15423,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15417,
											"end": 15418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15414,
											"end": 15424,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 15411,
											"end": 15447,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15411,
											"end": 15447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 15411,
											"end": 15447,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15427,
											"end": 15445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 15427,
											"end": 15445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 15427,
											"end": 15445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15427,
											"end": 15445,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 15427,
											"end": 15445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15411,
											"end": 15447,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 15411,
											"end": 15447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15263,
											"end": 15454,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15263,
											"end": 15454,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15263,
											"end": 15454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15263,
											"end": 15454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15263,
											"end": 15454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15460,
											"end": 15627,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 15460,
											"end": 15627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15600,
											"end": 15619,
											"name": "PUSH",
											"source": 8,
											"value": "46756E64696E6720697320636C6F736564000000000000000000000000000000"
										},
										{
											"begin": 15596,
											"end": 15597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15588,
											"end": 15594,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15584,
											"end": 15598,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15577,
											"end": 15620,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15460,
											"end": 15627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15460,
											"end": 15627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15633,
											"end": 15999,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 15633,
											"end": 15999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15775,
											"end": 15778,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15796,
											"end": 15863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 15860,
											"end": 15862,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 15855,
											"end": 15858,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15796,
											"end": 15863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 15796,
											"end": 15863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15796,
											"end": 15863,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 15796,
											"end": 15863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15789,
											"end": 15863,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15789,
											"end": 15863,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15872,
											"end": 15965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 15961,
											"end": 15964,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15872,
											"end": 15965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 15872,
											"end": 15965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15872,
											"end": 15965,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 15872,
											"end": 15965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15990,
											"end": 15992,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15985,
											"end": 15988,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15981,
											"end": 15993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 15993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 15993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15633,
											"end": 15999,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15633,
											"end": 15999,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15633,
											"end": 15999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15633,
											"end": 15999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16005,
											"end": 16424,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 16005,
											"end": 16424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16171,
											"end": 16175,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16209,
											"end": 16211,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16198,
											"end": 16207,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16194,
											"end": 16212,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16186,
											"end": 16212,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16186,
											"end": 16212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16258,
											"end": 16267,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16252,
											"end": 16256,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16248,
											"end": 16268,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16244,
											"end": 16245,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16233,
											"end": 16242,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16229,
											"end": 16246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16222,
											"end": 16269,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16286,
											"end": 16417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 16412,
											"end": 16416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16286,
											"end": 16417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 16286,
											"end": 16417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16286,
											"end": 16417,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 16286,
											"end": 16417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16278,
											"end": 16417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16278,
											"end": 16417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16005,
											"end": 16424,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16005,
											"end": 16424,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16005,
											"end": 16424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16005,
											"end": 16424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16430,
											"end": 16652,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 16430,
											"end": 16652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16570,
											"end": 16604,
											"name": "PUSH",
											"source": 8,
											"value": "436F6E747269627574696F6E206D757374206265206772656174657220746861"
										},
										{
											"begin": 16566,
											"end": 16567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16558,
											"end": 16564,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16554,
											"end": 16568,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16547,
											"end": 16605,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16639,
											"end": 16644,
											"name": "PUSH",
											"source": 8,
											"value": "6E20300000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16634,
											"end": 16636,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16626,
											"end": 16632,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16622,
											"end": 16637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16615,
											"end": 16645,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16430,
											"end": 16652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16430,
											"end": 16652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16658,
											"end": 17024,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 16658,
											"end": 17024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16800,
											"end": 16803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16821,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 16885,
											"end": 16887,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 16880,
											"end": 16883,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16821,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 16821,
											"end": 16888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16821,
											"end": 16888,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 16821,
											"end": 16888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16814,
											"end": 16888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16814,
											"end": 16888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16897,
											"end": 16990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 16986,
											"end": 16989,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16897,
											"end": 16990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 16897,
											"end": 16990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16897,
											"end": 16990,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 16897,
											"end": 16990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17015,
											"end": 17017,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17010,
											"end": 17013,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17006,
											"end": 17018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16999,
											"end": 17018,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16999,
											"end": 17018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16658,
											"end": 17024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16658,
											"end": 17024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16658,
											"end": 17024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16658,
											"end": 17024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17030,
											"end": 17449,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 17030,
											"end": 17449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17196,
											"end": 17200,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17234,
											"end": 17236,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17223,
											"end": 17232,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17219,
											"end": 17237,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17211,
											"end": 17237,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17211,
											"end": 17237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17283,
											"end": 17292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17277,
											"end": 17281,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17273,
											"end": 17293,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17269,
											"end": 17270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17258,
											"end": 17267,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17254,
											"end": 17271,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17247,
											"end": 17294,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17311,
											"end": 17442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 17437,
											"end": 17441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17311,
											"end": 17442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 17311,
											"end": 17442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17311,
											"end": 17442,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 17311,
											"end": 17442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17303,
											"end": 17442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17303,
											"end": 17442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17030,
											"end": 17449,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17030,
											"end": 17449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17030,
											"end": 17449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17030,
											"end": 17449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17455,
											"end": 17787,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 17455,
											"end": 17787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17576,
											"end": 17580,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17614,
											"end": 17616,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17603,
											"end": 17612,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17599,
											"end": 17617,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17591,
											"end": 17617,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17591,
											"end": 17617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 17695,
											"end": 17696,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17684,
											"end": 17693,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17680,
											"end": 17697,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17671,
											"end": 17677,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 17627,
											"end": 17698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17708,
											"end": 17780,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 17776,
											"end": 17778,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17765,
											"end": 17774,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17761,
											"end": 17779,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17752,
											"end": 17758,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17708,
											"end": 17780,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 17708,
											"end": 17780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17708,
											"end": 17780,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 17708,
											"end": 17780,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17455,
											"end": 17787,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 17455,
											"end": 17787,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17455,
											"end": 17787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17455,
											"end": 17787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17455,
											"end": 17787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17455,
											"end": 17787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17793,
											"end": 18235,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 17793,
											"end": 18235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17942,
											"end": 17946,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17980,
											"end": 17982,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 17969,
											"end": 17978,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17965,
											"end": 17983,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17957,
											"end": 17983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17957,
											"end": 17983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17993,
											"end": 18064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 18061,
											"end": 18062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18050,
											"end": 18059,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18046,
											"end": 18063,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18037,
											"end": 18043,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17993,
											"end": 18064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 17993,
											"end": 18064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17993,
											"end": 18064,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 17993,
											"end": 18064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18074,
											"end": 18146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 18142,
											"end": 18144,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18131,
											"end": 18140,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18127,
											"end": 18145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18118,
											"end": 18124,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18074,
											"end": 18146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 18074,
											"end": 18146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18074,
											"end": 18146,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 18074,
											"end": 18146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18156,
											"end": 18228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 18224,
											"end": 18226,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18213,
											"end": 18222,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18209,
											"end": 18227,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18206,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18156,
											"end": 18228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 18156,
											"end": 18228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18156,
											"end": 18228,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 18156,
											"end": 18228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17793,
											"end": 18235,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 17793,
											"end": 18235,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 17793,
											"end": 18235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17793,
											"end": 18235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17793,
											"end": 18235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17793,
											"end": 18235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17793,
											"end": 18235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18241,
											"end": 18422,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 18241,
											"end": 18422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18381,
											"end": 18414,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 18377,
											"end": 18378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18369,
											"end": 18375,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18365,
											"end": 18379,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18358,
											"end": 18415,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18241,
											"end": 18422,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18241,
											"end": 18422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18428,
											"end": 18794,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 18428,
											"end": 18794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18570,
											"end": 18573,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18591,
											"end": 18658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 18655,
											"end": 18657,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 18650,
											"end": 18653,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18591,
											"end": 18658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 18591,
											"end": 18658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18591,
											"end": 18658,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 18591,
											"end": 18658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18584,
											"end": 18658,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18584,
											"end": 18658,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18667,
											"end": 18760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 18756,
											"end": 18759,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18667,
											"end": 18760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 18667,
											"end": 18760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18667,
											"end": 18760,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 18667,
											"end": 18760,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18785,
											"end": 18787,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18780,
											"end": 18783,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18776,
											"end": 18788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18769,
											"end": 18788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18769,
											"end": 18788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18428,
											"end": 18794,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18428,
											"end": 18794,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18428,
											"end": 18794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18428,
											"end": 18794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18800,
											"end": 19219,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 18800,
											"end": 19219,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18966,
											"end": 18970,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19004,
											"end": 19006,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18993,
											"end": 19002,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18989,
											"end": 19007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18981,
											"end": 19007,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18981,
											"end": 19007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19053,
											"end": 19062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19047,
											"end": 19051,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19043,
											"end": 19063,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19039,
											"end": 19040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19028,
											"end": 19037,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19024,
											"end": 19041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19017,
											"end": 19064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19081,
											"end": 19212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 19207,
											"end": 19211,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19081,
											"end": 19212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 19081,
											"end": 19212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19081,
											"end": 19212,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 19081,
											"end": 19212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19073,
											"end": 19212,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19073,
											"end": 19212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18800,
											"end": 19219,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18800,
											"end": 19219,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18800,
											"end": 19219,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18800,
											"end": 19219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"D/decentralized autonomous initial coin offering.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"contractBalance()": "8b7afe2e",
							"contribute()": "d7bb99ba",
							"contributions(address)": "42e94c90",
							"decimals()": "313ce567",
							"endFundingManually()": "3fc5144e",
							"fundingGoal()": "7a3a0e84",
							"fundsRaised()": "6681b9fd",
							"hasEnoughVotes()": "3e186253",
							"hasVoted(address)": "09eef43e",
							"isFundingActive()": "636d6c9d",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"rate()": "2c4e722e",
							"renounceOwnership()": "715018a6",
							"requiredVotesPercentage()": "5ec1cfb7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"totalVotes()": "0d15fd77",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"voteForFundRelease()": "94b6a4b8",
							"withdrawFunds()": "24600fc3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requiredVotesPercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"FundingEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"team\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VotingStarted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endFundingManually\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingGoal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundsRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasEnoughVotes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFundingActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredVotesPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteForFundRelease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"DAICO - Decentralized Autonomous Initial Coin Offering\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"contractBalance()\":{\"notice\":\"Retrieve contract's ETH balance\"},\"contribute()\":{\"notice\":\"Investors contribute ETH to the DAICO\"},\"endFundingManually()\":{\"notice\":\"Ends funding period manually (only by owner)\"},\"hasEnoughVotes()\":{\"notice\":\"Check if sufficient votes received\"},\"voteForFundRelease()\":{\"notice\":\"Investors initiate a vote to allow team withdrawal\"},\"withdrawFunds()\":{\"notice\":\"Owner (project team) withdraws funds after receiving enough votes\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"D/decentralized autonomous initial coin offering.sol\":\"DAICO\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"D/decentralized autonomous initial coin offering.sol\":{\"keccak256\":\"0x747aa06591727ab062747cf4c6016851ac5bae0e1dd5c16d8d2a83cf1818f577\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc276454c7dd149c02a475ddcf88df0d5c95f028a4dd139d1e786f182540a34e\",\"dweb:/ipfs/QmT5aNFbNurpaxZnS7YTw85F8rPtLKq2Vv1mZu1CPXJFyz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "D/decentralized autonomous initial coin offering.sol:DAICO",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "D/decentralized autonomous initial coin offering.sol:DAICO",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 372,
								"contract": "D/decentralized autonomous initial coin offering.sol:DAICO",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "D/decentralized autonomous initial coin offering.sol:DAICO",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "D/decentralized autonomous initial coin offering.sol:DAICO",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "D/decentralized autonomous initial coin offering.sol:DAICO",
								"label": "_name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "D/decentralized autonomous initial coin offering.sol:DAICO",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1012,
								"contract": "D/decentralized autonomous initial coin offering.sol:DAICO",
								"label": "rate",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1014,
								"contract": "D/decentralized autonomous initial coin offering.sol:DAICO",
								"label": "fundingGoal",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1016,
								"contract": "D/decentralized autonomous initial coin offering.sol:DAICO",
								"label": "fundsRaised",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1018,
								"contract": "D/decentralized autonomous initial coin offering.sol:DAICO",
								"label": "isFundingActive",
								"offset": 0,
								"slot": "10",
								"type": "t_bool"
							},
							{
								"astId": 1022,
								"contract": "D/decentralized autonomous initial coin offering.sol:DAICO",
								"label": "contributions",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1026,
								"contract": "D/decentralized autonomous initial coin offering.sol:DAICO",
								"label": "hasVoted",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1028,
								"contract": "D/decentralized autonomous initial coin offering.sol:DAICO",
								"label": "totalVotes",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1030,
								"contract": "D/decentralized autonomous initial coin offering.sol:DAICO",
								"label": "requiredVotesPercentage",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"contractBalance()": {
								"notice": "Retrieve contract's ETH balance"
							},
							"contribute()": {
								"notice": "Investors contribute ETH to the DAICO"
							},
							"endFundingManually()": {
								"notice": "Ends funding period manually (only by owner)"
							},
							"hasEnoughVotes()": {
								"notice": "Check if sufficient votes received"
							},
							"voteForFundRelease()": {
								"notice": "Investors initiate a vote to allow team withdrawal"
							},
							"withdrawFunds()": {
								"notice": "Owner (project team) withdraws funds after receiving enough votes"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 999,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								998
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 969,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 968,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 999,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "1133:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1142:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 968,
										"src": "1150:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								968,
								942,
								998
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 864,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 864,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										961
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 864,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										967
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 864,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 864,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 864,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 864,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 864,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 864,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 864,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 864,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 864,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 864,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 864,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 864,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 864,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10504:387:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10576:309:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10618:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10636:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10655:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10632:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10662:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10714:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10723:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10741:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "10812:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "10819:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10828:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10847:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "10803:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 864,
									"src": "10415:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1106:9787:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:10789:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 942,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 942,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 942,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 942,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 942,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 942,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 969,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 943,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 948,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "306:6:5"
									},
									"id": 949,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 968,
							"linearizedBaseContracts": [
								968,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 968,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 968,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 964,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 968,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 969,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 970,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 971,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 976,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 975,
												"id": 978,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 998,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 985,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 984,
												"id": 987,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 998,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 993,
												"id": 995,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 998,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"D/decentralized autonomous initial coin offering.sol": {
				"ast": {
					"absolutePath": "D/decentralized autonomous initial coin offering.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"DAICO": [
							1345
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							349
						]
					},
					"id": 1346,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1001,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1346,
							"sourceUnit": 148,
							"src": "58:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1002,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1346,
							"sourceUnit": 350,
							"src": "111:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1003,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1346,
							"sourceUnit": 865,
							"src": "174:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1005,
										"name": "Ownable",
										"nameLocations": [
											"315:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "315:7:7"
									},
									"id": 1006,
									"nodeType": "InheritanceSpecifier",
									"src": "315:7:7"
								},
								{
									"baseName": {
										"id": 1007,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"324:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "324:15:7"
									},
									"id": 1008,
									"nodeType": "InheritanceSpecifier",
									"src": "324:15:7"
								},
								{
									"baseName": {
										"id": 1009,
										"name": "ERC20",
										"nameLocations": [
											"341:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "341:5:7"
									},
									"id": 1010,
									"nodeType": "InheritanceSpecifier",
									"src": "341:5:7"
								}
							],
							"canonicalName": "DAICO",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1004,
								"nodeType": "StructuredDocumentation",
								"src": "231:66:7",
								"text": "@title DAICO - Decentralized Autonomous Initial Coin Offering"
							},
							"fullyImplemented": true,
							"id": 1345,
							"linearizedBaseContracts": [
								1345,
								864,
								189,
								968,
								942,
								349,
								147,
								998
							],
							"name": "DAICO",
							"nameLocation": "306:5:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "2c4e722e",
									"id": 1012,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "368:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "353:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1011,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "353:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a3a0e84",
									"id": 1014,
									"mutability": "mutable",
									"name": "fundingGoal",
									"nameLocation": "412:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "397:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1013,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "397:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6681b9fd",
									"id": 1016,
									"mutability": "mutable",
									"name": "fundsRaised",
									"nameLocation": "444:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "429:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1015,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "429:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "636d6c9d",
									"id": 1018,
									"mutability": "mutable",
									"name": "isFundingActive",
									"nameLocation": "473:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "461:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1017,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "461:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "42e94c90",
									"id": 1022,
									"mutability": "mutable",
									"name": "contributions",
									"nameLocation": "568:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "533:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1021,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1019,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "541:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "533:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1020,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "552:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "09eef43e",
									"id": 1026,
									"mutability": "mutable",
									"name": "hasVoted",
									"nameLocation": "644:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "612:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1025,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1023,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "620:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "612:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1024,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "631:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0d15fd77",
									"id": 1028,
									"mutability": "mutable",
									"name": "totalVotes",
									"nameLocation": "673:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "658:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1027,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "658:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5ec1cfb7",
									"id": 1030,
									"mutability": "mutable",
									"name": "requiredVotesPercentage",
									"nameLocation": "704:23:7",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "689:38:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1029,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "689:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5f7675b09617d2c9fa4fd13058ee5877a9538f626b0308816736e83748a45040",
									"id": 1038,
									"name": "Contribution",
									"nameLocation": "786:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"indexed": true,
												"mutability": "mutable",
												"name": "investor",
												"nameLocation": "815:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "799:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "833:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "825:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "849:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "841:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:58:7"
									},
									"src": "780:77:7"
								},
								{
									"anonymous": false,
									"eventSelector": "eaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d",
									"id": 1044,
									"name": "FundsWithdrawn",
									"nameLocation": "868:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"indexed": true,
												"mutability": "mutable",
												"name": "team",
												"nameLocation": "899:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "883:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "913:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "905:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:38:7"
									},
									"src": "862:59:7"
								},
								{
									"anonymous": false,
									"eventSelector": "877e2548498f42b7975a186b94ef1d32c86d420b7b806dd2be2bea293b895904",
									"id": 1046,
									"name": "VotingStarted",
									"nameLocation": "932:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "945:2:7"
									},
									"src": "926:22:7"
								},
								{
									"anonymous": false,
									"eventSelector": "16a9aa39af49f169911e977347975198c503525f7240d6892a626f0227642fce",
									"id": 1050,
									"name": "Voted",
									"nameLocation": "959:5:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"indexed": true,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "981:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "965:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "964:23:7"
									},
									"src": "953:35:7"
								},
								{
									"anonymous": false,
									"eventSelector": "bdc0e037eadb8b0c782400faf1b352631d6cd8bdf086c0e7eb0028e210041dc9",
									"id": 1052,
									"name": "FundingEnded",
									"nameLocation": "999:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:2:7"
									},
									"src": "993:21:7"
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "1255:361:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1074,
																"name": "_rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1058,
																"src": "1273:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1281:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1273:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52617465206d7573742062652067726561746572207468616e2030",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1284:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3eec5ea7df2a12f583914e102495bcafa3fc3cef4a94e2c61ffa2c353d218bf4",
																"typeString": "literal_string \"Rate must be greater than 0\""
															},
															"value": "Rate must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3eec5ea7df2a12f583914e102495bcafa3fc3cef4a94e2c61ffa2c353d218bf4",
																"typeString": "literal_string \"Rate must be greater than 0\""
															}
														],
														"id": 1073,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1265:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1265:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "1265:49:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1081,
																"name": "_fundingGoal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "1332:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1347:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1332:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "476f616c206d7573742062652067726561746572207468616e2030",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1350:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec035aef93e96c874fc3fa49bb31f557de90808da7ce462b3778578c4850131e",
																"typeString": "literal_string \"Goal must be greater than 0\""
															},
															"value": "Goal must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec035aef93e96c874fc3fa49bb31f557de90808da7ce462b3778578c4850131e",
																"typeString": "literal_string \"Goal must be greater than 0\""
															}
														],
														"id": 1080,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1324:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1324:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "1324:56:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1088,
																"name": "_requiredVotesPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "1398:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1426:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "1398:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f7465732070657263656e74206d61782031303025",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1433:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7977cdfba43fb9b628861f8e33ea39f553cef52b55bd95c7f09cb24b3debdba5",
																"typeString": "literal_string \"Votes percent max 100%\""
															},
															"value": "Votes percent max 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7977cdfba43fb9b628861f8e33ea39f553cef52b55bd95c7f09cb24b3debdba5",
																"typeString": "literal_string \"Votes percent max 100%\""
															}
														],
														"id": 1087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1390:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1390:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "1390:68:7"
											},
											{
												"expression": {
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1094,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "1469:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1095,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "1476:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1469:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "1469:12:7"
											},
											{
												"expression": {
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1098,
														"name": "fundingGoal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "1491:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1099,
														"name": "_fundingGoal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "1505:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1491:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "1491:26:7"
											},
											{
												"expression": {
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1102,
														"name": "requiredVotesPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "1527:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1103,
														"name": "_requiredVotesPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "1553:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1527:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "1527:50:7"
											},
											{
												"expression": {
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1106,
														"name": "isFundingActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "1587:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1605:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1587:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "1587:22:7"
											}
										]
									},
									"id": 1111,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1065,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1054,
													"src": "1207:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1066,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1056,
													"src": "1214:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1067,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1064,
												"name": "ERC20",
												"nameLocations": [
													"1201:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "1201:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1201:21:7"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1069,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1239:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1243:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1239:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1071,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1068,
												"name": "Ownable",
												"nameLocations": [
													"1231:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1231:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1231:19:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1055:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1041:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1053,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1041:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1084:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1070:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1055,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1070:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "1109:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1101:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "_fundingGoal",
												"nameLocation": "1132:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1124:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "_requiredVotesPercentage",
												"nameLocation": "1162:24:7",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1154:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:161:7"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1255:0:7"
									},
									"scope": 1345,
									"src": "1020:596:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "1728:494:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1118,
															"name": "isFundingActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "1746:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e64696e6720697320636c6f736564",
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1763:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dacec424514392f190ecf5d0b95a745954c9a31ddd7829502ac5c4498a85080d",
																"typeString": "literal_string \"Funding is closed\""
															},
															"value": "Funding is closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dacec424514392f190ecf5d0b95a745954c9a31ddd7829502ac5c4498a85080d",
																"typeString": "literal_string \"Funding is closed\""
															}
														],
														"id": 1117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1738:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1738:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "1738:45:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1123,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1801:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1805:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1801:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1813:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1801:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747269627574696f6e206d7573742062652067726561746572207468616e2030",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5e5aa06e63518928aca28b9bd5d4b07f19d38bcb7e3ef13f7b9cb1a8a22ba4c",
																"typeString": "literal_string \"Contribution must be greater than 0\""
															},
															"value": "Contribution must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5e5aa06e63518928aca28b9bd5d4b07f19d38bcb7e3ef13f7b9cb1a8a22ba4c",
																"typeString": "literal_string \"Contribution must be greater than 0\""
															}
														],
														"id": 1122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1793:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1793:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "1793:61:7"
											},
											{
												"assignments": [
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"mutability": "mutable",
														"name": "tokensToMint",
														"nameLocation": "1873:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1176,
														"src": "1865:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1865:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1136,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1132,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1888:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1892:5:7",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1888:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1134,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "1900:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1888:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1865:39:7"
											},
											{
												"expression": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1137,
															"name": "contributions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "1914:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1140,
														"indexExpression": {
															"expression": {
																"id": 1138,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1928:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1932:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1928:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1914:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1141,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1943:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1947:5:7",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1943:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1914:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "1914:38:7"
											},
											{
												"expression": {
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1145,
														"name": "fundsRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "1962:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1146,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1977:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1981:5:7",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1977:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1962:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "1962:24:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1151,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2003:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2007:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2003:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1153,
															"name": "tokensToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "2015:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1150,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "1997:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1997:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "1997:31:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1157,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2056:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2060:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2056:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1159,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2068:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2072:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2068:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1161,
															"name": "tokensToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "2079:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1156,
														"name": "Contribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "2043:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2043:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "EmitStatement",
												"src": "2038:54:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1164,
														"name": "fundsRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "2107:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1165,
														"name": "fundingGoal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "2122:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2107:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"nodeType": "IfStatement",
												"src": "2103:113:7",
												"trueBody": {
													"id": 1174,
													"nodeType": "Block",
													"src": "2135:81:7",
													"statements": [
														{
															"expression": {
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1167,
																	"name": "isFundingActive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "2149:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2167:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2149:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1170,
															"nodeType": "ExpressionStatement",
															"src": "2149:23:7"
														},
														{
															"eventCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1171,
																	"name": "FundingEnded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "2191:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2191:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1173,
															"nodeType": "EmitStatement",
															"src": "2186:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "1622:49:7",
										"text": "@notice Investors contribute ETH to the DAICO"
									},
									"functionSelector": "d7bb99ba",
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1114,
												"name": "nonReentrant",
												"nameLocations": [
													"1715:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "1715:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1715:12:7"
										}
									],
									"name": "contribute",
									"nameLocation": "1685:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1695:2:7"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1728:0:7"
									},
									"scope": 1345,
									"src": "1676:546:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "2347:255:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1184,
																	"name": "contributions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "2365:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1187,
																"indexExpression": {
																	"expression": {
																		"id": 1185,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2379:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2383:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2379:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2365:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2393:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2365:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d75737420626520616e20696e766573746f72",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2396:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_167c9b3380513941ed45ad6c12ae68092c0fdbdf8dd00ce6e252f9bd866e577a",
																"typeString": "literal_string \"Must be an investor\""
															},
															"value": "Must be an investor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_167c9b3380513941ed45ad6c12ae68092c0fdbdf8dd00ce6e252f9bd866e577a",
																"typeString": "literal_string \"Must be an investor\""
															}
														],
														"id": 1183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2357:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "2357:61:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2436:21:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1194,
																	"name": "hasVoted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "2437:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1197,
																"indexExpression": {
																	"expression": {
																		"id": 1195,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2446:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2446:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2437:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920766f746564",
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2459:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
																"typeString": "literal_string \"Already voted\""
															},
															"value": "Already voted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
																"typeString": "literal_string \"Already voted\""
															}
														],
														"id": 1193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2428:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2428:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "2428:47:7"
											},
											{
												"expression": {
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1202,
															"name": "hasVoted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "2486:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1205,
														"indexExpression": {
															"expression": {
																"id": 1203,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2495:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2499:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2495:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2486:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2509:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2486:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "2486:27:7"
											},
											{
												"expression": {
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1209,
														"name": "totalVotes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "2523:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1210,
															"name": "contributions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "2537:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1213,
														"indexExpression": {
															"expression": {
																"id": 1211,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2551:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2555:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2551:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2537:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2523:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "2523:39:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1217,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2584:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2588:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2584:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1216,
														"name": "Voted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "2578:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2578:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1220,
												"nodeType": "EmitStatement",
												"src": "2573:22:7"
											}
										]
									},
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "2228:62:7",
										"text": "@notice Investors initiate a vote to allow team withdrawal"
									},
									"functionSelector": "94b6a4b8",
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1181,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1180,
												"name": "nonReentrant",
												"nameLocations": [
													"2334:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "2334:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2334:12:7"
										}
									],
									"name": "voteForFundRelease",
									"nameLocation": "2304:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2322:2:7"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:7"
									},
									"scope": 1345,
									"src": "2295:307:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "2747:478:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2765:16:7",
															"subExpression": {
																"id": 1231,
																"name": "isFundingActive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "2766:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e64696e67207374696c6c20616374697665",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2783:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_589f77ce001b8beeda2f278d91ba16dd7c7bd1709ca2e7c12f193e44d84299d2",
																"typeString": "literal_string \"Funding still active\""
															},
															"value": "Funding still active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_589f77ce001b8beeda2f278d91ba16dd7c7bd1709ca2e7c12f193e44d84299d2",
																"typeString": "literal_string \"Funding still active\""
															}
														],
														"id": 1230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2757:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2757:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "2757:49:7"
											},
											{
												"assignments": [
													1237
												],
												"declarations": [
													{
														"constant": false,
														"id": 1237,
														"mutability": "mutable",
														"name": "requiredVotes",
														"nameLocation": "2824:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1291,
														"src": "2816:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2816:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1238,
																	"name": "fundsRaised",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "2841:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1239,
																	"name": "requiredVotesPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "2855:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2841:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1241,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2840:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2882:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2840:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2816:71:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1246,
																"name": "totalVotes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "2905:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1247,
																"name": "requiredVotes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "2919:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2905:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820766f746573",
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2934:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d6472a439219175f58c2c24311e8dc196b2c1ebdd449fee5365e9b336929ab0",
																"typeString": "literal_string \"Not enough votes\""
															},
															"value": "Not enough votes"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d6472a439219175f58c2c24311e8dc196b2c1ebdd449fee5365e9b336929ab0",
																"typeString": "literal_string \"Not enough votes\""
															}
														],
														"id": 1245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2897:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2897:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "2897:56:7"
											},
											{
												"assignments": [
													1253
												],
												"declarations": [
													{
														"constant": false,
														"id": 1253,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2972:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1291,
														"src": "2964:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1252,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2964:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1259,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1256,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2989:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DAICO_$1345",
																	"typeString": "contract DAICO"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_DAICO_$1345",
																	"typeString": "contract DAICO"
																}
															],
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2981:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1254,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2981:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2981:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2995:7:7",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2981:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2964:38:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1261,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "3020:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3029:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3020:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2066756e647320746f207769746864726177",
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3032:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																"typeString": "literal_string \"No funds to withdraw\""
															},
															"value": "No funds to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																"typeString": "literal_string \"No funds to withdraw\""
															}
														],
														"id": 1260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3012:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3012:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "3012:43:7"
											},
											{
												"assignments": [
													1268,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1268,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3072:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1291,
														"src": "3067:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1267,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3067:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1279,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3121:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1271,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "3092:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3092:7:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3084:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1269,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3084:8:7",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:16:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3101:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3084:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1275,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "3113:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3084:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3084:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3066:58:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1281,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "3142:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c206661696c6564",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3151:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																"typeString": "literal_string \"Withdrawal failed\""
															},
															"value": "Withdrawal failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																"typeString": "literal_string \"Withdrawal failed\""
															}
														],
														"id": 1280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3134:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3134:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "3134:37:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1286,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "3202:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3202:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1288,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "3211:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1285,
														"name": "FundsWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "3187:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3187:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "EmitStatement",
												"src": "3182:36:7"
											}
										]
									},
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "2608:77:7",
										"text": "@notice Owner (project team) withdraws funds after receiving enough votes"
									},
									"functionSelector": "24600fc3",
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1226,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1225,
												"name": "onlyOwner",
												"nameLocations": [
													"2724:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2724:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2724:9:7"
										},
										{
											"id": 1228,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1227,
												"name": "nonReentrant",
												"nameLocations": [
													"2734:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "2734:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2734:12:7"
										}
									],
									"name": "withdrawFunds",
									"nameLocation": "2699:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2712:2:7"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2747:0:7"
									},
									"scope": 1345,
									"src": "2690:535:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "3335:132:7",
										"statements": [
											{
												"assignments": [
													1299
												],
												"declarations": [
													{
														"constant": false,
														"id": 1299,
														"mutability": "mutable",
														"name": "requiredVotes",
														"nameLocation": "3353:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1311,
														"src": "3345:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1298,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3345:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1306,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1300,
																	"name": "fundsRaised",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "3370:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1301,
																	"name": "requiredVotesPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "3384:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3370:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1303,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3369:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3411:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "3369:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3345:71:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1307,
														"name": "totalVotes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "3433:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1308,
														"name": "requiredVotes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "3447:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3433:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1297,
												"id": 1310,
												"nodeType": "Return",
												"src": "3426:34:7"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "3231:46:7",
										"text": "@notice Check if sufficient votes received"
									},
									"functionSelector": "3e186253",
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasEnoughVotes",
									"nameLocation": "3291:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3305:2:7"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "3329:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3329:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3328:6:7"
									},
									"scope": 1345,
									"src": "3282:185:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "3583:128:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1319,
															"name": "isFundingActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "3601:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e64696e6720616c726561647920656e646564",
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3618:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cdbd805c137dcffd16d72dbea3cefe7001c5466d06748eaabed45649b8504a7e",
																"typeString": "literal_string \"Funding already ended\""
															},
															"value": "Funding already ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cdbd805c137dcffd16d72dbea3cefe7001c5466d06748eaabed45649b8504a7e",
																"typeString": "literal_string \"Funding already ended\""
															}
														],
														"id": 1318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3593:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3593:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "3593:49:7"
											},
											{
												"expression": {
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1323,
														"name": "isFundingActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "3652:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3670:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3652:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "3652:23:7"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1327,
														"name": "FundingEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "3690:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3690:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "EmitStatement",
												"src": "3685:19:7"
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "3473:56:7",
										"text": "@notice Ends funding period manually (only by owner)"
									},
									"functionSelector": "3fc5144e",
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1316,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1315,
												"name": "onlyOwner",
												"nameLocations": [
													"3573:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3573:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3573:9:7"
										}
									],
									"name": "endFundingManually",
									"nameLocation": "3543:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3561:2:7"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3583:0:7"
									},
									"scope": 1345,
									"src": "3534:177:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "3824:45:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1339,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3849:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DAICO_$1345",
																	"typeString": "contract DAICO"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_DAICO_$1345",
																	"typeString": "contract DAICO"
																}
															],
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3841:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1337,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3841:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3841:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3855:7:7",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3841:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1336,
												"id": 1342,
												"nodeType": "Return",
												"src": "3834:28:7"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "3717:43:7",
										"text": "@notice Retrieve contract's ETH balance"
									},
									"functionSelector": "8b7afe2e",
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractBalance",
									"nameLocation": "3774:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3789:2:7"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "3815:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3814:9:7"
									},
									"scope": 1345,
									"src": "3765:104:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1346,
							"src": "297:3574:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								876,
								885,
								1038,
								1044,
								1046,
								1050,
								1052
							]
						}
					],
					"src": "32:3840:7"
				},
				"id": 7
			}
		}
	}
}