{
	"id": "f0d64ec95374dd03db1aa528a9270527",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"D/DaedalusWallet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/// @title DaedalusWallet\n/// @notice A dynamic and optimized smart wallet that holds Ether and ERC20 tokens.\n/// The owner can add or remove additional authorized addresses, which are permitted to execute\n/// arbitrary calls and transfer funds on behalf of the wallet.\ncontract DaedalusWallet is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // Mapping to track additional authorized addresses.\n    mapping(address => bool) public authorized;\n\n    // --- Events ---\n    event AuthorizedAdded(address indexed account);\n    event AuthorizedRemoved(address indexed account);\n    event Executed(address indexed target, uint256 value, bytes data, bytes result);\n    event EtherWithdrawn(address indexed to, uint256 amount);\n    event TokenTransferred(address indexed token, address indexed to, uint256 amount);\n    event Received(address indexed sender, uint256 amount);\n\n    /// @notice Modifier to restrict function calls to the owner or authorized addresses.\n    modifier onlyAuthorized() {\n        require(msg.sender == owner() || authorized[msg.sender], \"Not authorized\");\n        _;\n    }\n\n    /// @notice Constructor sets the deployer as the initial owner.\n    constructor() Ownable(msg.sender) {\n        // Additional initialization can be added here if needed.\n    }\n\n    /// @notice Adds an address to the authorized list.\n    /// @param account The address to authorize.\n    function addAuthorized(address account) external onlyOwner {\n        require(account != address(0), \"Invalid address\");\n        require(!authorized[account], \"Already authorized\");\n        authorized[account] = true;\n        emit AuthorizedAdded(account);\n    }\n\n    /// @notice Removes an address from the authorized list.\n    /// @param account The address to remove.\n    function removeAuthorized(address account) external onlyOwner {\n        require(authorized[account], \"Address not authorized\");\n        authorized[account] = false;\n        emit AuthorizedRemoved(account);\n    }\n\n    /// @notice Executes an arbitrary call from the wallet.\n    /// @param target The target address to call.\n    /// @param value The amount of Ether (in wei) to send.\n    /// @param data The calldata for the call.\n    /// @return result The returned data from the call.\n    function executeCall(address target, uint256 value, bytes calldata data)\n        external\n        onlyAuthorized\n        nonReentrant\n        returns (bytes memory result)\n    {\n        require(target != address(0), \"Invalid target\");\n        (bool success, bytes memory res) = target.call{value: value}(data);\n        require(success, \"Call execution failed\");\n        emit Executed(target, value, data, res);\n        return res;\n    }\n\n    /// @notice Withdraws Ether from the wallet to the caller.\n    /// @param amount The amount of Ether (in wei) to withdraw.\n    function withdrawEther(uint256 amount) external onlyAuthorized nonReentrant {\n        require(address(this).balance >= amount, \"Insufficient balance\");\n        (bool success, ) = payable(msg.sender).call{value: amount}(\"\");\n        require(success, \"Ether withdrawal failed\");\n        emit EtherWithdrawn(msg.sender, amount);\n    }\n\n    /// @notice Transfers ERC20 tokens from the wallet to a specified address.\n    /// @param token The ERC20 token to transfer.\n    /// @param to The recipient address.\n    /// @param amount The amount of tokens to transfer.\n    function transferToken(IERC20 token, address to, uint256 amount) external onlyAuthorized nonReentrant {\n        require(address(token) != address(0), \"Invalid token address\");\n        require(to != address(0), \"Invalid recipient address\");\n        token.safeTransfer(to, amount);\n        emit TokenTransferred(address(token), to, amount);\n    }\n\n    /// @notice Fallback function to receive Ether.\n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n\n    /// @notice Fallback function for non-empty calldata.\n    fallback() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID OR SUB 0xD RJUMP 0x556F PUSH8 0xAEDC1EA4BF304AC0 CREATE 0xDB 0xC9 MOD 0xA7 0x27 PUSH15 0x479159E0692A32ED7F64736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "698:8692:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID OR SUB 0xD RJUMP 0x556F PUSH8 0xAEDC1EA4BF304AC0 CREATE 0xDB 0xC9 MOD 0xA7 0x27 PUSH15 0x479159E0692A32ED7F64736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "698:8692:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"D/DaedalusWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"D/DaedalusWallet.sol": {
				"DaedalusWallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AuthorizedAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AuthorizedRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EtherWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Received",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addAuthorized",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "authorized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeAuthorized",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawEther",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addAuthorized(address)": {
								"params": {
									"account": "The address to authorize."
								}
							},
							"executeCall(address,uint256,bytes)": {
								"params": {
									"data": "The calldata for the call.",
									"target": "The target address to call.",
									"value": "The amount of Ether (in wei) to send."
								},
								"returns": {
									"result": "The returned data from the call."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeAuthorized(address)": {
								"params": {
									"account": "The address to remove."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"transferToken(address,address,uint256)": {
								"params": {
									"amount": "The amount of tokens to transfer.",
									"to": "The recipient address.",
									"token": "The ERC20 token to transfer."
								}
							},
							"withdrawEther(uint256)": {
								"params": {
									"amount": "The amount of Ether (in wei) to withdraw."
								}
							}
						},
						"title": "DaedalusWallet",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"D/DaedalusWallet.sol\":568:4322  contract DaedalusWallet is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"D/DaedalusWallet.sol\":1480:1587  constructor() Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"D/DaedalusWallet.sol\":1502:1512  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"D/DaedalusWallet.sol\":568:4322  contract DaedalusWallet is Ownable, ReentrancyGuard {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_15:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_16:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_21\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_17:\n    /* \"#utility.yul\":328:352   */\n  tag_23\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_16\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_8:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_25\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"D/DaedalusWallet.sol\":568:4322  contract DaedalusWallet is Ownable, ReentrancyGuard {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"D/DaedalusWallet.sol\":568:4322  contract DaedalusWallet is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e5d4c49\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x9e5d4c49\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb9181611\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xcf1c316a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf5537ede\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x3bed33ce\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x485d7d94\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"D/DaedalusWallet.sol\":4146:4156  msg.sender */\n      caller\n        /* \"D/DaedalusWallet.sol\":4137:4168  Received(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874\n        /* \"D/DaedalusWallet.sol\":4158:4167  msg.value */\n      callvalue\n        /* \"D/DaedalusWallet.sol\":4137:4168  Received(msg.sender, msg.value) */\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"D/DaedalusWallet.sol\":568:4322  contract DaedalusWallet is Ownable, ReentrancyGuard {... */\n      stop\n    tag_2:\n        /* \"D/DaedalusWallet.sol\":4291:4301  msg.sender */\n      caller\n        /* \"D/DaedalusWallet.sol\":4282:4313  Received(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874\n        /* \"D/DaedalusWallet.sol\":4303:4312  msg.value */\n      callvalue\n        /* \"D/DaedalusWallet.sol\":4282:4313  Received(msg.sender, msg.value) */\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"D/DaedalusWallet.sol\":568:4322  contract DaedalusWallet is Ownable, ReentrancyGuard {... */\n      stop\n        /* \"D/DaedalusWallet.sol\":3130:3461  function withdrawEther(uint256 amount) external onlyAuthorized nonReentrant {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"D/DaedalusWallet.sol\":2072:2283  function removeAuthorized(address account) external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      revert(0x00, 0x00)\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      revert(0x00, 0x00)\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/DaedalusWallet.sol\":2561:2997  function executeCall(address target, uint256 value, bytes calldata data)... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/DaedalusWallet.sol\":716:758  mapping(address => bool) public authorized */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      revert(0x00, 0x00)\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/DaedalusWallet.sol\":1698:1959  function addAuthorized(address account) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      revert(0x00, 0x00)\n    tag_51:\n      pop\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      revert(0x00, 0x00)\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"D/DaedalusWallet.sol\":3693:4037  function transferToken(IERC20 token, address to, uint256 amount) external onlyAuthorized nonReentrant {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      revert(0x00, 0x00)\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"D/DaedalusWallet.sol\":3130:3461  function withdrawEther(uint256 amount) external onlyAuthorized nonReentrant {... */\n    tag_24:\n        /* \"D/DaedalusWallet.sol\":1336:1343  owner() */\n      tag_65\n        /* \"D/DaedalusWallet.sol\":1336:1341  owner */\n      tag_35\n        /* \"D/DaedalusWallet.sol\":1336:1343  owner() */\n      jump\t// in\n    tag_65:\n        /* \"D/DaedalusWallet.sol\":1322:1343  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/DaedalusWallet.sol\":1322:1332  msg.sender */\n      caller\n        /* \"D/DaedalusWallet.sol\":1322:1343  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"D/DaedalusWallet.sol\":1322:1369  msg.sender == owner() || authorized[msg.sender] */\n      dup1\n      tag_66\n      jumpi\n      pop\n        /* \"D/DaedalusWallet.sol\":1347:1357  authorized */\n      0x02\n        /* \"D/DaedalusWallet.sol\":1347:1369  authorized[msg.sender] */\n      0x00\n        /* \"D/DaedalusWallet.sol\":1358:1368  msg.sender */\n      caller\n        /* \"D/DaedalusWallet.sol\":1347:1369  authorized[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"D/DaedalusWallet.sol\":1322:1369  msg.sender == owner() || authorized[msg.sender] */\n    tag_66:\n        /* \"D/DaedalusWallet.sol\":1314:1388  require(msg.sender == owner() || authorized[msg.sender], \"Not authorized\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_71\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_71:\n        /* \"D/DaedalusWallet.sol\":3249:3255  amount */\n      dup1\n        /* \"D/DaedalusWallet.sol\":3224:3245  address(this).balance */\n      selfbalance\n        /* \"D/DaedalusWallet.sol\":3224:3255  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"D/DaedalusWallet.sol\":3216:3280  require(address(this).balance >= amount, \"Insufficient balance\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"D/DaedalusWallet.sol\":3291:3303  bool success */\n      0x00\n        /* \"D/DaedalusWallet.sol\":3317:3327  msg.sender */\n      caller\n        /* \"D/DaedalusWallet.sol\":3309:3333  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/DaedalusWallet.sol\":3341:3347  amount */\n      dup3\n        /* \"D/DaedalusWallet.sol\":3309:3352  payable(msg.sender).call{value: amount}(\"\") */\n      mload(0x40)\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_81\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_80)\n    tag_81:\n      0x60\n      swap2\n      pop\n    tag_80:\n      pop\n        /* \"D/DaedalusWallet.sol\":3290:3352  (bool success, ) = payable(msg.sender).call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"D/DaedalusWallet.sol\":3370:3377  success */\n      dup1\n        /* \"D/DaedalusWallet.sol\":3362:3405  require(success, \"Ether withdrawal failed\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"D/DaedalusWallet.sol\":3435:3445  msg.sender */\n      caller\n        /* \"D/DaedalusWallet.sol\":3420:3454  EtherWithdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x06097061aeda806b5e9cb4133d9899f332ff0913956567fc0f7ea15e3d19947c\n        /* \"D/DaedalusWallet.sol\":3447:3453  amount */\n      dup4\n        /* \"D/DaedalusWallet.sol\":3420:3454  EtherWithdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"D/DaedalusWallet.sol\":3206:3461  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_86\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_87\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_86:\n        /* \"D/DaedalusWallet.sol\":3130:3461  function withdrawEther(uint256 amount) external onlyAuthorized nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"D/DaedalusWallet.sol\":2072:2283  function removeAuthorized(address account) external onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_89:\n        /* \"D/DaedalusWallet.sol\":2152:2162  authorized */\n      0x02\n        /* \"D/DaedalusWallet.sol\":2152:2171  authorized[account] */\n      0x00\n        /* \"D/DaedalusWallet.sol\":2163:2170  account */\n      dup3\n        /* \"D/DaedalusWallet.sol\":2152:2171  authorized[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"D/DaedalusWallet.sol\":2144:2198  require(authorized[account], \"Address not authorized\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"D/DaedalusWallet.sol\":2230:2235  false */\n      0x00\n        /* \"D/DaedalusWallet.sol\":2208:2218  authorized */\n      0x02\n        /* \"D/DaedalusWallet.sol\":2208:2227  authorized[account] */\n      0x00\n        /* \"D/DaedalusWallet.sol\":2219:2226  account */\n      dup4\n        /* \"D/DaedalusWallet.sol\":2208:2227  authorized[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"D/DaedalusWallet.sol\":2208:2235  authorized[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"D/DaedalusWallet.sol\":2268:2275  account */\n      dup1\n        /* \"D/DaedalusWallet.sol\":2250:2276  AuthorizedRemoved(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0fafd0343e6c6f6985727574866da48938c918559eb9521cf9cc0d317ea0f7b4\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"D/DaedalusWallet.sol\":2072:2283  function removeAuthorized(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"D/DaedalusWallet.sol\":2561:2997  function executeCall(address target, uint256 value, bytes calldata data)... */\n    tag_42:\n        /* \"D/DaedalusWallet.sol\":2712:2731  bytes memory result */\n      0x60\n        /* \"D/DaedalusWallet.sol\":1336:1343  owner() */\n      tag_102\n        /* \"D/DaedalusWallet.sol\":1336:1341  owner */\n      tag_35\n        /* \"D/DaedalusWallet.sol\":1336:1343  owner() */\n      jump\t// in\n    tag_102:\n        /* \"D/DaedalusWallet.sol\":1322:1343  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/DaedalusWallet.sol\":1322:1332  msg.sender */\n      caller\n        /* \"D/DaedalusWallet.sol\":1322:1343  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"D/DaedalusWallet.sol\":1322:1369  msg.sender == owner() || authorized[msg.sender] */\n      dup1\n      tag_103\n      jumpi\n      pop\n        /* \"D/DaedalusWallet.sol\":1347:1357  authorized */\n      0x02\n        /* \"D/DaedalusWallet.sol\":1347:1369  authorized[msg.sender] */\n      0x00\n        /* \"D/DaedalusWallet.sol\":1358:1368  msg.sender */\n      caller\n        /* \"D/DaedalusWallet.sol\":1347:1369  authorized[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"D/DaedalusWallet.sol\":1322:1369  msg.sender == owner() || authorized[msg.sender] */\n    tag_103:\n        /* \"D/DaedalusWallet.sol\":1314:1388  require(msg.sender == owner() || authorized[msg.sender], \"Not authorized\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_69\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_107\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_107:\n        /* \"D/DaedalusWallet.sol\":2773:2774  0 */\n      0x00\n        /* \"D/DaedalusWallet.sol\":2755:2775  target != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/DaedalusWallet.sol\":2755:2761  target */\n      dup6\n        /* \"D/DaedalusWallet.sol\":2755:2775  target != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"D/DaedalusWallet.sol\":2747:2794  require(target != address(0), \"Invalid target\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"D/DaedalusWallet.sol\":2805:2817  bool success */\n      0x00\n        /* \"D/DaedalusWallet.sol\":2819:2835  bytes memory res */\n      0x00\n        /* \"D/DaedalusWallet.sol\":2839:2845  target */\n      dup7\n        /* \"D/DaedalusWallet.sol\":2839:2850  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/DaedalusWallet.sol\":2858:2863  value */\n      dup7\n        /* \"D/DaedalusWallet.sol\":2865:2869  data */\n      dup7\n      dup7\n        /* \"D/DaedalusWallet.sol\":2839:2870  target.call{value: value}(data) */\n      mload(0x40)\n      tag_112\n      swap3\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_116\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_115)\n    tag_116:\n      0x60\n      swap2\n      pop\n    tag_115:\n      pop\n        /* \"D/DaedalusWallet.sol\":2804:2870  (bool success, bytes memory res) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"D/DaedalusWallet.sol\":2888:2895  success */\n      dup2\n        /* \"D/DaedalusWallet.sol\":2880:2921  require(success, \"Call execution failed\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"D/DaedalusWallet.sol\":2945:2951  target */\n      dup7\n        /* \"D/DaedalusWallet.sol\":2936:2970  Executed(target, value, data, res) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe39b605d485d947e52b62c3b5028a14d5277db44425263c74171a85707154334\n        /* \"D/DaedalusWallet.sol\":2953:2958  value */\n      dup8\n        /* \"D/DaedalusWallet.sol\":2960:2964  data */\n      dup8\n      dup8\n        /* \"D/DaedalusWallet.sol\":2966:2969  res */\n      dup6\n        /* \"D/DaedalusWallet.sol\":2936:2970  Executed(target, value, data, res) */\n      mload(0x40)\n      tag_120\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"D/DaedalusWallet.sol\":2987:2990  res */\n      dup1\n        /* \"D/DaedalusWallet.sol\":2980:2990  return res */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_122\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_87\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_122:\n        /* \"D/DaedalusWallet.sol\":2561:2997  function executeCall(address target, uint256 value, bytes calldata data)... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"D/DaedalusWallet.sol\":716:758  mapping(address => bool) public authorized */\n    tag_48:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"D/DaedalusWallet.sol\":1698:1959  function addAuthorized(address account) external onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_124:\n        /* \"D/DaedalusWallet.sol\":1794:1795  0 */\n      0x00\n        /* \"D/DaedalusWallet.sol\":1775:1796  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/DaedalusWallet.sol\":1775:1782  account */\n      dup2\n        /* \"D/DaedalusWallet.sol\":1775:1796  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"D/DaedalusWallet.sol\":1767:1816  require(account != address(0), \"Invalid address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"D/DaedalusWallet.sol\":1835:1845  authorized */\n      0x02\n        /* \"D/DaedalusWallet.sol\":1835:1854  authorized[account] */\n      0x00\n        /* \"D/DaedalusWallet.sol\":1846:1853  account */\n      dup3\n        /* \"D/DaedalusWallet.sol\":1835:1854  authorized[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"D/DaedalusWallet.sol\":1834:1854  !authorized[account] */\n      iszero\n        /* \"D/DaedalusWallet.sol\":1826:1877  require(!authorized[account], \"Already authorized\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"D/DaedalusWallet.sol\":1909:1913  true */\n      0x01\n        /* \"D/DaedalusWallet.sol\":1887:1897  authorized */\n      0x02\n        /* \"D/DaedalusWallet.sol\":1887:1906  authorized[account] */\n      0x00\n        /* \"D/DaedalusWallet.sol\":1898:1905  account */\n      dup4\n        /* \"D/DaedalusWallet.sol\":1887:1906  authorized[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"D/DaedalusWallet.sol\":1887:1913  authorized[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"D/DaedalusWallet.sol\":1944:1951  account */\n      dup1\n        /* \"D/DaedalusWallet.sol\":1928:1952  AuthorizedAdded(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd10d14f6ac19e913d4edbb11fd30661531e2ccd0d23f571e9b224f001f0dd06\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"D/DaedalusWallet.sol\":1698:1959  function addAuthorized(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"D/DaedalusWallet.sol\":3693:4037  function transferToken(IERC20 token, address to, uint256 amount) external onlyAuthorized nonReentrant {... */\n    tag_63:\n        /* \"D/DaedalusWallet.sol\":1336:1343  owner() */\n      tag_139\n        /* \"D/DaedalusWallet.sol\":1336:1341  owner */\n      tag_35\n        /* \"D/DaedalusWallet.sol\":1336:1343  owner() */\n      jump\t// in\n    tag_139:\n        /* \"D/DaedalusWallet.sol\":1322:1343  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/DaedalusWallet.sol\":1322:1332  msg.sender */\n      caller\n        /* \"D/DaedalusWallet.sol\":1322:1343  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"D/DaedalusWallet.sol\":1322:1369  msg.sender == owner() || authorized[msg.sender] */\n      dup1\n      tag_140\n      jumpi\n      pop\n        /* \"D/DaedalusWallet.sol\":1347:1357  authorized */\n      0x02\n        /* \"D/DaedalusWallet.sol\":1347:1369  authorized[msg.sender] */\n      0x00\n        /* \"D/DaedalusWallet.sol\":1358:1368  msg.sender */\n      caller\n        /* \"D/DaedalusWallet.sol\":1347:1369  authorized[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"D/DaedalusWallet.sol\":1322:1369  msg.sender == owner() || authorized[msg.sender] */\n    tag_140:\n        /* \"D/DaedalusWallet.sol\":1314:1388  require(msg.sender == owner() || authorized[msg.sender], \"Not authorized\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_69\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_144\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_144:\n        /* \"D/DaedalusWallet.sol\":3839:3840  0 */\n      0x00\n        /* \"D/DaedalusWallet.sol\":3813:3841  address(token) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/DaedalusWallet.sol\":3821:3826  token */\n      dup4\n        /* \"D/DaedalusWallet.sol\":3813:3841  address(token) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"D/DaedalusWallet.sol\":3805:3867  require(address(token) != address(0), \"Invalid token address\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"D/DaedalusWallet.sol\":3899:3900  0 */\n      0x00\n        /* \"D/DaedalusWallet.sol\":3885:3901  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/DaedalusWallet.sol\":3885:3887  to */\n      dup3\n        /* \"D/DaedalusWallet.sol\":3885:3901  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"D/DaedalusWallet.sol\":3877:3931  require(to != address(0), \"Invalid recipient address\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"D/DaedalusWallet.sol\":3941:3971  token.safeTransfer(to, amount) */\n      tag_152\n        /* \"D/DaedalusWallet.sol\":3960:3962  to */\n      dup3\n        /* \"D/DaedalusWallet.sol\":3964:3970  amount */\n      dup3\n        /* \"D/DaedalusWallet.sol\":3941:3946  token */\n      dup6\n        /* \"D/DaedalusWallet.sol\":3941:3959  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_153\n      swap1\n        /* \"D/DaedalusWallet.sol\":3941:3971  token.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"D/DaedalusWallet.sol\":4019:4021  to */\n      dup2\n        /* \"D/DaedalusWallet.sol\":3986:4030  TokenTransferred(address(token), to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/DaedalusWallet.sol\":4011:4016  token */\n      dup4\n        /* \"D/DaedalusWallet.sol\":3986:4030  TokenTransferred(address(token), to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9c8515990fd8c61431c4ac8db9b81475f90c292a1dda77731e56c22e64fc7643\n        /* \"D/DaedalusWallet.sol\":4023:4029  amount */\n      dup4\n        /* \"D/DaedalusWallet.sol\":3986:4030  TokenTransferred(address(token), to, amount) */\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_155\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_87\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_155:\n        /* \"D/DaedalusWallet.sol\":3693:4037  function transferToken(IERC20 token, address to, uint256 amount) external onlyAuthorized nonReentrant {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_176\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_178)\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_181:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_182:\n        /* \"#utility.yul\":177:201   */\n      tag_239\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_181\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_16:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_241\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_182\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_184:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      0x00\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":646:763   */\n    tag_185:\n        /* \"#utility.yul\":755:756   */\n      0x00\n        /* \"#utility.yul\":752:753   */\n      0x00\n        /* \"#utility.yul\":745:757   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_186:\n        /* \"#utility.yul\":842:866   */\n      tag_246\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_181\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      0x00\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_247:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_187:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_249\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_186\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_23:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_252\n      tag_184\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":1118:1237   */\n    tag_251:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_253\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_187\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_188:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_189:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_256\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_188\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_190:\n        /* \"#utility.yul\":1684:1708   */\n      tag_258\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_189\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_259:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_191:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_261\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_190\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_28:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_264\n      tag_184\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1960:2079   */\n    tag_263:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_265\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_191\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2337   */\n    tag_192:\n        /* \"#utility.yul\":2306:2330   */\n      tag_267\n        /* \"#utility.yul\":2324:2329   */\n      dup2\n        /* \"#utility.yul\":2306:2330   */\n      tag_189\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2301:2304   */\n      dup3\n        /* \"#utility.yul\":2294:2331   */\n      mstore\n        /* \"#utility.yul\":2219:2337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2343:2565   */\n    tag_37:\n        /* \"#utility.yul\":2436:2440   */\n      0x00\n        /* \"#utility.yul\":2474:2476   */\n      0x20\n        /* \"#utility.yul\":2463:2472   */\n      dup3\n        /* \"#utility.yul\":2459:2477   */\n      add\n        /* \"#utility.yul\":2451:2477   */\n      swap1\n      pop\n        /* \"#utility.yul\":2487:2558   */\n      tag_269\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2544:2553   */\n      dup4\n        /* \"#utility.yul\":2540:2557   */\n      add\n        /* \"#utility.yul\":2531:2537   */\n      dup5\n        /* \"#utility.yul\":2487:2558   */\n      tag_192\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2343:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2688   */\n    tag_193:\n        /* \"#utility.yul\":2680:2681   */\n      0x00\n        /* \"#utility.yul\":2677:2678   */\n      0x00\n        /* \"#utility.yul\":2670:2682   */\n      revert\n        /* \"#utility.yul\":2694:2811   */\n    tag_194:\n        /* \"#utility.yul\":2803:2804   */\n      0x00\n        /* \"#utility.yul\":2800:2801   */\n      0x00\n        /* \"#utility.yul\":2793:2805   */\n      revert\n        /* \"#utility.yul\":2817:2934   */\n    tag_195:\n        /* \"#utility.yul\":2926:2927   */\n      0x00\n        /* \"#utility.yul\":2923:2924   */\n      0x00\n        /* \"#utility.yul\":2916:2928   */\n      revert\n        /* \"#utility.yul\":2953:3505   */\n    tag_196:\n        /* \"#utility.yul\":3010:3018   */\n      0x00\n        /* \"#utility.yul\":3020:3026   */\n      0x00\n        /* \"#utility.yul\":3070:3073   */\n      dup4\n        /* \"#utility.yul\":3063:3067   */\n      0x1f\n        /* \"#utility.yul\":3055:3061   */\n      dup5\n        /* \"#utility.yul\":3051:3068   */\n      add\n        /* \"#utility.yul\":3047:3074   */\n      slt\n        /* \"#utility.yul\":3037:3159   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":3078:3157   */\n      tag_275\n      tag_193\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":3037:3159   */\n    tag_274:\n        /* \"#utility.yul\":3191:3197   */\n      dup3\n        /* \"#utility.yul\":3178:3198   */\n      calldataload\n        /* \"#utility.yul\":3168:3198   */\n      swap1\n      pop\n        /* \"#utility.yul\":3221:3239   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3213:3219   */\n      dup2\n        /* \"#utility.yul\":3210:3240   */\n      gt\n        /* \"#utility.yul\":3207:3324   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":3243:3322   */\n      tag_277\n      tag_194\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":3207:3324   */\n    tag_276:\n        /* \"#utility.yul\":3357:3361   */\n      0x20\n        /* \"#utility.yul\":3349:3355   */\n      dup4\n        /* \"#utility.yul\":3345:3362   */\n      add\n        /* \"#utility.yul\":3333:3362   */\n      swap2\n      pop\n        /* \"#utility.yul\":3411:3414   */\n      dup4\n        /* \"#utility.yul\":3403:3407   */\n      0x01\n        /* \"#utility.yul\":3395:3401   */\n      dup3\n        /* \"#utility.yul\":3391:3408   */\n      mul\n        /* \"#utility.yul\":3381:3389   */\n      dup4\n        /* \"#utility.yul\":3377:3409   */\n      add\n        /* \"#utility.yul\":3374:3415   */\n      gt\n        /* \"#utility.yul\":3371:3499   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":3418:3497   */\n      tag_279\n      tag_195\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":3371:3499   */\n    tag_278:\n        /* \"#utility.yul\":2953:3505   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3511:4328   */\n    tag_41:\n        /* \"#utility.yul\":3599:3605   */\n      0x00\n        /* \"#utility.yul\":3607:3613   */\n      0x00\n        /* \"#utility.yul\":3615:3621   */\n      0x00\n        /* \"#utility.yul\":3623:3629   */\n      0x00\n        /* \"#utility.yul\":3672:3674   */\n      0x60\n        /* \"#utility.yul\":3660:3669   */\n      dup6\n        /* \"#utility.yul\":3651:3658   */\n      dup8\n        /* \"#utility.yul\":3647:3670   */\n      sub\n        /* \"#utility.yul\":3643:3675   */\n      slt\n        /* \"#utility.yul\":3640:3759   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":3678:3757   */\n      tag_282\n      tag_184\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":3640:3759   */\n    tag_281:\n        /* \"#utility.yul\":3798:3799   */\n      0x00\n        /* \"#utility.yul\":3823:3876   */\n      tag_283\n        /* \"#utility.yul\":3868:3875   */\n      dup8\n        /* \"#utility.yul\":3859:3865   */\n      dup3\n        /* \"#utility.yul\":3848:3857   */\n      dup9\n        /* \"#utility.yul\":3844:3866   */\n      add\n        /* \"#utility.yul\":3823:3876   */\n      tag_191\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3813:3876   */\n      swap5\n      pop\n        /* \"#utility.yul\":3769:3886   */\n      pop\n        /* \"#utility.yul\":3925:3927   */\n      0x20\n        /* \"#utility.yul\":3951:4004   */\n      tag_284\n        /* \"#utility.yul\":3996:4003   */\n      dup8\n        /* \"#utility.yul\":3987:3993   */\n      dup3\n        /* \"#utility.yul\":3976:3985   */\n      dup9\n        /* \"#utility.yul\":3972:3994   */\n      add\n        /* \"#utility.yul\":3951:4004   */\n      tag_187\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3941:4004   */\n      swap4\n      pop\n        /* \"#utility.yul\":3896:4014   */\n      pop\n        /* \"#utility.yul\":4081:4083   */\n      0x40\n        /* \"#utility.yul\":4070:4079   */\n      dup6\n        /* \"#utility.yul\":4066:4084   */\n      add\n        /* \"#utility.yul\":4053:4085   */\n      calldataload\n        /* \"#utility.yul\":4112:4130   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4104:4110   */\n      dup2\n        /* \"#utility.yul\":4101:4131   */\n      gt\n        /* \"#utility.yul\":4098:4215   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":4134:4213   */\n      tag_286\n      tag_185\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4098:4215   */\n    tag_285:\n        /* \"#utility.yul\":4247:4311   */\n      tag_287\n        /* \"#utility.yul\":4303:4310   */\n      dup8\n        /* \"#utility.yul\":4294:4300   */\n      dup3\n        /* \"#utility.yul\":4283:4292   */\n      dup9\n        /* \"#utility.yul\":4279:4301   */\n      add\n        /* \"#utility.yul\":4247:4311   */\n      tag_196\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":4229:4311   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":4024:4321   */\n      pop\n        /* \"#utility.yul\":3511:4328   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4334:4432   */\n    tag_197:\n        /* \"#utility.yul\":4385:4391   */\n      0x00\n        /* \"#utility.yul\":4419:4424   */\n      dup2\n        /* \"#utility.yul\":4413:4425   */\n      mload\n        /* \"#utility.yul\":4403:4425   */\n      swap1\n      pop\n        /* \"#utility.yul\":4334:4432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4438:4606   */\n    tag_198:\n        /* \"#utility.yul\":4521:4532   */\n      0x00\n        /* \"#utility.yul\":4555:4561   */\n      dup3\n        /* \"#utility.yul\":4550:4553   */\n      dup3\n        /* \"#utility.yul\":4543:4562   */\n      mstore\n        /* \"#utility.yul\":4595:4599   */\n      0x20\n        /* \"#utility.yul\":4590:4593   */\n      dup3\n        /* \"#utility.yul\":4586:4600   */\n      add\n        /* \"#utility.yul\":4571:4600   */\n      swap1\n      pop\n        /* \"#utility.yul\":4438:4606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4612:4751   */\n    tag_199:\n        /* \"#utility.yul\":4701:4707   */\n      dup3\n        /* \"#utility.yul\":4696:4699   */\n      dup2\n        /* \"#utility.yul\":4691:4694   */\n      dup4\n        /* \"#utility.yul\":4685:4708   */\n      mcopy\n        /* \"#utility.yul\":4742:4743   */\n      0x00\n        /* \"#utility.yul\":4733:4739   */\n      dup4\n        /* \"#utility.yul\":4728:4731   */\n      dup4\n        /* \"#utility.yul\":4724:4740   */\n      add\n        /* \"#utility.yul\":4717:4744   */\n      mstore\n        /* \"#utility.yul\":4612:4751   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4757:4859   */\n    tag_200:\n        /* \"#utility.yul\":4798:4804   */\n      0x00\n        /* \"#utility.yul\":4849:4851   */\n      0x1f\n        /* \"#utility.yul\":4845:4852   */\n      not\n        /* \"#utility.yul\":4840:4842   */\n      0x1f\n        /* \"#utility.yul\":4833:4838   */\n      dup4\n        /* \"#utility.yul\":4829:4843   */\n      add\n        /* \"#utility.yul\":4825:4853   */\n      and\n        /* \"#utility.yul\":4815:4853   */\n      swap1\n      pop\n        /* \"#utility.yul\":4757:4859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4865:5238   */\n    tag_201:\n        /* \"#utility.yul\":4951:4954   */\n      0x00\n        /* \"#utility.yul\":4979:5017   */\n      tag_293\n        /* \"#utility.yul\":5011:5016   */\n      dup3\n        /* \"#utility.yul\":4979:5017   */\n      tag_197\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5033:5103   */\n      tag_294\n        /* \"#utility.yul\":5096:5102   */\n      dup2\n        /* \"#utility.yul\":5091:5094   */\n      dup6\n        /* \"#utility.yul\":5033:5103   */\n      tag_198\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":5026:5103   */\n      swap4\n      pop\n        /* \"#utility.yul\":5112:5177   */\n      tag_295\n        /* \"#utility.yul\":5170:5176   */\n      dup2\n        /* \"#utility.yul\":5165:5168   */\n      dup6\n        /* \"#utility.yul\":5158:5162   */\n      0x20\n        /* \"#utility.yul\":5151:5156   */\n      dup7\n        /* \"#utility.yul\":5147:5163   */\n      add\n        /* \"#utility.yul\":5112:5177   */\n      tag_199\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5202:5231   */\n      tag_296\n        /* \"#utility.yul\":5224:5230   */\n      dup2\n        /* \"#utility.yul\":5202:5231   */\n      tag_200\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":5197:5200   */\n      dup5\n        /* \"#utility.yul\":5193:5232   */\n      add\n        /* \"#utility.yul\":5186:5232   */\n      swap2\n      pop\n        /* \"#utility.yul\":4955:5238   */\n      pop\n        /* \"#utility.yul\":4865:5238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5244:5553   */\n    tag_44:\n        /* \"#utility.yul\":5355:5359   */\n      0x00\n        /* \"#utility.yul\":5393:5395   */\n      0x20\n        /* \"#utility.yul\":5382:5391   */\n      dup3\n        /* \"#utility.yul\":5378:5396   */\n      add\n        /* \"#utility.yul\":5370:5396   */\n      swap1\n      pop\n        /* \"#utility.yul\":5442:5451   */\n      dup2\n        /* \"#utility.yul\":5436:5440   */\n      dup2\n        /* \"#utility.yul\":5432:5452   */\n      sub\n        /* \"#utility.yul\":5428:5429   */\n      0x00\n        /* \"#utility.yul\":5417:5426   */\n      dup4\n        /* \"#utility.yul\":5413:5430   */\n      add\n        /* \"#utility.yul\":5406:5453   */\n      mstore\n        /* \"#utility.yul\":5470:5546   */\n      tag_298\n        /* \"#utility.yul\":5541:5545   */\n      dup2\n        /* \"#utility.yul\":5532:5538   */\n      dup5\n        /* \"#utility.yul\":5470:5546   */\n      tag_201\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5462:5546   */\n      swap1\n      pop\n        /* \"#utility.yul\":5244:5553   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5559:5649   */\n    tag_202:\n        /* \"#utility.yul\":5593:5600   */\n      0x00\n        /* \"#utility.yul\":5636:5641   */\n      dup2\n        /* \"#utility.yul\":5629:5642   */\n      iszero\n        /* \"#utility.yul\":5622:5643   */\n      iszero\n        /* \"#utility.yul\":5611:5643   */\n      swap1\n      pop\n        /* \"#utility.yul\":5559:5649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5655:5764   */\n    tag_203:\n        /* \"#utility.yul\":5736:5757   */\n      tag_301\n        /* \"#utility.yul\":5751:5756   */\n      dup2\n        /* \"#utility.yul\":5736:5757   */\n      tag_202\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":5731:5734   */\n      dup3\n        /* \"#utility.yul\":5724:5758   */\n      mstore\n        /* \"#utility.yul\":5655:5764   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5770:5980   */\n    tag_50:\n        /* \"#utility.yul\":5857:5861   */\n      0x00\n        /* \"#utility.yul\":5895:5897   */\n      0x20\n        /* \"#utility.yul\":5884:5893   */\n      dup3\n        /* \"#utility.yul\":5880:5898   */\n      add\n        /* \"#utility.yul\":5872:5898   */\n      swap1\n      pop\n        /* \"#utility.yul\":5908:5973   */\n      tag_303\n        /* \"#utility.yul\":5970:5971   */\n      0x00\n        /* \"#utility.yul\":5959:5968   */\n      dup4\n        /* \"#utility.yul\":5955:5972   */\n      add\n        /* \"#utility.yul\":5946:5952   */\n      dup5\n        /* \"#utility.yul\":5908:5973   */\n      tag_203\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":5770:5980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5986:6096   */\n    tag_204:\n        /* \"#utility.yul\":6037:6044   */\n      0x00\n        /* \"#utility.yul\":6066:6090   */\n      tag_305\n        /* \"#utility.yul\":6084:6089   */\n      dup3\n        /* \"#utility.yul\":6066:6090   */\n      tag_189\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":6055:6090   */\n      swap1\n      pop\n        /* \"#utility.yul\":5986:6096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6102:6252   */\n    tag_205:\n        /* \"#utility.yul\":6189:6227   */\n      tag_307\n        /* \"#utility.yul\":6221:6226   */\n      dup2\n        /* \"#utility.yul\":6189:6227   */\n      tag_204\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":6182:6187   */\n      dup2\n        /* \"#utility.yul\":6179:6228   */\n      eq\n        /* \"#utility.yul\":6169:6246   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":6242:6243   */\n      0x00\n        /* \"#utility.yul\":6239:6240   */\n      0x00\n        /* \"#utility.yul\":6232:6244   */\n      revert\n        /* \"#utility.yul\":6169:6246   */\n    tag_308:\n        /* \"#utility.yul\":6102:6252   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6258:6425   */\n    tag_206:\n        /* \"#utility.yul\":6318:6323   */\n      0x00\n        /* \"#utility.yul\":6356:6362   */\n      dup2\n        /* \"#utility.yul\":6343:6363   */\n      calldataload\n        /* \"#utility.yul\":6334:6363   */\n      swap1\n      pop\n        /* \"#utility.yul\":6372:6419   */\n      tag_310\n        /* \"#utility.yul\":6413:6418   */\n      dup2\n        /* \"#utility.yul\":6372:6419   */\n      tag_205\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":6258:6425   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6431:7078   */\n    tag_62:\n        /* \"#utility.yul\":6522:6528   */\n      0x00\n        /* \"#utility.yul\":6530:6536   */\n      0x00\n        /* \"#utility.yul\":6538:6544   */\n      0x00\n        /* \"#utility.yul\":6587:6589   */\n      0x60\n        /* \"#utility.yul\":6575:6584   */\n      dup5\n        /* \"#utility.yul\":6566:6573   */\n      dup7\n        /* \"#utility.yul\":6562:6585   */\n      sub\n        /* \"#utility.yul\":6558:6590   */\n      slt\n        /* \"#utility.yul\":6555:6674   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":6593:6672   */\n      tag_313\n      tag_184\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6555:6674   */\n    tag_312:\n        /* \"#utility.yul\":6713:6714   */\n      0x00\n        /* \"#utility.yul\":6738:6805   */\n      tag_314\n        /* \"#utility.yul\":6797:6804   */\n      dup7\n        /* \"#utility.yul\":6788:6794   */\n      dup3\n        /* \"#utility.yul\":6777:6786   */\n      dup8\n        /* \"#utility.yul\":6773:6795   */\n      add\n        /* \"#utility.yul\":6738:6805   */\n      tag_206\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":6728:6805   */\n      swap4\n      pop\n        /* \"#utility.yul\":6684:6815   */\n      pop\n        /* \"#utility.yul\":6854:6856   */\n      0x20\n        /* \"#utility.yul\":6880:6933   */\n      tag_315\n        /* \"#utility.yul\":6925:6932   */\n      dup7\n        /* \"#utility.yul\":6916:6922   */\n      dup3\n        /* \"#utility.yul\":6905:6914   */\n      dup8\n        /* \"#utility.yul\":6901:6923   */\n      add\n        /* \"#utility.yul\":6880:6933   */\n      tag_191\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":6870:6933   */\n      swap3\n      pop\n        /* \"#utility.yul\":6825:6943   */\n      pop\n        /* \"#utility.yul\":6982:6984   */\n      0x40\n        /* \"#utility.yul\":7008:7061   */\n      tag_316\n        /* \"#utility.yul\":7053:7060   */\n      dup7\n        /* \"#utility.yul\":7044:7050   */\n      dup3\n        /* \"#utility.yul\":7033:7042   */\n      dup8\n        /* \"#utility.yul\":7029:7051   */\n      add\n        /* \"#utility.yul\":7008:7061   */\n      tag_187\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6998:7061   */\n      swap2\n      pop\n        /* \"#utility.yul\":6953:7071   */\n      pop\n        /* \"#utility.yul\":6431:7078   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7084:7253   */\n    tag_207:\n        /* \"#utility.yul\":7168:7179   */\n      0x00\n        /* \"#utility.yul\":7202:7208   */\n      dup3\n        /* \"#utility.yul\":7197:7200   */\n      dup3\n        /* \"#utility.yul\":7190:7209   */\n      mstore\n        /* \"#utility.yul\":7242:7246   */\n      0x20\n        /* \"#utility.yul\":7237:7240   */\n      dup3\n        /* \"#utility.yul\":7233:7247   */\n      add\n        /* \"#utility.yul\":7218:7247   */\n      swap1\n      pop\n        /* \"#utility.yul\":7084:7253   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7259:7423   */\n    tag_208:\n        /* \"#utility.yul\":7399:7415   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":7395:7396   */\n      0x00\n        /* \"#utility.yul\":7387:7393   */\n      dup3\n        /* \"#utility.yul\":7383:7397   */\n      add\n        /* \"#utility.yul\":7376:7416   */\n      mstore\n        /* \"#utility.yul\":7259:7423   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7429:7795   */\n    tag_209:\n        /* \"#utility.yul\":7571:7574   */\n      0x00\n        /* \"#utility.yul\":7592:7659   */\n      tag_320\n        /* \"#utility.yul\":7656:7658   */\n      0x0e\n        /* \"#utility.yul\":7651:7654   */\n      dup4\n        /* \"#utility.yul\":7592:7659   */\n      tag_207\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":7585:7659   */\n      swap2\n      pop\n        /* \"#utility.yul\":7668:7761   */\n      tag_321\n        /* \"#utility.yul\":7757:7760   */\n      dup3\n        /* \"#utility.yul\":7668:7761   */\n      tag_208\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":7786:7788   */\n      0x20\n        /* \"#utility.yul\":7781:7784   */\n      dup3\n        /* \"#utility.yul\":7777:7789   */\n      add\n        /* \"#utility.yul\":7770:7789   */\n      swap1\n      pop\n        /* \"#utility.yul\":7429:7795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7801:8220   */\n    tag_69:\n        /* \"#utility.yul\":7967:7971   */\n      0x00\n        /* \"#utility.yul\":8005:8007   */\n      0x20\n        /* \"#utility.yul\":7994:8003   */\n      dup3\n        /* \"#utility.yul\":7990:8008   */\n      add\n        /* \"#utility.yul\":7982:8008   */\n      swap1\n      pop\n        /* \"#utility.yul\":8054:8063   */\n      dup2\n        /* \"#utility.yul\":8048:8052   */\n      dup2\n        /* \"#utility.yul\":8044:8064   */\n      sub\n        /* \"#utility.yul\":8040:8041   */\n      0x00\n        /* \"#utility.yul\":8029:8038   */\n      dup4\n        /* \"#utility.yul\":8025:8042   */\n      add\n        /* \"#utility.yul\":8018:8065   */\n      mstore\n        /* \"#utility.yul\":8082:8213   */\n      tag_323\n        /* \"#utility.yul\":8208:8212   */\n      dup2\n        /* \"#utility.yul\":8082:8213   */\n      tag_209\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":8074:8213   */\n      swap1\n      pop\n        /* \"#utility.yul\":7801:8220   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8226:8396   */\n    tag_210:\n        /* \"#utility.yul\":8366:8388   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":8362:8363   */\n      0x00\n        /* \"#utility.yul\":8354:8360   */\n      dup3\n        /* \"#utility.yul\":8350:8364   */\n      add\n        /* \"#utility.yul\":8343:8389   */\n      mstore\n        /* \"#utility.yul\":8226:8396   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8402:8768   */\n    tag_211:\n        /* \"#utility.yul\":8544:8547   */\n      0x00\n        /* \"#utility.yul\":8565:8632   */\n      tag_326\n        /* \"#utility.yul\":8629:8631   */\n      0x14\n        /* \"#utility.yul\":8624:8627   */\n      dup4\n        /* \"#utility.yul\":8565:8632   */\n      tag_207\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":8558:8632   */\n      swap2\n      pop\n        /* \"#utility.yul\":8641:8734   */\n      tag_327\n        /* \"#utility.yul\":8730:8733   */\n      dup3\n        /* \"#utility.yul\":8641:8734   */\n      tag_210\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":8759:8761   */\n      0x20\n        /* \"#utility.yul\":8754:8757   */\n      dup3\n        /* \"#utility.yul\":8750:8762   */\n      add\n        /* \"#utility.yul\":8743:8762   */\n      swap1\n      pop\n        /* \"#utility.yul\":8402:8768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8774:9193   */\n    tag_76:\n        /* \"#utility.yul\":8940:8944   */\n      0x00\n        /* \"#utility.yul\":8978:8980   */\n      0x20\n        /* \"#utility.yul\":8967:8976   */\n      dup3\n        /* \"#utility.yul\":8963:8981   */\n      add\n        /* \"#utility.yul\":8955:8981   */\n      swap1\n      pop\n        /* \"#utility.yul\":9027:9036   */\n      dup2\n        /* \"#utility.yul\":9021:9025   */\n      dup2\n        /* \"#utility.yul\":9017:9037   */\n      sub\n        /* \"#utility.yul\":9013:9014   */\n      0x00\n        /* \"#utility.yul\":9002:9011   */\n      dup4\n        /* \"#utility.yul\":8998:9015   */\n      add\n        /* \"#utility.yul\":8991:9038   */\n      mstore\n        /* \"#utility.yul\":9055:9186   */\n      tag_329\n        /* \"#utility.yul\":9181:9185   */\n      dup2\n        /* \"#utility.yul\":9055:9186   */\n      tag_211\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9047:9186   */\n      swap1\n      pop\n        /* \"#utility.yul\":8774:9193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9199:9346   */\n    tag_212:\n        /* \"#utility.yul\":9300:9311   */\n      0x00\n        /* \"#utility.yul\":9337:9340   */\n      dup2\n        /* \"#utility.yul\":9322:9340   */\n      swap1\n      pop\n        /* \"#utility.yul\":9199:9346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9352:9466   */\n    tag_213:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9472:9870   */\n    tag_214:\n        /* \"#utility.yul\":9631:9634   */\n      0x00\n        /* \"#utility.yul\":9652:9735   */\n      tag_333\n        /* \"#utility.yul\":9733:9734   */\n      0x00\n        /* \"#utility.yul\":9728:9731   */\n      dup4\n        /* \"#utility.yul\":9652:9735   */\n      tag_212\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":9645:9735   */\n      swap2\n      pop\n        /* \"#utility.yul\":9744:9837   */\n      tag_334\n        /* \"#utility.yul\":9833:9836   */\n      dup3\n        /* \"#utility.yul\":9744:9837   */\n      tag_213\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":9862:9863   */\n      0x00\n        /* \"#utility.yul\":9857:9860   */\n      dup3\n        /* \"#utility.yul\":9853:9864   */\n      add\n        /* \"#utility.yul\":9846:9864   */\n      swap1\n      pop\n        /* \"#utility.yul\":9472:9870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9876:10255   */\n    tag_78:\n        /* \"#utility.yul\":10060:10063   */\n      0x00\n        /* \"#utility.yul\":10082:10229   */\n      tag_336\n        /* \"#utility.yul\":10225:10228   */\n      dup3\n        /* \"#utility.yul\":10082:10229   */\n      tag_214\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":10075:10229   */\n      swap2\n      pop\n        /* \"#utility.yul\":10246:10249   */\n      dup2\n        /* \"#utility.yul\":10239:10249   */\n      swap1\n      pop\n        /* \"#utility.yul\":9876:10255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10261:10434   */\n    tag_215:\n        /* \"#utility.yul\":10401:10426   */\n      0x4574686572207769746864726177616c206661696c6564000000000000000000\n        /* \"#utility.yul\":10397:10398   */\n      0x00\n        /* \"#utility.yul\":10389:10395   */\n      dup3\n        /* \"#utility.yul\":10385:10399   */\n      add\n        /* \"#utility.yul\":10378:10427   */\n      mstore\n        /* \"#utility.yul\":10261:10434   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10440:10806   */\n    tag_216:\n        /* \"#utility.yul\":10582:10585   */\n      0x00\n        /* \"#utility.yul\":10603:10670   */\n      tag_339\n        /* \"#utility.yul\":10667:10669   */\n      0x17\n        /* \"#utility.yul\":10662:10665   */\n      dup4\n        /* \"#utility.yul\":10603:10670   */\n      tag_207\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":10596:10670   */\n      swap2\n      pop\n        /* \"#utility.yul\":10679:10772   */\n      tag_340\n        /* \"#utility.yul\":10768:10771   */\n      dup3\n        /* \"#utility.yul\":10679:10772   */\n      tag_215\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":10797:10799   */\n      0x20\n        /* \"#utility.yul\":10792:10795   */\n      dup3\n        /* \"#utility.yul\":10788:10800   */\n      add\n        /* \"#utility.yul\":10781:10800   */\n      swap1\n      pop\n        /* \"#utility.yul\":10440:10806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10812:11231   */\n    tag_84:\n        /* \"#utility.yul\":10978:10982   */\n      0x00\n        /* \"#utility.yul\":11016:11018   */\n      0x20\n        /* \"#utility.yul\":11005:11014   */\n      dup3\n        /* \"#utility.yul\":11001:11019   */\n      add\n        /* \"#utility.yul\":10993:11019   */\n      swap1\n      pop\n        /* \"#utility.yul\":11065:11074   */\n      dup2\n        /* \"#utility.yul\":11059:11063   */\n      dup2\n        /* \"#utility.yul\":11055:11075   */\n      sub\n        /* \"#utility.yul\":11051:11052   */\n      0x00\n        /* \"#utility.yul\":11040:11049   */\n      dup4\n        /* \"#utility.yul\":11036:11053   */\n      add\n        /* \"#utility.yul\":11029:11076   */\n      mstore\n        /* \"#utility.yul\":11093:11224   */\n      tag_342\n        /* \"#utility.yul\":11219:11223   */\n      dup2\n        /* \"#utility.yul\":11093:11224   */\n      tag_216\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":11085:11224   */\n      swap1\n      pop\n        /* \"#utility.yul\":10812:11231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11237:11409   */\n    tag_217:\n        /* \"#utility.yul\":11377:11401   */\n      0x41646472657373206e6f7420617574686f72697a656400000000000000000000\n        /* \"#utility.yul\":11373:11374   */\n      0x00\n        /* \"#utility.yul\":11365:11371   */\n      dup3\n        /* \"#utility.yul\":11361:11375   */\n      add\n        /* \"#utility.yul\":11354:11402   */\n      mstore\n        /* \"#utility.yul\":11237:11409   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11415:11781   */\n    tag_218:\n        /* \"#utility.yul\":11557:11560   */\n      0x00\n        /* \"#utility.yul\":11578:11645   */\n      tag_345\n        /* \"#utility.yul\":11642:11644   */\n      0x16\n        /* \"#utility.yul\":11637:11640   */\n      dup4\n        /* \"#utility.yul\":11578:11645   */\n      tag_207\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":11571:11645   */\n      swap2\n      pop\n        /* \"#utility.yul\":11654:11747   */\n      tag_346\n        /* \"#utility.yul\":11743:11746   */\n      dup3\n        /* \"#utility.yul\":11654:11747   */\n      tag_217\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":11772:11774   */\n      0x20\n        /* \"#utility.yul\":11767:11770   */\n      dup3\n        /* \"#utility.yul\":11763:11775   */\n      add\n        /* \"#utility.yul\":11756:11775   */\n      swap1\n      pop\n        /* \"#utility.yul\":11415:11781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11787:12206   */\n    tag_94:\n        /* \"#utility.yul\":11953:11957   */\n      0x00\n        /* \"#utility.yul\":11991:11993   */\n      0x20\n        /* \"#utility.yul\":11980:11989   */\n      dup3\n        /* \"#utility.yul\":11976:11994   */\n      add\n        /* \"#utility.yul\":11968:11994   */\n      swap1\n      pop\n        /* \"#utility.yul\":12040:12049   */\n      dup2\n        /* \"#utility.yul\":12034:12038   */\n      dup2\n        /* \"#utility.yul\":12030:12050   */\n      sub\n        /* \"#utility.yul\":12026:12027   */\n      0x00\n        /* \"#utility.yul\":12015:12024   */\n      dup4\n        /* \"#utility.yul\":12011:12028   */\n      add\n        /* \"#utility.yul\":12004:12051   */\n      mstore\n        /* \"#utility.yul\":12068:12199   */\n      tag_348\n        /* \"#utility.yul\":12194:12198   */\n      dup2\n        /* \"#utility.yul\":12068:12199   */\n      tag_218\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":12060:12199   */\n      swap1\n      pop\n        /* \"#utility.yul\":11787:12206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12212:12376   */\n    tag_219:\n        /* \"#utility.yul\":12352:12368   */\n      0x496e76616c696420746172676574000000000000000000000000000000000000\n        /* \"#utility.yul\":12348:12349   */\n      0x00\n        /* \"#utility.yul\":12340:12346   */\n      dup3\n        /* \"#utility.yul\":12336:12350   */\n      add\n        /* \"#utility.yul\":12329:12369   */\n      mstore\n        /* \"#utility.yul\":12212:12376   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12382:12748   */\n    tag_220:\n        /* \"#utility.yul\":12524:12527   */\n      0x00\n        /* \"#utility.yul\":12545:12612   */\n      tag_351\n        /* \"#utility.yul\":12609:12611   */\n      0x0e\n        /* \"#utility.yul\":12604:12607   */\n      dup4\n        /* \"#utility.yul\":12545:12612   */\n      tag_207\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":12538:12612   */\n      swap2\n      pop\n        /* \"#utility.yul\":12621:12714   */\n      tag_352\n        /* \"#utility.yul\":12710:12713   */\n      dup3\n        /* \"#utility.yul\":12621:12714   */\n      tag_219\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":12739:12741   */\n      0x20\n        /* \"#utility.yul\":12734:12737   */\n      dup3\n        /* \"#utility.yul\":12730:12742   */\n      add\n        /* \"#utility.yul\":12723:12742   */\n      swap1\n      pop\n        /* \"#utility.yul\":12382:12748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12754:13173   */\n    tag_111:\n        /* \"#utility.yul\":12920:12924   */\n      0x00\n        /* \"#utility.yul\":12958:12960   */\n      0x20\n        /* \"#utility.yul\":12947:12956   */\n      dup3\n        /* \"#utility.yul\":12943:12961   */\n      add\n        /* \"#utility.yul\":12935:12961   */\n      swap1\n      pop\n        /* \"#utility.yul\":13007:13016   */\n      dup2\n        /* \"#utility.yul\":13001:13005   */\n      dup2\n        /* \"#utility.yul\":12997:13017   */\n      sub\n        /* \"#utility.yul\":12993:12994   */\n      0x00\n        /* \"#utility.yul\":12982:12991   */\n      dup4\n        /* \"#utility.yul\":12978:12995   */\n      add\n        /* \"#utility.yul\":12971:13018   */\n      mstore\n        /* \"#utility.yul\":13035:13166   */\n      tag_354\n        /* \"#utility.yul\":13161:13165   */\n      dup2\n        /* \"#utility.yul\":13035:13166   */\n      tag_220\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":13027:13166   */\n      swap1\n      pop\n        /* \"#utility.yul\":12754:13173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13179:13327   */\n    tag_221:\n        /* \"#utility.yul\":13277:13283   */\n      dup3\n        /* \"#utility.yul\":13272:13275   */\n      dup2\n        /* \"#utility.yul\":13267:13270   */\n      dup4\n        /* \"#utility.yul\":13254:13284   */\n      calldatacopy\n        /* \"#utility.yul\":13318:13319   */\n      0x00\n        /* \"#utility.yul\":13309:13315   */\n      dup4\n        /* \"#utility.yul\":13304:13307   */\n      dup4\n        /* \"#utility.yul\":13300:13316   */\n      add\n        /* \"#utility.yul\":13293:13320   */\n      mstore\n        /* \"#utility.yul\":13179:13327   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13355:13682   */\n    tag_222:\n        /* \"#utility.yul\":13469:13472   */\n      0x00\n        /* \"#utility.yul\":13490:13578   */\n      tag_357\n        /* \"#utility.yul\":13571:13577   */\n      dup4\n        /* \"#utility.yul\":13566:13569   */\n      dup6\n        /* \"#utility.yul\":13490:13578   */\n      tag_212\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":13483:13578   */\n      swap4\n      pop\n        /* \"#utility.yul\":13588:13644   */\n      tag_358\n        /* \"#utility.yul\":13637:13643   */\n      dup4\n        /* \"#utility.yul\":13632:13635   */\n      dup6\n        /* \"#utility.yul\":13625:13630   */\n      dup5\n        /* \"#utility.yul\":13588:13644   */\n      tag_221\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":13669:13675   */\n      dup3\n        /* \"#utility.yul\":13664:13667   */\n      dup5\n        /* \"#utility.yul\":13660:13676   */\n      add\n        /* \"#utility.yul\":13653:13676   */\n      swap1\n      pop\n        /* \"#utility.yul\":13355:13682   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13688:13979   */\n    tag_113:\n        /* \"#utility.yul\":13828:13831   */\n      0x00\n        /* \"#utility.yul\":13850:13953   */\n      tag_360\n        /* \"#utility.yul\":13949:13952   */\n      dup3\n        /* \"#utility.yul\":13940:13946   */\n      dup5\n        /* \"#utility.yul\":13932:13938   */\n      dup7\n        /* \"#utility.yul\":13850:13953   */\n      tag_222\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":13843:13953   */\n      swap2\n      pop\n        /* \"#utility.yul\":13970:13973   */\n      dup2\n        /* \"#utility.yul\":13963:13973   */\n      swap1\n      pop\n        /* \"#utility.yul\":13688:13979   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13985:14156   */\n    tag_223:\n        /* \"#utility.yul\":14125:14148   */\n      0x43616c6c20657865637574696f6e206661696c65640000000000000000000000\n        /* \"#utility.yul\":14121:14122   */\n      0x00\n        /* \"#utility.yul\":14113:14119   */\n      dup3\n        /* \"#utility.yul\":14109:14123   */\n      add\n        /* \"#utility.yul\":14102:14149   */\n      mstore\n        /* \"#utility.yul\":13985:14156   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14162:14528   */\n    tag_224:\n        /* \"#utility.yul\":14304:14307   */\n      0x00\n        /* \"#utility.yul\":14325:14392   */\n      tag_363\n        /* \"#utility.yul\":14389:14391   */\n      0x15\n        /* \"#utility.yul\":14384:14387   */\n      dup4\n        /* \"#utility.yul\":14325:14392   */\n      tag_207\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":14318:14392   */\n      swap2\n      pop\n        /* \"#utility.yul\":14401:14494   */\n      tag_364\n        /* \"#utility.yul\":14490:14493   */\n      dup3\n        /* \"#utility.yul\":14401:14494   */\n      tag_223\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":14519:14521   */\n      0x20\n        /* \"#utility.yul\":14514:14517   */\n      dup3\n        /* \"#utility.yul\":14510:14522   */\n      add\n        /* \"#utility.yul\":14503:14522   */\n      swap1\n      pop\n        /* \"#utility.yul\":14162:14528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14534:14953   */\n    tag_119:\n        /* \"#utility.yul\":14700:14704   */\n      0x00\n        /* \"#utility.yul\":14738:14740   */\n      0x20\n        /* \"#utility.yul\":14727:14736   */\n      dup3\n        /* \"#utility.yul\":14723:14741   */\n      add\n        /* \"#utility.yul\":14715:14741   */\n      swap1\n      pop\n        /* \"#utility.yul\":14787:14796   */\n      dup2\n        /* \"#utility.yul\":14781:14785   */\n      dup2\n        /* \"#utility.yul\":14777:14797   */\n      sub\n        /* \"#utility.yul\":14773:14774   */\n      0x00\n        /* \"#utility.yul\":14762:14771   */\n      dup4\n        /* \"#utility.yul\":14758:14775   */\n      add\n        /* \"#utility.yul\":14751:14798   */\n      mstore\n        /* \"#utility.yul\":14815:14946   */\n      tag_366\n        /* \"#utility.yul\":14941:14945   */\n      dup2\n        /* \"#utility.yul\":14815:14946   */\n      tag_224\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":14807:14946   */\n      swap1\n      pop\n        /* \"#utility.yul\":14534:14953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14981:15295   */\n    tag_225:\n        /* \"#utility.yul\":15077:15080   */\n      0x00\n        /* \"#utility.yul\":15098:15168   */\n      tag_368\n        /* \"#utility.yul\":15161:15167   */\n      dup4\n        /* \"#utility.yul\":15156:15159   */\n      dup6\n        /* \"#utility.yul\":15098:15168   */\n      tag_198\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":15091:15168   */\n      swap4\n      pop\n        /* \"#utility.yul\":15178:15234   */\n      tag_369\n        /* \"#utility.yul\":15227:15233   */\n      dup4\n        /* \"#utility.yul\":15222:15225   */\n      dup6\n        /* \"#utility.yul\":15215:15220   */\n      dup5\n        /* \"#utility.yul\":15178:15234   */\n      tag_221\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":15259:15288   */\n      tag_370\n        /* \"#utility.yul\":15281:15287   */\n      dup4\n        /* \"#utility.yul\":15259:15288   */\n      tag_200\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":15254:15257   */\n      dup5\n        /* \"#utility.yul\":15250:15289   */\n      add\n        /* \"#utility.yul\":15243:15289   */\n      swap1\n      pop\n        /* \"#utility.yul\":14981:15295   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15301:15937   */\n    tag_121:\n        /* \"#utility.yul\":15496:15500   */\n      0x00\n        /* \"#utility.yul\":15534:15536   */\n      0x60\n        /* \"#utility.yul\":15523:15532   */\n      dup3\n        /* \"#utility.yul\":15519:15537   */\n      add\n        /* \"#utility.yul\":15511:15537   */\n      swap1\n      pop\n        /* \"#utility.yul\":15547:15618   */\n      tag_372\n        /* \"#utility.yul\":15615:15616   */\n      0x00\n        /* \"#utility.yul\":15604:15613   */\n      dup4\n        /* \"#utility.yul\":15600:15617   */\n      add\n        /* \"#utility.yul\":15591:15597   */\n      dup8\n        /* \"#utility.yul\":15547:15618   */\n      tag_182\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":15665:15674   */\n      dup2\n        /* \"#utility.yul\":15659:15663   */\n      dup2\n        /* \"#utility.yul\":15655:15675   */\n      sub\n        /* \"#utility.yul\":15650:15652   */\n      0x20\n        /* \"#utility.yul\":15639:15648   */\n      dup4\n        /* \"#utility.yul\":15635:15653   */\n      add\n        /* \"#utility.yul\":15628:15676   */\n      mstore\n        /* \"#utility.yul\":15693:15779   */\n      tag_373\n        /* \"#utility.yul\":15774:15778   */\n      dup2\n        /* \"#utility.yul\":15765:15771   */\n      dup6\n        /* \"#utility.yul\":15757:15763   */\n      dup8\n        /* \"#utility.yul\":15693:15779   */\n      tag_225\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":15685:15779   */\n      swap1\n      pop\n        /* \"#utility.yul\":15826:15835   */\n      dup2\n        /* \"#utility.yul\":15820:15824   */\n      dup2\n        /* \"#utility.yul\":15816:15836   */\n      sub\n        /* \"#utility.yul\":15811:15813   */\n      0x40\n        /* \"#utility.yul\":15800:15809   */\n      dup4\n        /* \"#utility.yul\":15796:15814   */\n      add\n        /* \"#utility.yul\":15789:15837   */\n      mstore\n        /* \"#utility.yul\":15854:15930   */\n      tag_374\n        /* \"#utility.yul\":15925:15929   */\n      dup2\n        /* \"#utility.yul\":15916:15922   */\n      dup5\n        /* \"#utility.yul\":15854:15930   */\n      tag_201\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":15846:15930   */\n      swap1\n      pop\n        /* \"#utility.yul\":15301:15937   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15943:16108   */\n    tag_226:\n        /* \"#utility.yul\":16083:16100   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":16079:16080   */\n      0x00\n        /* \"#utility.yul\":16071:16077   */\n      dup3\n        /* \"#utility.yul\":16067:16081   */\n      add\n        /* \"#utility.yul\":16060:16101   */\n      mstore\n        /* \"#utility.yul\":15943:16108   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16114:16480   */\n    tag_227:\n        /* \"#utility.yul\":16256:16259   */\n      0x00\n        /* \"#utility.yul\":16277:16344   */\n      tag_377\n        /* \"#utility.yul\":16341:16343   */\n      0x0f\n        /* \"#utility.yul\":16336:16339   */\n      dup4\n        /* \"#utility.yul\":16277:16344   */\n      tag_207\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":16270:16344   */\n      swap2\n      pop\n        /* \"#utility.yul\":16353:16446   */\n      tag_378\n        /* \"#utility.yul\":16442:16445   */\n      dup3\n        /* \"#utility.yul\":16353:16446   */\n      tag_226\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":16471:16473   */\n      0x20\n        /* \"#utility.yul\":16466:16469   */\n      dup3\n        /* \"#utility.yul\":16462:16474   */\n      add\n        /* \"#utility.yul\":16455:16474   */\n      swap1\n      pop\n        /* \"#utility.yul\":16114:16480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16486:16905   */\n    tag_128:\n        /* \"#utility.yul\":16652:16656   */\n      0x00\n        /* \"#utility.yul\":16690:16692   */\n      0x20\n        /* \"#utility.yul\":16679:16688   */\n      dup3\n        /* \"#utility.yul\":16675:16693   */\n      add\n        /* \"#utility.yul\":16667:16693   */\n      swap1\n      pop\n        /* \"#utility.yul\":16739:16748   */\n      dup2\n        /* \"#utility.yul\":16733:16737   */\n      dup2\n        /* \"#utility.yul\":16729:16749   */\n      sub\n        /* \"#utility.yul\":16725:16726   */\n      0x00\n        /* \"#utility.yul\":16714:16723   */\n      dup4\n        /* \"#utility.yul\":16710:16727   */\n      add\n        /* \"#utility.yul\":16703:16750   */\n      mstore\n        /* \"#utility.yul\":16767:16898   */\n      tag_380\n        /* \"#utility.yul\":16893:16897   */\n      dup2\n        /* \"#utility.yul\":16767:16898   */\n      tag_227\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":16759:16898   */\n      swap1\n      pop\n        /* \"#utility.yul\":16486:16905   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16911:17079   */\n    tag_228:\n        /* \"#utility.yul\":17051:17071   */\n      0x416c726561647920617574686f72697a65640000000000000000000000000000\n        /* \"#utility.yul\":17047:17048   */\n      0x00\n        /* \"#utility.yul\":17039:17045   */\n      dup3\n        /* \"#utility.yul\":17035:17049   */\n      add\n        /* \"#utility.yul\":17028:17072   */\n      mstore\n        /* \"#utility.yul\":16911:17079   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17085:17451   */\n    tag_229:\n        /* \"#utility.yul\":17227:17230   */\n      0x00\n        /* \"#utility.yul\":17248:17315   */\n      tag_383\n        /* \"#utility.yul\":17312:17314   */\n      0x12\n        /* \"#utility.yul\":17307:17310   */\n      dup4\n        /* \"#utility.yul\":17248:17315   */\n      tag_207\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":17241:17315   */\n      swap2\n      pop\n        /* \"#utility.yul\":17324:17417   */\n      tag_384\n        /* \"#utility.yul\":17413:17416   */\n      dup3\n        /* \"#utility.yul\":17324:17417   */\n      tag_228\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":17442:17444   */\n      0x20\n        /* \"#utility.yul\":17437:17440   */\n      dup3\n        /* \"#utility.yul\":17433:17445   */\n      add\n        /* \"#utility.yul\":17426:17445   */\n      swap1\n      pop\n        /* \"#utility.yul\":17085:17451   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17457:17876   */\n    tag_131:\n        /* \"#utility.yul\":17623:17627   */\n      0x00\n        /* \"#utility.yul\":17661:17663   */\n      0x20\n        /* \"#utility.yul\":17650:17659   */\n      dup3\n        /* \"#utility.yul\":17646:17664   */\n      add\n        /* \"#utility.yul\":17638:17664   */\n      swap1\n      pop\n        /* \"#utility.yul\":17710:17719   */\n      dup2\n        /* \"#utility.yul\":17704:17708   */\n      dup2\n        /* \"#utility.yul\":17700:17720   */\n      sub\n        /* \"#utility.yul\":17696:17697   */\n      0x00\n        /* \"#utility.yul\":17685:17694   */\n      dup4\n        /* \"#utility.yul\":17681:17698   */\n      add\n        /* \"#utility.yul\":17674:17721   */\n      mstore\n        /* \"#utility.yul\":17738:17869   */\n      tag_386\n        /* \"#utility.yul\":17864:17868   */\n      dup2\n        /* \"#utility.yul\":17738:17869   */\n      tag_229\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":17730:17869   */\n      swap1\n      pop\n        /* \"#utility.yul\":17457:17876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17882:18053   */\n    tag_230:\n        /* \"#utility.yul\":18022:18045   */\n      0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n        /* \"#utility.yul\":18018:18019   */\n      0x00\n        /* \"#utility.yul\":18010:18016   */\n      dup3\n        /* \"#utility.yul\":18006:18020   */\n      add\n        /* \"#utility.yul\":17999:18046   */\n      mstore\n        /* \"#utility.yul\":17882:18053   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18059:18425   */\n    tag_231:\n        /* \"#utility.yul\":18201:18204   */\n      0x00\n        /* \"#utility.yul\":18222:18289   */\n      tag_389\n        /* \"#utility.yul\":18286:18288   */\n      0x15\n        /* \"#utility.yul\":18281:18284   */\n      dup4\n        /* \"#utility.yul\":18222:18289   */\n      tag_207\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":18215:18289   */\n      swap2\n      pop\n        /* \"#utility.yul\":18298:18391   */\n      tag_390\n        /* \"#utility.yul\":18387:18390   */\n      dup3\n        /* \"#utility.yul\":18298:18391   */\n      tag_230\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":18416:18418   */\n      0x20\n        /* \"#utility.yul\":18411:18414   */\n      dup3\n        /* \"#utility.yul\":18407:18419   */\n      add\n        /* \"#utility.yul\":18400:18419   */\n      swap1\n      pop\n        /* \"#utility.yul\":18059:18425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18431:18850   */\n    tag_148:\n        /* \"#utility.yul\":18597:18601   */\n      0x00\n        /* \"#utility.yul\":18635:18637   */\n      0x20\n        /* \"#utility.yul\":18624:18633   */\n      dup3\n        /* \"#utility.yul\":18620:18638   */\n      add\n        /* \"#utility.yul\":18612:18638   */\n      swap1\n      pop\n        /* \"#utility.yul\":18684:18693   */\n      dup2\n        /* \"#utility.yul\":18678:18682   */\n      dup2\n        /* \"#utility.yul\":18674:18694   */\n      sub\n        /* \"#utility.yul\":18670:18671   */\n      0x00\n        /* \"#utility.yul\":18659:18668   */\n      dup4\n        /* \"#utility.yul\":18655:18672   */\n      add\n        /* \"#utility.yul\":18648:18695   */\n      mstore\n        /* \"#utility.yul\":18712:18843   */\n      tag_392\n        /* \"#utility.yul\":18838:18842   */\n      dup2\n        /* \"#utility.yul\":18712:18843   */\n      tag_231\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":18704:18843   */\n      swap1\n      pop\n        /* \"#utility.yul\":18431:18850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18856:19031   */\n    tag_232:\n        /* \"#utility.yul\":18996:19023   */\n      0x496e76616c696420726563697069656e74206164647265737300000000000000\n        /* \"#utility.yul\":18992:18993   */\n      0x00\n        /* \"#utility.yul\":18984:18990   */\n      dup3\n        /* \"#utility.yul\":18980:18994   */\n      add\n        /* \"#utility.yul\":18973:19024   */\n      mstore\n        /* \"#utility.yul\":18856:19031   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19037:19403   */\n    tag_233:\n        /* \"#utility.yul\":19179:19182   */\n      0x00\n        /* \"#utility.yul\":19200:19267   */\n      tag_395\n        /* \"#utility.yul\":19264:19266   */\n      0x19\n        /* \"#utility.yul\":19259:19262   */\n      dup4\n        /* \"#utility.yul\":19200:19267   */\n      tag_207\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":19193:19267   */\n      swap2\n      pop\n        /* \"#utility.yul\":19276:19369   */\n      tag_396\n        /* \"#utility.yul\":19365:19368   */\n      dup3\n        /* \"#utility.yul\":19276:19369   */\n      tag_232\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":19394:19396   */\n      0x20\n        /* \"#utility.yul\":19389:19392   */\n      dup3\n        /* \"#utility.yul\":19385:19397   */\n      add\n        /* \"#utility.yul\":19378:19397   */\n      swap1\n      pop\n        /* \"#utility.yul\":19037:19403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19409:19828   */\n    tag_151:\n        /* \"#utility.yul\":19575:19579   */\n      0x00\n        /* \"#utility.yul\":19613:19615   */\n      0x20\n        /* \"#utility.yul\":19602:19611   */\n      dup3\n        /* \"#utility.yul\":19598:19616   */\n      add\n        /* \"#utility.yul\":19590:19616   */\n      swap1\n      pop\n        /* \"#utility.yul\":19662:19671   */\n      dup2\n        /* \"#utility.yul\":19656:19660   */\n      dup2\n        /* \"#utility.yul\":19652:19672   */\n      sub\n        /* \"#utility.yul\":19648:19649   */\n      0x00\n        /* \"#utility.yul\":19637:19646   */\n      dup4\n        /* \"#utility.yul\":19633:19650   */\n      add\n        /* \"#utility.yul\":19626:19673   */\n      mstore\n        /* \"#utility.yul\":19690:19821   */\n      tag_398\n        /* \"#utility.yul\":19816:19820   */\n      dup2\n        /* \"#utility.yul\":19690:19821   */\n      tag_233\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":19682:19821   */\n      swap1\n      pop\n        /* \"#utility.yul\":19409:19828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19834:20015   */\n    tag_234:\n        /* \"#utility.yul\":19974:20007   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":19970:19971   */\n      0x00\n        /* \"#utility.yul\":19962:19968   */\n      dup3\n        /* \"#utility.yul\":19958:19972   */\n      add\n        /* \"#utility.yul\":19951:20008   */\n      mstore\n        /* \"#utility.yul\":19834:20015   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20021:20387   */\n    tag_235:\n        /* \"#utility.yul\":20163:20166   */\n      0x00\n        /* \"#utility.yul\":20184:20251   */\n      tag_401\n        /* \"#utility.yul\":20248:20250   */\n      0x1f\n        /* \"#utility.yul\":20243:20246   */\n      dup4\n        /* \"#utility.yul\":20184:20251   */\n      tag_207\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":20177:20251   */\n      swap2\n      pop\n        /* \"#utility.yul\":20260:20353   */\n      tag_402\n        /* \"#utility.yul\":20349:20352   */\n      dup3\n        /* \"#utility.yul\":20260:20353   */\n      tag_234\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":20378:20380   */\n      0x20\n        /* \"#utility.yul\":20373:20376   */\n      dup3\n        /* \"#utility.yul\":20369:20381   */\n      add\n        /* \"#utility.yul\":20362:20381   */\n      swap1\n      pop\n        /* \"#utility.yul\":20021:20387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20393:20812   */\n    tag_159:\n        /* \"#utility.yul\":20559:20563   */\n      0x00\n        /* \"#utility.yul\":20597:20599   */\n      0x20\n        /* \"#utility.yul\":20586:20595   */\n      dup3\n        /* \"#utility.yul\":20582:20600   */\n      add\n        /* \"#utility.yul\":20574:20600   */\n      swap1\n      pop\n        /* \"#utility.yul\":20646:20655   */\n      dup2\n        /* \"#utility.yul\":20640:20644   */\n      dup2\n        /* \"#utility.yul\":20636:20656   */\n      sub\n        /* \"#utility.yul\":20632:20633   */\n      0x00\n        /* \"#utility.yul\":20621:20630   */\n      dup4\n        /* \"#utility.yul\":20617:20634   */\n      add\n        /* \"#utility.yul\":20610:20657   */\n      mstore\n        /* \"#utility.yul\":20674:20805   */\n      tag_404\n        /* \"#utility.yul\":20800:20804   */\n      dup2\n        /* \"#utility.yul\":20674:20805   */\n      tag_235\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":20666:20805   */\n      swap1\n      pop\n        /* \"#utility.yul\":20393:20812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20818:21150   */\n    tag_172:\n        /* \"#utility.yul\":20939:20943   */\n      0x00\n        /* \"#utility.yul\":20977:20979   */\n      0x40\n        /* \"#utility.yul\":20966:20975   */\n      dup3\n        /* \"#utility.yul\":20962:20980   */\n      add\n        /* \"#utility.yul\":20954:20980   */\n      swap1\n      pop\n        /* \"#utility.yul\":20990:21061   */\n      tag_406\n        /* \"#utility.yul\":21058:21059   */\n      0x00\n        /* \"#utility.yul\":21047:21056   */\n      dup4\n        /* \"#utility.yul\":21043:21060   */\n      add\n        /* \"#utility.yul\":21034:21040   */\n      dup6\n        /* \"#utility.yul\":20990:21061   */\n      tag_192\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":21071:21143   */\n      tag_407\n        /* \"#utility.yul\":21139:21141   */\n      0x20\n        /* \"#utility.yul\":21128:21137   */\n      dup4\n        /* \"#utility.yul\":21124:21142   */\n      add\n        /* \"#utility.yul\":21115:21121   */\n      dup5\n        /* \"#utility.yul\":21071:21143   */\n      tag_182\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":20818:21150   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220edd7ac8bb35abf9a48f1b5ff98b15f9c931cb511f7c6d5a406f562f4a528c13564736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_916": {
									"entryPoint": null,
									"id": 916,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 157,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:10",
										"nodeType": "YulBlock",
										"src": "0:590:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:10",
													"nodeType": "YulBlock",
													"src": "52:81:10",
													"statements": [
														{
															"nativeSrc": "62:65:10",
															"nodeType": "YulAssignment",
															"src": "62:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:10",
																		"nodeType": "YulLiteral",
																		"src": "84:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:10"
																},
																"nativeSrc": "73:54:10",
																"nodeType": "YulFunctionCall",
																"src": "73:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:126:10"
											},
											{
												"body": {
													"nativeSrc": "184:51:10",
													"nodeType": "YulBlock",
													"src": "184:51:10",
													"statements": [
														{
															"nativeSrc": "194:35:10",
															"nodeType": "YulAssignment",
															"src": "194:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:10"
																},
																"nativeSrc": "205:24:10",
																"nodeType": "YulFunctionCall",
																"src": "205:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:10",
														"nodeType": "YulTypedName",
														"src": "166:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:10",
														"nodeType": "YulTypedName",
														"src": "176:7:10",
														"type": ""
													}
												],
												"src": "139:96:10"
											},
											{
												"body": {
													"nativeSrc": "306:53:10",
													"nodeType": "YulBlock",
													"src": "306:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:10"
																		},
																		"nativeSrc": "328:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:10"
																},
																"nativeSrc": "316:37:10",
																"nodeType": "YulFunctionCall",
																"src": "316:37:10"
															},
															"nativeSrc": "316:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:10",
														"nodeType": "YulTypedName",
														"src": "294:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:10",
														"nodeType": "YulTypedName",
														"src": "301:3:10",
														"type": ""
													}
												],
												"src": "241:118:10"
											},
											{
												"body": {
													"nativeSrc": "463:124:10",
													"nodeType": "YulBlock",
													"src": "463:124:10",
													"statements": [
														{
															"nativeSrc": "473:26:10",
															"nodeType": "YulAssignment",
															"src": "473:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:10",
																		"nodeType": "YulLiteral",
																		"src": "496:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:10"
																},
																"nativeSrc": "481:18:10",
																"nodeType": "YulFunctionCall",
																"src": "481:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:10",
																				"nodeType": "YulLiteral",
																				"src": "577:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:10"
																		},
																		"nativeSrc": "562:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:10"
																},
																"nativeSrc": "509:71:10",
																"nodeType": "YulFunctionCall",
																"src": "509:71:10"
															},
															"nativeSrc": "509:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:10",
														"nodeType": "YulTypedName",
														"src": "435:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:10",
														"nodeType": "YulTypedName",
														"src": "447:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:10",
														"nodeType": "YulTypedName",
														"src": "458:4:10",
														"type": ""
													}
												],
												"src": "365:222:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610078919061019d565b60405180910390fd5b6100908161009d60201b60201c565b50600180819055506101b6565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101878261015e565b9050919050565b6101978161017d565b82525050565b5f6020820190506101b05f83018461018e565b92915050565b6118fb806101c35f395ff3fe608060405260043610610089575f3560e01c80639e5d4c49116100585780639e5d4c49146101be578063b9181611146101fa578063cf1c316a14610236578063f2fde38b1461025e578063f5537ede14610286576100de565b80633bed33ce1461012e578063485d7d9414610156578063715018a61461017e5780638da5cb5b14610194576100de565b366100de573373ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874346040516100d49190610fd7565b60405180910390a2005b3373ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874346040516101249190610fd7565b60405180910390a2005b348015610139575f5ffd5b50610154600480360381019061014f9190611022565b6102ae565b005b348015610161575f5ffd5b5061017c600480360381019061017791906110a7565b6104c1565b005b348015610189575f5ffd5b506101926105ec565b005b34801561019f575f5ffd5b506101a86105ff565b6040516101b591906110e1565b60405180910390f35b3480156101c9575f5ffd5b506101e460048036038101906101df919061115b565b610626565b6040516101f1919061123c565b60405180910390f35b348015610205575f5ffd5b50610220600480360381019061021b91906110a7565b61087b565b60405161022d9190611276565b60405180910390f35b348015610241575f5ffd5b5061025c600480360381019061025791906110a7565b610898565b005b348015610269575f5ffd5b50610284600480360381019061027f91906110a7565b610a33565b005b348015610291575f5ffd5b506102ac60048036038101906102a791906112ca565b610ab7565b005b6102b66105ff565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610335575060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036b90611374565b60405180910390fd5b61037c610cfe565b804710156103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b6906113dc565b60405180910390fd5b5f3373ffffffffffffffffffffffffffffffffffffffff16826040516103e490611427565b5f6040518083038185875af1925050503d805f811461041e576040519150601f19603f3d011682016040523d82523d5f602084013e610423565b606091505b5050905080610467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045e90611485565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f06097061aeda806b5e9cb4133d9899f332ff0913956567fc0f7ea15e3d19947c836040516104ad9190610fd7565b60405180910390a2506104be610d4d565b50565b6104c9610d56565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610552576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610549906114ed565b60405180910390fd5b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f0fafd0343e6c6f6985727574866da48938c918559eb9521cf9cc0d317ea0f7b460405160405180910390a250565b6105f4610d56565b6105fd5f610ddd565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606106306105ff565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106af575060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b6106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e590611374565b60405180910390fd5b6106f6610cfe565b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b90611555565b60405180910390fd5b5f5f8673ffffffffffffffffffffffffffffffffffffffff1686868660405161078e9291906115a5565b5f6040518083038185875af1925050503d805f81146107c8576040519150601f19603f3d011682016040523d82523d5f602084013e6107cd565b606091505b509150915081610812576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080990611607565b60405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff167fe39b605d485d947e52b62c3b5028a14d5277db44425263c74171a857071543348787878560405161085e9493929190611651565b60405180910390a28092505050610873610d4d565b949350505050565b6002602052805f5260405f205f915054906101000a900460ff1681565b6108a0610d56565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361090e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610905906116e0565b60405180910390fd5b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610998576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098f90611748565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fdd10d14f6ac19e913d4edbb11fd30661531e2ccd0d23f571e9b224f001f0dd0660405160405180910390a250565b610a3b610d56565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610aab575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610aa291906110e1565b60405180910390fd5b610ab481610ddd565b50565b610abf6105ff565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b3e575060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7490611374565b60405180910390fd5b610b85610cfe565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bea906117b0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5890611818565b60405180910390fd5b610c8c82828573ffffffffffffffffffffffffffffffffffffffff16610e9e9092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f9c8515990fd8c61431c4ac8db9b81475f90c292a1dda77731e56c22e64fc764383604051610ce99190610fd7565b60405180910390a3610cf9610d4d565b505050565b600260015403610d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3a90611880565b60405180910390fd5b6002600181905550565b60018081905550565b610d5e610f1d565b73ffffffffffffffffffffffffffffffffffffffff16610d7c6105ff565b73ffffffffffffffffffffffffffffffffffffffff1614610ddb57610d9f610f1d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610dd291906110e1565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f18838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610ed192919061189e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f24565b505050565b5f33905090565b5f5f60205f8451602086015f885af180610f43576040513d5f823e3d81fd5b3d92505f519150505f8214610f5c576001811415610f77565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610fb957836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610fb091906110e1565b60405180910390fd5b50505050565b5f819050919050565b610fd181610fbf565b82525050565b5f602082019050610fea5f830184610fc8565b92915050565b5f5ffd5b5f5ffd5b61100181610fbf565b811461100b575f5ffd5b50565b5f8135905061101c81610ff8565b92915050565b5f6020828403121561103757611036610ff0565b5b5f6110448482850161100e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110768261104d565b9050919050565b6110868161106c565b8114611090575f5ffd5b50565b5f813590506110a18161107d565b92915050565b5f602082840312156110bc576110bb610ff0565b5b5f6110c984828501611093565b91505092915050565b6110db8161106c565b82525050565b5f6020820190506110f45f8301846110d2565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261111b5761111a6110fa565b5b8235905067ffffffffffffffff811115611138576111376110fe565b5b60208301915083600182028301111561115457611153611102565b5b9250929050565b5f5f5f5f6060858703121561117357611172610ff0565b5b5f61118087828801611093565b94505060206111918782880161100e565b935050604085013567ffffffffffffffff8111156111b2576111b1610ff4565b5b6111be87828801611106565b925092505092959194509250565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61120e826111cc565b61121881856111d6565b93506112288185602086016111e6565b611231816111f4565b840191505092915050565b5f6020820190508181035f8301526112548184611204565b905092915050565b5f8115159050919050565b6112708161125c565b82525050565b5f6020820190506112895f830184611267565b92915050565b5f6112998261106c565b9050919050565b6112a98161128f565b81146112b3575f5ffd5b50565b5f813590506112c4816112a0565b92915050565b5f5f5f606084860312156112e1576112e0610ff0565b5b5f6112ee868287016112b6565b93505060206112ff86828701611093565b92505060406113108682870161100e565b9150509250925092565b5f82825260208201905092915050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f61135e600e8361131a565b91506113698261132a565b602082019050919050565b5f6020820190508181035f83015261138b81611352565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6113c660148361131a565b91506113d182611392565b602082019050919050565b5f6020820190508181035f8301526113f3816113ba565b9050919050565b5f81905092915050565b50565b5f6114125f836113fa565b915061141d82611404565b5f82019050919050565b5f61143182611407565b9150819050919050565b7f4574686572207769746864726177616c206661696c65640000000000000000005f82015250565b5f61146f60178361131a565b915061147a8261143b565b602082019050919050565b5f6020820190508181035f83015261149c81611463565b9050919050565b7f41646472657373206e6f7420617574686f72697a6564000000000000000000005f82015250565b5f6114d760168361131a565b91506114e2826114a3565b602082019050919050565b5f6020820190508181035f830152611504816114cb565b9050919050565b7f496e76616c6964207461726765740000000000000000000000000000000000005f82015250565b5f61153f600e8361131a565b915061154a8261150b565b602082019050919050565b5f6020820190508181035f83015261156c81611533565b9050919050565b828183375f83830152505050565b5f61158c83856113fa565b9350611599838584611573565b82840190509392505050565b5f6115b1828486611581565b91508190509392505050565b7f43616c6c20657865637574696f6e206661696c656400000000000000000000005f82015250565b5f6115f160158361131a565b91506115fc826115bd565b602082019050919050565b5f6020820190508181035f83015261161e816115e5565b9050919050565b5f61163083856111d6565b935061163d838584611573565b611646836111f4565b840190509392505050565b5f6060820190506116645f830187610fc8565b8181036020830152611677818587611625565b9050818103604083015261168b8184611204565b905095945050505050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f6116ca600f8361131a565b91506116d582611696565b602082019050919050565b5f6020820190508181035f8301526116f7816116be565b9050919050565b7f416c726561647920617574686f72697a656400000000000000000000000000005f82015250565b5f61173260128361131a565b915061173d826116fe565b602082019050919050565b5f6020820190508181035f83015261175f81611726565b9050919050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f61179a60158361131a565b91506117a582611766565b602082019050919050565b5f6020820190508181035f8301526117c78161178e565b9050919050565b7f496e76616c696420726563697069656e742061646472657373000000000000005f82015250565b5f61180260198361131a565b915061180d826117ce565b602082019050919050565b5f6020820190508181035f83015261182f816117f6565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61186a601f8361131a565b915061187582611836565b602082019050919050565b5f6020820190508181035f8301526118978161185e565b9050919050565b5f6040820190506118b15f8301856110d2565b6118be6020830184610fc8565b939250505056fea2646970667358221220edd7ac8bb35abf9a48f1b5ff98b15f9c931cb511f7c6d5a406f562f4a528c13564736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x9D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x1B6 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x187 DUP3 PUSH2 0x15E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197 DUP2 PUSH2 0x17D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18FB DUP1 PUSH2 0x1C3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x89 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5D4C49 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xCF1C316A EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF5537EDE EQ PUSH2 0x286 JUMPI PUSH2 0xDE JUMP JUMPDEST DUP1 PUSH4 0x3BED33CE EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x485D7D94 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x194 JUMPI PUSH2 0xDE JUMP JUMPDEST CALLDATASIZE PUSH2 0xDE JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x2AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x5EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x115B JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x123C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B6 PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x335 JUMPI POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x374 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36B SWAP1 PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x37C PUSH2 0xCFE JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x1427 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x423 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45E SWAP1 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6097061AEDA806B5E9CB4133D9899F332FF0913956567FC0F7EA15E3D19947C DUP4 PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x4BE PUSH2 0xD4D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4C9 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x549 SWAP1 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFAFD0343E6C6F6985727574866DA48938C918559EB9521CF9CC0D317EA0F7B4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x5F4 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x5FD PUSH0 PUSH2 0xDDD JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x630 PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6AF JUMPI POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E5 SWAP1 PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F6 PUSH2 0xCFE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75B SWAP1 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x78E SWAP3 SWAP2 SWAP1 PUSH2 0x15A5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE39B605D485D947E52B62C3B5028A14D5277DB44425263C74171A85707154334 DUP8 DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x85E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP3 POP POP POP PUSH2 0x873 PUSH2 0xD4D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0xD56 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x905 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x998 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98F SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDD10D14F6AC19E913D4EDBB11FD30661531E2CCD0D23F571E9B224F001F0DD06 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xD56 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAAB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA2 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB4 DUP2 PUSH2 0xDDD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xABF PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB3E JUMPI POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB74 SWAP1 PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB85 PUSH2 0xCFE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP1 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC58 SWAP1 PUSH2 0x1818 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8C DUP3 DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9C8515990FD8C61431C4AC8DB9B81475F90C292A1DDA77731E56C22E64FC7643 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xCF9 PUSH2 0xD4D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3A SWAP1 PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD5E PUSH2 0xF1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD7C PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDDB JUMPI PUSH2 0xD9F PUSH2 0xF1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD2 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF18 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xED1 SWAP3 SWAP2 SWAP1 PUSH2 0x189E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF24 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xF43 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xF5C JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xF77 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xFB9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD1 DUP2 PUSH2 0xFBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFEA PUSH0 DUP4 ADD DUP5 PUSH2 0xFC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1001 DUP2 PUSH2 0xFBF JUMP JUMPDEST DUP2 EQ PUSH2 0x100B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x101C DUP2 PUSH2 0xFF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1037 JUMPI PUSH2 0x1036 PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1044 DUP5 DUP3 DUP6 ADD PUSH2 0x100E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1076 DUP3 PUSH2 0x104D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1086 DUP2 PUSH2 0x106C JUMP JUMPDEST DUP2 EQ PUSH2 0x1090 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10A1 DUP2 PUSH2 0x107D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BC JUMPI PUSH2 0x10BB PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C9 DUP5 DUP3 DUP6 ADD PUSH2 0x1093 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10DB DUP2 PUSH2 0x106C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x10D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x111B JUMPI PUSH2 0x111A PUSH2 0x10FA JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1138 JUMPI PUSH2 0x1137 PUSH2 0x10FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1154 JUMPI PUSH2 0x1153 PUSH2 0x1102 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1173 JUMPI PUSH2 0x1172 PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1180 DUP8 DUP3 DUP9 ADD PUSH2 0x1093 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1191 DUP8 DUP3 DUP9 ADD PUSH2 0x100E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B2 JUMPI PUSH2 0x11B1 PUSH2 0xFF4 JUMP JUMPDEST JUMPDEST PUSH2 0x11BE DUP8 DUP3 DUP9 ADD PUSH2 0x1106 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x120E DUP3 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x1218 DUP2 DUP6 PUSH2 0x11D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1228 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11E6 JUMP JUMPDEST PUSH2 0x1231 DUP2 PUSH2 0x11F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1254 DUP2 DUP5 PUSH2 0x1204 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1270 DUP2 PUSH2 0x125C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1289 PUSH0 DUP4 ADD DUP5 PUSH2 0x1267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1299 DUP3 PUSH2 0x106C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A9 DUP2 PUSH2 0x128F JUMP JUMPDEST DUP2 EQ PUSH2 0x12B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12C4 DUP2 PUSH2 0x12A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12E1 JUMPI PUSH2 0x12E0 PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12EE DUP7 DUP3 DUP8 ADD PUSH2 0x12B6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12FF DUP7 DUP3 DUP8 ADD PUSH2 0x1093 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1310 DUP7 DUP3 DUP8 ADD PUSH2 0x100E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x135E PUSH1 0xE DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x1369 DUP3 PUSH2 0x132A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x138B DUP2 PUSH2 0x1352 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13C6 PUSH1 0x14 DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x13D1 DUP3 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13F3 DUP2 PUSH2 0x13BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1412 PUSH0 DUP4 PUSH2 0x13FA JUMP JUMPDEST SWAP2 POP PUSH2 0x141D DUP3 PUSH2 0x1404 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1431 DUP3 PUSH2 0x1407 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207769746864726177616C206661696C6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x146F PUSH1 0x17 DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x147A DUP3 PUSH2 0x143B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x149C DUP2 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646472657373206E6F7420617574686F72697A656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14D7 PUSH1 0x16 DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x14E2 DUP3 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1504 DUP2 PUSH2 0x14CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746172676574000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x153F PUSH1 0xE DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x154A DUP3 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x156C DUP2 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x158C DUP4 DUP6 PUSH2 0x13FA JUMP JUMPDEST SWAP4 POP PUSH2 0x1599 DUP4 DUP6 DUP5 PUSH2 0x1573 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15B1 DUP3 DUP5 DUP7 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43616C6C20657865637574696F6E206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15F1 PUSH1 0x15 DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x15FC DUP3 PUSH2 0x15BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x161E DUP2 PUSH2 0x15E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1630 DUP4 DUP6 PUSH2 0x11D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x163D DUP4 DUP6 DUP5 PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x1646 DUP4 PUSH2 0x11F4 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1664 PUSH0 DUP4 ADD DUP8 PUSH2 0xFC8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1677 DUP2 DUP6 DUP8 PUSH2 0x1625 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x168B DUP2 DUP5 PUSH2 0x1204 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16CA PUSH1 0xF DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x16D5 DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16F7 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920617574686F72697A65640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1732 PUSH1 0x12 DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x173D DUP3 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x175F DUP2 PUSH2 0x1726 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x179A PUSH1 0x15 DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x17A5 DUP3 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17C7 DUP2 PUSH2 0x178E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1802 PUSH1 0x19 DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x180D DUP3 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x182F DUP2 PUSH2 0x17F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x186A PUSH1 0x1F DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x1875 DUP3 PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1897 DUP2 PUSH2 0x185E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18B1 PUSH0 DUP4 ADD DUP6 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x18BE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFC8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xD7 0xAC DUP12 0xB3 GAS 0xBF SWAP11 BASEFEE CALL 0xB5 SELFDESTRUCT SWAP9 0xB1 PUSH0 SWAP13 SWAP4 SHR 0xB5 GT 0xF7 0xC6 0xD5 LOG4 MOD CREATE2 PUSH3 0xF4A528 0xC1 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "568:3754:9:-:0;;;1480:107;;;;;;;;;;1502:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;568:3754:9;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;568:3754:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1144": {
									"entryPoint": null,
									"id": 1144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1156": {
									"entryPoint": null,
									"id": 1156,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_747": {
									"entryPoint": 3876,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3414,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_801": {
									"entryPoint": 3869,
									"id": 801,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 3405,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 3326,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3549,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addAuthorized_953": {
									"entryPoint": 2200,
									"id": 953,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@authorized_850": {
									"entryPoint": 2171,
									"id": 850,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@executeCall_1031": {
									"entryPoint": 1574,
									"id": 1031,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1535,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeAuthorized_979": {
									"entryPoint": 1217,
									"id": 979,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1516,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 3742,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2611,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferToken_1132": {
									"entryPoint": 2743,
									"id": 1132,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdrawEther_1077": {
									"entryPoint": 686,
									"id": 1077,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 4358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_contract$_IERC20_$380": {
									"entryPoint": 4790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 4443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_contract$_IERC20_$380t_addresst_uint256": {
									"entryPoint": 4810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5669,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5505,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2796c61c946df02007454e4fe25eeedbdb7345d33153a0e3ee502b088b313018_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5541,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6302,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2796c61c946df02007454e4fe25eeedbdb7345d33153a0e3ee502b088b313018__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5713,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$380": {
									"entryPoint": 4751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5491,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4582,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 4350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4346,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4354,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4084,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 5782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2": {
									"entryPoint": 5387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2796c61c946df02007454e4fe25eeedbdb7345d33153a0e3ee502b088b313018": {
									"entryPoint": 5565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 5010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc": {
									"entryPoint": 5179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df": {
									"entryPoint": 6094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2": {
									"entryPoint": 5886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 5124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 5990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 6198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36": {
									"entryPoint": 4906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$380": {
									"entryPoint": 4768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21153:10",
										"nodeType": "YulBlock",
										"src": "0:21153:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:10",
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nativeSrc": "62:16:10",
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:10",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nativeSrc": "155:53:10",
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nativeSrc": "177:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nativeSrc": "165:37:10",
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nativeSrc": "165:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:10",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:10",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nativeSrc": "312:124:10",
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nativeSrc": "322:26:10",
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:10",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nativeSrc": "330:18:10",
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:10",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nativeSrc": "411:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nativeSrc": "358:71:10",
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nativeSrc": "358:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:10",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:10",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:10",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nativeSrc": "482:35:10",
													"nodeType": "YulBlock",
													"src": "482:35:10",
													"statements": [
														{
															"nativeSrc": "492:19:10",
															"nodeType": "YulAssignment",
															"src": "492:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:10",
																		"nodeType": "YulLiteral",
																		"src": "508:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:10"
																},
																"nativeSrc": "502:9:10",
																"nodeType": "YulFunctionCall",
																"src": "502:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:10",
														"nodeType": "YulTypedName",
														"src": "475:6:10",
														"type": ""
													}
												],
												"src": "442:75:10"
											},
											{
												"body": {
													"nativeSrc": "612:28:10",
													"nodeType": "YulBlock",
													"src": "612:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:10",
																		"nodeType": "YulLiteral",
																		"src": "629:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:10",
																		"nodeType": "YulLiteral",
																		"src": "632:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:10"
																},
																"nativeSrc": "622:12:10",
																"nodeType": "YulFunctionCall",
																"src": "622:12:10"
															},
															"nativeSrc": "622:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:10"
											},
											{
												"body": {
													"nativeSrc": "735:28:10",
													"nodeType": "YulBlock",
													"src": "735:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:10",
																		"nodeType": "YulLiteral",
																		"src": "752:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:10",
																		"nodeType": "YulLiteral",
																		"src": "755:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:10"
																},
																"nativeSrc": "745:12:10",
																"nodeType": "YulFunctionCall",
																"src": "745:12:10"
															},
															"nativeSrc": "745:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:10"
											},
											{
												"body": {
													"nativeSrc": "812:79:10",
													"nodeType": "YulBlock",
													"src": "812:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:16:10",
																"nodeType": "YulBlock",
																"src": "869:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "878:1:10",
																					"nodeType": "YulLiteral",
																					"src": "878:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "881:1:10",
																					"nodeType": "YulLiteral",
																					"src": "881:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "871:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:10"
																			},
																			"nativeSrc": "871:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:10"
																		},
																		"nativeSrc": "871:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "835:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "860:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "842:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:10"
																				},
																				"nativeSrc": "842:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "832:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:10"
																		},
																		"nativeSrc": "832:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "825:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:10"
																},
																"nativeSrc": "825:43:10",
																"nodeType": "YulFunctionCall",
																"src": "825:43:10"
															},
															"nativeSrc": "822:63:10",
															"nodeType": "YulIf",
															"src": "822:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "769:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "805:5:10",
														"nodeType": "YulTypedName",
														"src": "805:5:10",
														"type": ""
													}
												],
												"src": "769:122:10"
											},
											{
												"body": {
													"nativeSrc": "949:87:10",
													"nodeType": "YulBlock",
													"src": "949:87:10",
													"statements": [
														{
															"nativeSrc": "959:29:10",
															"nodeType": "YulAssignment",
															"src": "959:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "981:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:10"
																},
																"nativeSrc": "968:20:10",
																"nodeType": "YulFunctionCall",
																"src": "968:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "997:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:10"
																},
																"nativeSrc": "997:33:10",
																"nodeType": "YulFunctionCall",
																"src": "997:33:10"
															},
															"nativeSrc": "997:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "997:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "897:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:10",
														"nodeType": "YulTypedName",
														"src": "927:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:10",
														"nodeType": "YulTypedName",
														"src": "935:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:10",
														"nodeType": "YulTypedName",
														"src": "943:5:10",
														"type": ""
													}
												],
												"src": "897:139:10"
											},
											{
												"body": {
													"nativeSrc": "1108:263:10",
													"nodeType": "YulBlock",
													"src": "1108:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:10",
																"nodeType": "YulBlock",
																"src": "1154:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:10"
																			},
																			"nativeSrc": "1156:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:10"
																		},
																		"nativeSrc": "1156:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:10"
																		},
																		"nativeSrc": "1125:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:10"
																},
																"nativeSrc": "1121:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:10"
															},
															"nativeSrc": "1118:119:10",
															"nodeType": "YulIf",
															"src": "1118:119:10"
														},
														{
															"nativeSrc": "1247:117:10",
															"nodeType": "YulBlock",
															"src": "1247:117:10",
															"statements": [
																{
																	"nativeSrc": "1262:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1291:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1326:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1337:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:10"
																				},
																				"nativeSrc": "1322:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1301:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:10"
																		},
																		"nativeSrc": "1301:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1042:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:10",
														"nodeType": "YulTypedName",
														"src": "1078:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:10",
														"nodeType": "YulTypedName",
														"src": "1089:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:10",
														"nodeType": "YulTypedName",
														"src": "1101:6:10",
														"type": ""
													}
												],
												"src": "1042:329:10"
											},
											{
												"body": {
													"nativeSrc": "1422:81:10",
													"nodeType": "YulBlock",
													"src": "1422:81:10",
													"statements": [
														{
															"nativeSrc": "1432:65:10",
															"nodeType": "YulAssignment",
															"src": "1432:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:10"
																},
																"nativeSrc": "1443:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:10",
														"nodeType": "YulTypedName",
														"src": "1404:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:10",
														"nodeType": "YulTypedName",
														"src": "1414:7:10",
														"type": ""
													}
												],
												"src": "1377:126:10"
											},
											{
												"body": {
													"nativeSrc": "1554:51:10",
													"nodeType": "YulBlock",
													"src": "1554:51:10",
													"statements": [
														{
															"nativeSrc": "1564:35:10",
															"nodeType": "YulAssignment",
															"src": "1564:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1593:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1575:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:10"
																},
																"nativeSrc": "1575:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1575:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1564:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1509:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1536:5:10",
														"nodeType": "YulTypedName",
														"src": "1536:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1546:7:10",
														"nodeType": "YulTypedName",
														"src": "1546:7:10",
														"type": ""
													}
												],
												"src": "1509:96:10"
											},
											{
												"body": {
													"nativeSrc": "1654:79:10",
													"nodeType": "YulBlock",
													"src": "1654:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:10",
																"nodeType": "YulBlock",
																"src": "1711:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:10"
																			},
																			"nativeSrc": "1713:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:10"
																		},
																		"nativeSrc": "1713:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1684:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:10"
																				},
																				"nativeSrc": "1684:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:10"
																		},
																		"nativeSrc": "1674:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:10"
																},
																"nativeSrc": "1667:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:10"
															},
															"nativeSrc": "1664:63:10",
															"nodeType": "YulIf",
															"src": "1664:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1611:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:10",
														"nodeType": "YulTypedName",
														"src": "1647:5:10",
														"type": ""
													}
												],
												"src": "1611:122:10"
											},
											{
												"body": {
													"nativeSrc": "1791:87:10",
													"nodeType": "YulBlock",
													"src": "1791:87:10",
													"statements": [
														{
															"nativeSrc": "1801:29:10",
															"nodeType": "YulAssignment",
															"src": "1801:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:10"
																},
																"nativeSrc": "1810:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1839:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:10"
																},
																"nativeSrc": "1839:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:10"
															},
															"nativeSrc": "1839:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1739:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:10",
														"nodeType": "YulTypedName",
														"src": "1769:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:10",
														"nodeType": "YulTypedName",
														"src": "1777:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:10",
														"nodeType": "YulTypedName",
														"src": "1785:5:10",
														"type": ""
													}
												],
												"src": "1739:139:10"
											},
											{
												"body": {
													"nativeSrc": "1950:263:10",
													"nodeType": "YulBlock",
													"src": "1950:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:10",
																"nodeType": "YulBlock",
																"src": "1996:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:10"
																			},
																			"nativeSrc": "1998:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:10"
																		},
																		"nativeSrc": "1998:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:10"
																		},
																		"nativeSrc": "1967:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:10"
																},
																"nativeSrc": "1963:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:10"
															},
															"nativeSrc": "1960:119:10",
															"nodeType": "YulIf",
															"src": "1960:119:10"
														},
														{
															"nativeSrc": "2089:117:10",
															"nodeType": "YulBlock",
															"src": "2089:117:10",
															"statements": [
																{
																	"nativeSrc": "2104:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:10"
																				},
																				"nativeSrc": "2164:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2143:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:10"
																		},
																		"nativeSrc": "2143:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1884:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:10",
														"nodeType": "YulTypedName",
														"src": "1920:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:10",
														"nodeType": "YulTypedName",
														"src": "1931:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:10",
														"nodeType": "YulTypedName",
														"src": "1943:6:10",
														"type": ""
													}
												],
												"src": "1884:329:10"
											},
											{
												"body": {
													"nativeSrc": "2284:53:10",
													"nodeType": "YulBlock",
													"src": "2284:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2301:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2301:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2324:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2324:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2306:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2306:17:10"
																		},
																		"nativeSrc": "2306:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2306:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2294:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:10"
																},
																"nativeSrc": "2294:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2294:37:10"
															},
															"nativeSrc": "2294:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2294:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2219:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2272:5:10",
														"nodeType": "YulTypedName",
														"src": "2272:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2279:3:10",
														"nodeType": "YulTypedName",
														"src": "2279:3:10",
														"type": ""
													}
												],
												"src": "2219:118:10"
											},
											{
												"body": {
													"nativeSrc": "2441:124:10",
													"nodeType": "YulBlock",
													"src": "2441:124:10",
													"statements": [
														{
															"nativeSrc": "2451:26:10",
															"nodeType": "YulAssignment",
															"src": "2451:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2463:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2474:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2474:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2459:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2459:3:10"
																},
																"nativeSrc": "2459:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2459:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2451:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2451:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2531:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2544:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2544:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2555:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2555:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2540:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:10"
																		},
																		"nativeSrc": "2540:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2540:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2487:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2487:43:10"
																},
																"nativeSrc": "2487:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2487:71:10"
															},
															"nativeSrc": "2487:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2487:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2343:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2413:9:10",
														"nodeType": "YulTypedName",
														"src": "2413:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2425:6:10",
														"nodeType": "YulTypedName",
														"src": "2425:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2436:4:10",
														"nodeType": "YulTypedName",
														"src": "2436:4:10",
														"type": ""
													}
												],
												"src": "2343:222:10"
											},
											{
												"body": {
													"nativeSrc": "2660:28:10",
													"nodeType": "YulBlock",
													"src": "2660:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2677:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2677:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2680:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2680:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2670:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2670:6:10"
																},
																"nativeSrc": "2670:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2670:12:10"
															},
															"nativeSrc": "2670:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "2670:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "2571:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "2571:117:10"
											},
											{
												"body": {
													"nativeSrc": "2783:28:10",
													"nodeType": "YulBlock",
													"src": "2783:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2800:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2800:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2803:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2803:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2793:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2793:6:10"
																},
																"nativeSrc": "2793:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2793:12:10"
															},
															"nativeSrc": "2793:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "2793:12:10"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "2694:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "2694:117:10"
											},
											{
												"body": {
													"nativeSrc": "2906:28:10",
													"nodeType": "YulBlock",
													"src": "2906:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2923:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2923:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2926:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2926:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2916:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:10"
																},
																"nativeSrc": "2916:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2916:12:10"
															},
															"nativeSrc": "2916:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "2916:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "2817:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "2817:117:10"
											},
											{
												"body": {
													"nativeSrc": "3027:478:10",
													"nodeType": "YulBlock",
													"src": "3027:478:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3076:83:10",
																"nodeType": "YulBlock",
																"src": "3076:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3078:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3078:77:10"
																			},
																			"nativeSrc": "3078:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3078:79:10"
																		},
																		"nativeSrc": "3078:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3078:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3055:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3055:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3063:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3063:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3051:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3051:3:10"
																				},
																				"nativeSrc": "3051:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3051:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3070:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3070:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3047:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3047:3:10"
																		},
																		"nativeSrc": "3047:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3047:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3040:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3040:6:10"
																},
																"nativeSrc": "3040:35:10",
																"nodeType": "YulFunctionCall",
																"src": "3040:35:10"
															},
															"nativeSrc": "3037:122:10",
															"nodeType": "YulIf",
															"src": "3037:122:10"
														},
														{
															"nativeSrc": "3168:30:10",
															"nodeType": "YulAssignment",
															"src": "3168:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3191:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3191:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3178:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3178:12:10"
																},
																"nativeSrc": "3178:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3178:20:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3168:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3241:83:10",
																"nodeType": "YulBlock",
																"src": "3241:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "3243:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3243:77:10"
																			},
																			"nativeSrc": "3243:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3243:79:10"
																		},
																		"nativeSrc": "3243:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3243:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3213:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3213:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3221:18:10",
																		"nodeType": "YulLiteral",
																		"src": "3221:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3210:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3210:2:10"
																},
																"nativeSrc": "3210:30:10",
																"nodeType": "YulFunctionCall",
																"src": "3210:30:10"
															},
															"nativeSrc": "3207:117:10",
															"nodeType": "YulIf",
															"src": "3207:117:10"
														},
														{
															"nativeSrc": "3333:29:10",
															"nodeType": "YulAssignment",
															"src": "3333:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3349:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3349:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3357:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3357:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3345:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3345:3:10"
																},
																"nativeSrc": "3345:17:10",
																"nodeType": "YulFunctionCall",
																"src": "3345:17:10"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "3333:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "3333:8:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3416:83:10",
																"nodeType": "YulBlock",
																"src": "3416:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "3418:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3418:77:10"
																			},
																			"nativeSrc": "3418:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3418:79:10"
																		},
																		"nativeSrc": "3418:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3418:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "3381:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "3381:8:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "3395:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3395:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3403:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3403:4:10",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3391:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3391:3:10"
																				},
																				"nativeSrc": "3391:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3391:17:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3377:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3377:3:10"
																		},
																		"nativeSrc": "3377:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3377:32:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3411:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3411:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3374:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3374:2:10"
																},
																"nativeSrc": "3374:41:10",
																"nodeType": "YulFunctionCall",
																"src": "3374:41:10"
															},
															"nativeSrc": "3371:128:10",
															"nodeType": "YulIf",
															"src": "3371:128:10"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "2953:552:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:10",
														"nodeType": "YulTypedName",
														"src": "2994:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:10",
														"nodeType": "YulTypedName",
														"src": "3002:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "3010:8:10",
														"nodeType": "YulTypedName",
														"src": "3010:8:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3020:6:10",
														"nodeType": "YulTypedName",
														"src": "3020:6:10",
														"type": ""
													}
												],
												"src": "2953:552:10"
											},
											{
												"body": {
													"nativeSrc": "3630:698:10",
													"nodeType": "YulBlock",
													"src": "3630:698:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3676:83:10",
																"nodeType": "YulBlock",
																"src": "3676:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3678:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3678:77:10"
																			},
																			"nativeSrc": "3678:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3678:79:10"
																		},
																		"nativeSrc": "3678:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3678:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3651:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3651:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3660:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3660:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3647:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:10"
																		},
																		"nativeSrc": "3647:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3647:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3672:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3672:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3643:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3643:3:10"
																},
																"nativeSrc": "3643:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3643:32:10"
															},
															"nativeSrc": "3640:119:10",
															"nodeType": "YulIf",
															"src": "3640:119:10"
														},
														{
															"nativeSrc": "3769:117:10",
															"nodeType": "YulBlock",
															"src": "3769:117:10",
															"statements": [
																{
																	"nativeSrc": "3784:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3784:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3798:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3798:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3788:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3788:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3813:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3813:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3848:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3848:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3859:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3859:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3844:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3844:3:10"
																				},
																				"nativeSrc": "3844:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3844:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3868:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3868:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3823:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3823:20:10"
																		},
																		"nativeSrc": "3823:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3823:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3813:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3813:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3896:118:10",
															"nodeType": "YulBlock",
															"src": "3896:118:10",
															"statements": [
																{
																	"nativeSrc": "3911:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3925:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3925:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3915:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3941:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3941:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3976:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3976:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3987:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3987:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3972:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3972:3:10"
																				},
																				"nativeSrc": "3972:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3972:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3996:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3996:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3951:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3951:20:10"
																		},
																		"nativeSrc": "3951:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3951:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3941:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3941:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4024:297:10",
															"nodeType": "YulBlock",
															"src": "4024:297:10",
															"statements": [
																{
																	"nativeSrc": "4039:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4039:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4070:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4070:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4081:2:10",
																						"nodeType": "YulLiteral",
																						"src": "4081:2:10",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4066:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4066:3:10"
																				},
																				"nativeSrc": "4066:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4066:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4053:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "4053:12:10"
																		},
																		"nativeSrc": "4053:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4053:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4043:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4043:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4132:83:10",
																		"nodeType": "YulBlock",
																		"src": "4132:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4134:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "4134:77:10"
																					},
																					"nativeSrc": "4134:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4134:79:10"
																				},
																				"nativeSrc": "4134:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "4134:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4104:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4104:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4112:18:10",
																				"nodeType": "YulLiteral",
																				"src": "4112:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4101:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4101:2:10"
																		},
																		"nativeSrc": "4101:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4101:30:10"
																	},
																	"nativeSrc": "4098:117:10",
																	"nodeType": "YulIf",
																	"src": "4098:117:10"
																},
																{
																	"nativeSrc": "4229:82:10",
																	"nodeType": "YulAssignment",
																	"src": "4229:82:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4283:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4283:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4294:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4294:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4279:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4279:3:10"
																				},
																				"nativeSrc": "4279:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4279:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4303:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4303:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "4247:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "4247:31:10"
																		},
																		"nativeSrc": "4247:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4247:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4229:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4229:6:10"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "4237:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4237:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
												"nativeSrc": "3511:817:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3576:9:10",
														"nodeType": "YulTypedName",
														"src": "3576:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3587:7:10",
														"nodeType": "YulTypedName",
														"src": "3587:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3599:6:10",
														"nodeType": "YulTypedName",
														"src": "3599:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3607:6:10",
														"nodeType": "YulTypedName",
														"src": "3607:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3615:6:10",
														"nodeType": "YulTypedName",
														"src": "3615:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3623:6:10",
														"nodeType": "YulTypedName",
														"src": "3623:6:10",
														"type": ""
													}
												],
												"src": "3511:817:10"
											},
											{
												"body": {
													"nativeSrc": "4392:40:10",
													"nodeType": "YulBlock",
													"src": "4392:40:10",
													"statements": [
														{
															"nativeSrc": "4403:22:10",
															"nodeType": "YulAssignment",
															"src": "4403:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4419:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4419:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4413:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4413:5:10"
																},
																"nativeSrc": "4413:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4413:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4403:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4403:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "4334:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4375:5:10",
														"nodeType": "YulTypedName",
														"src": "4375:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4385:6:10",
														"nodeType": "YulTypedName",
														"src": "4385:6:10",
														"type": ""
													}
												],
												"src": "4334:98:10"
											},
											{
												"body": {
													"nativeSrc": "4533:73:10",
													"nodeType": "YulBlock",
													"src": "4533:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4550:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4550:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4555:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4555:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4543:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4543:6:10"
																},
																"nativeSrc": "4543:19:10",
																"nodeType": "YulFunctionCall",
																"src": "4543:19:10"
															},
															"nativeSrc": "4543:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "4543:19:10"
														},
														{
															"nativeSrc": "4571:29:10",
															"nodeType": "YulAssignment",
															"src": "4571:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4590:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4590:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4595:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4595:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4586:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4586:3:10"
																},
																"nativeSrc": "4586:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4586:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4571:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "4571:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "4438:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4505:3:10",
														"nodeType": "YulTypedName",
														"src": "4505:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4510:6:10",
														"nodeType": "YulTypedName",
														"src": "4510:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4521:11:10",
														"nodeType": "YulTypedName",
														"src": "4521:11:10",
														"type": ""
													}
												],
												"src": "4438:168:10"
											},
											{
												"body": {
													"nativeSrc": "4674:77:10",
													"nodeType": "YulBlock",
													"src": "4674:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4691:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4691:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4696:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4696:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4701:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4701:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "4685:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4685:5:10"
																},
																"nativeSrc": "4685:23:10",
																"nodeType": "YulFunctionCall",
																"src": "4685:23:10"
															},
															"nativeSrc": "4685:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "4685:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4728:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4728:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4733:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4733:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4724:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4724:3:10"
																		},
																		"nativeSrc": "4724:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4724:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4742:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4742:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4717:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:10"
																},
																"nativeSrc": "4717:27:10",
																"nodeType": "YulFunctionCall",
																"src": "4717:27:10"
															},
															"nativeSrc": "4717:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "4717:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "4612:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4656:3:10",
														"nodeType": "YulTypedName",
														"src": "4656:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4661:3:10",
														"nodeType": "YulTypedName",
														"src": "4661:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4666:6:10",
														"nodeType": "YulTypedName",
														"src": "4666:6:10",
														"type": ""
													}
												],
												"src": "4612:139:10"
											},
											{
												"body": {
													"nativeSrc": "4805:54:10",
													"nodeType": "YulBlock",
													"src": "4805:54:10",
													"statements": [
														{
															"nativeSrc": "4815:38:10",
															"nodeType": "YulAssignment",
															"src": "4815:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4833:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4833:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4840:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4840:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4829:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:10"
																		},
																		"nativeSrc": "4829:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4849:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4849:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4845:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4845:3:10"
																		},
																		"nativeSrc": "4845:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4845:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4825:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:10"
																},
																"nativeSrc": "4825:28:10",
																"nodeType": "YulFunctionCall",
																"src": "4825:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4815:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4815:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4757:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4788:5:10",
														"nodeType": "YulTypedName",
														"src": "4788:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4798:6:10",
														"nodeType": "YulTypedName",
														"src": "4798:6:10",
														"type": ""
													}
												],
												"src": "4757:102:10"
											},
											{
												"body": {
													"nativeSrc": "4955:283:10",
													"nodeType": "YulBlock",
													"src": "4955:283:10",
													"statements": [
														{
															"nativeSrc": "4965:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4965:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5011:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5011:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "4979:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "4979:31:10"
																},
																"nativeSrc": "4979:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4979:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4969:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4969:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5026:77:10",
															"nodeType": "YulAssignment",
															"src": "5026:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5091:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5091:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5096:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5096:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "5033:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "5033:57:10"
																},
																"nativeSrc": "5033:70:10",
																"nodeType": "YulFunctionCall",
																"src": "5033:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5026:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5026:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5151:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5151:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5158:4:10",
																				"nodeType": "YulLiteral",
																				"src": "5158:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5147:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5147:3:10"
																		},
																		"nativeSrc": "5147:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5147:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5165:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5165:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5170:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5170:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5112:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "5112:34:10"
																},
																"nativeSrc": "5112:65:10",
																"nodeType": "YulFunctionCall",
																"src": "5112:65:10"
															},
															"nativeSrc": "5112:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "5112:65:10"
														},
														{
															"nativeSrc": "5186:46:10",
															"nodeType": "YulAssignment",
															"src": "5186:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5197:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5197:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5224:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5224:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5202:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "5202:21:10"
																		},
																		"nativeSrc": "5202:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5202:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5193:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5193:3:10"
																},
																"nativeSrc": "5193:39:10",
																"nodeType": "YulFunctionCall",
																"src": "5193:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5186:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5186:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "4865:373:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4936:5:10",
														"nodeType": "YulTypedName",
														"src": "4936:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4943:3:10",
														"nodeType": "YulTypedName",
														"src": "4943:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4951:3:10",
														"nodeType": "YulTypedName",
														"src": "4951:3:10",
														"type": ""
													}
												],
												"src": "4865:373:10"
											},
											{
												"body": {
													"nativeSrc": "5360:193:10",
													"nodeType": "YulBlock",
													"src": "5360:193:10",
													"statements": [
														{
															"nativeSrc": "5370:26:10",
															"nodeType": "YulAssignment",
															"src": "5370:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5382:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5382:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5393:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5393:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5378:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5378:3:10"
																},
																"nativeSrc": "5378:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5378:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5370:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5370:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5417:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5417:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5428:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5428:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5413:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5413:3:10"
																		},
																		"nativeSrc": "5413:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5413:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5436:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5436:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5442:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5442:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5432:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5432:3:10"
																		},
																		"nativeSrc": "5432:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5432:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5406:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5406:6:10"
																},
																"nativeSrc": "5406:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5406:47:10"
															},
															"nativeSrc": "5406:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5406:47:10"
														},
														{
															"nativeSrc": "5462:84:10",
															"nodeType": "YulAssignment",
															"src": "5462:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5532:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5532:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5541:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5541:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "5470:61:10",
																	"nodeType": "YulIdentifier",
																	"src": "5470:61:10"
																},
																"nativeSrc": "5470:76:10",
																"nodeType": "YulFunctionCall",
																"src": "5470:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5462:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5462:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "5244:309:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5332:9:10",
														"nodeType": "YulTypedName",
														"src": "5332:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5344:6:10",
														"nodeType": "YulTypedName",
														"src": "5344:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5355:4:10",
														"nodeType": "YulTypedName",
														"src": "5355:4:10",
														"type": ""
													}
												],
												"src": "5244:309:10"
											},
											{
												"body": {
													"nativeSrc": "5601:48:10",
													"nodeType": "YulBlock",
													"src": "5601:48:10",
													"statements": [
														{
															"nativeSrc": "5611:32:10",
															"nodeType": "YulAssignment",
															"src": "5611:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5636:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5636:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5629:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5629:6:10"
																		},
																		"nativeSrc": "5629:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5629:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5622:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5622:6:10"
																},
																"nativeSrc": "5622:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5622:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5611:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5611:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5559:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5583:5:10",
														"nodeType": "YulTypedName",
														"src": "5583:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5593:7:10",
														"nodeType": "YulTypedName",
														"src": "5593:7:10",
														"type": ""
													}
												],
												"src": "5559:90:10"
											},
											{
												"body": {
													"nativeSrc": "5714:50:10",
													"nodeType": "YulBlock",
													"src": "5714:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5731:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5731:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5751:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5751:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5736:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "5736:14:10"
																		},
																		"nativeSrc": "5736:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5736:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5724:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5724:6:10"
																},
																"nativeSrc": "5724:34:10",
																"nodeType": "YulFunctionCall",
																"src": "5724:34:10"
															},
															"nativeSrc": "5724:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "5724:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "5655:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5702:5:10",
														"nodeType": "YulTypedName",
														"src": "5702:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5709:3:10",
														"nodeType": "YulTypedName",
														"src": "5709:3:10",
														"type": ""
													}
												],
												"src": "5655:109:10"
											},
											{
												"body": {
													"nativeSrc": "5862:118:10",
													"nodeType": "YulBlock",
													"src": "5862:118:10",
													"statements": [
														{
															"nativeSrc": "5872:26:10",
															"nodeType": "YulAssignment",
															"src": "5872:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5884:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5884:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5895:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5895:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5880:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5880:3:10"
																},
																"nativeSrc": "5880:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5880:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5872:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5872:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5946:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5946:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5959:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5959:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5970:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5970:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5955:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5955:3:10"
																		},
																		"nativeSrc": "5955:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5955:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5908:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "5908:37:10"
																},
																"nativeSrc": "5908:65:10",
																"nodeType": "YulFunctionCall",
																"src": "5908:65:10"
															},
															"nativeSrc": "5908:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "5908:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "5770:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5834:9:10",
														"nodeType": "YulTypedName",
														"src": "5834:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5846:6:10",
														"nodeType": "YulTypedName",
														"src": "5846:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5857:4:10",
														"nodeType": "YulTypedName",
														"src": "5857:4:10",
														"type": ""
													}
												],
												"src": "5770:210:10"
											},
											{
												"body": {
													"nativeSrc": "6045:51:10",
													"nodeType": "YulBlock",
													"src": "6045:51:10",
													"statements": [
														{
															"nativeSrc": "6055:35:10",
															"nodeType": "YulAssignment",
															"src": "6055:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6084:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6084:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "6066:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6066:17:10"
																},
																"nativeSrc": "6066:24:10",
																"nodeType": "YulFunctionCall",
																"src": "6066:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6055:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "6055:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$380",
												"nativeSrc": "5986:110:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6027:5:10",
														"nodeType": "YulTypedName",
														"src": "6027:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6037:7:10",
														"nodeType": "YulTypedName",
														"src": "6037:7:10",
														"type": ""
													}
												],
												"src": "5986:110:10"
											},
											{
												"body": {
													"nativeSrc": "6159:93:10",
													"nodeType": "YulBlock",
													"src": "6159:93:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6230:16:10",
																"nodeType": "YulBlock",
																"src": "6230:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6239:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6239:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6242:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6242:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6232:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6232:6:10"
																			},
																			"nativeSrc": "6232:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6232:12:10"
																		},
																		"nativeSrc": "6232:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6232:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6182:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6182:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6221:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6221:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$380",
																					"nativeSrc": "6189:31:10",
																					"nodeType": "YulIdentifier",
																					"src": "6189:31:10"
																				},
																				"nativeSrc": "6189:38:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6189:38:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6179:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6179:2:10"
																		},
																		"nativeSrc": "6179:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6179:49:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6172:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6172:6:10"
																},
																"nativeSrc": "6172:57:10",
																"nodeType": "YulFunctionCall",
																"src": "6172:57:10"
															},
															"nativeSrc": "6169:77:10",
															"nodeType": "YulIf",
															"src": "6169:77:10"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$380",
												"nativeSrc": "6102:150:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6152:5:10",
														"nodeType": "YulTypedName",
														"src": "6152:5:10",
														"type": ""
													}
												],
												"src": "6102:150:10"
											},
											{
												"body": {
													"nativeSrc": "6324:101:10",
													"nodeType": "YulBlock",
													"src": "6324:101:10",
													"statements": [
														{
															"nativeSrc": "6334:29:10",
															"nodeType": "YulAssignment",
															"src": "6334:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6356:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6356:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6343:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6343:12:10"
																},
																"nativeSrc": "6343:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6343:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6334:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6334:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6413:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6413:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$380",
																	"nativeSrc": "6372:40:10",
																	"nodeType": "YulIdentifier",
																	"src": "6372:40:10"
																},
																"nativeSrc": "6372:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6372:47:10"
															},
															"nativeSrc": "6372:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6372:47:10"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$380",
												"nativeSrc": "6258:167:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6302:6:10",
														"nodeType": "YulTypedName",
														"src": "6302:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6310:3:10",
														"nodeType": "YulTypedName",
														"src": "6310:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6318:5:10",
														"nodeType": "YulTypedName",
														"src": "6318:5:10",
														"type": ""
													}
												],
												"src": "6258:167:10"
											},
											{
												"body": {
													"nativeSrc": "6545:533:10",
													"nodeType": "YulBlock",
													"src": "6545:533:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6591:83:10",
																"nodeType": "YulBlock",
																"src": "6591:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6593:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6593:77:10"
																			},
																			"nativeSrc": "6593:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6593:79:10"
																		},
																		"nativeSrc": "6593:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6593:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6566:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6566:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6575:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6575:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6562:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6562:3:10"
																		},
																		"nativeSrc": "6562:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6562:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6587:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6587:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6558:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6558:3:10"
																},
																"nativeSrc": "6558:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6558:32:10"
															},
															"nativeSrc": "6555:119:10",
															"nodeType": "YulIf",
															"src": "6555:119:10"
														},
														{
															"nativeSrc": "6684:131:10",
															"nodeType": "YulBlock",
															"src": "6684:131:10",
															"statements": [
																{
																	"nativeSrc": "6699:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6699:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6713:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6713:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6703:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6703:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6728:77:10",
																	"nodeType": "YulAssignment",
																	"src": "6728:77:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6777:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6777:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6788:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6788:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6773:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6773:3:10"
																				},
																				"nativeSrc": "6773:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6773:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6797:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6797:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$380",
																			"nativeSrc": "6738:34:10",
																			"nodeType": "YulIdentifier",
																			"src": "6738:34:10"
																		},
																		"nativeSrc": "6738:67:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6738:67:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6728:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6728:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6825:118:10",
															"nodeType": "YulBlock",
															"src": "6825:118:10",
															"statements": [
																{
																	"nativeSrc": "6840:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6840:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6854:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6854:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6844:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6844:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6870:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6870:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6905:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6905:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6916:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6916:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6901:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6901:3:10"
																				},
																				"nativeSrc": "6901:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6901:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6925:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6925:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6880:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6880:20:10"
																		},
																		"nativeSrc": "6880:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6880:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6870:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6870:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6953:118:10",
															"nodeType": "YulBlock",
															"src": "6953:118:10",
															"statements": [
																{
																	"nativeSrc": "6968:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6968:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6982:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6982:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6972:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6972:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6998:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6998:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7033:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7033:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7044:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7044:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7029:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7029:3:10"
																				},
																				"nativeSrc": "7029:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7029:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7053:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7053:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7008:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7008:20:10"
																		},
																		"nativeSrc": "7008:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7008:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6998:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6998:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$380t_addresst_uint256",
												"nativeSrc": "6431:647:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6499:9:10",
														"nodeType": "YulTypedName",
														"src": "6499:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6510:7:10",
														"nodeType": "YulTypedName",
														"src": "6510:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6522:6:10",
														"nodeType": "YulTypedName",
														"src": "6522:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6530:6:10",
														"nodeType": "YulTypedName",
														"src": "6530:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6538:6:10",
														"nodeType": "YulTypedName",
														"src": "6538:6:10",
														"type": ""
													}
												],
												"src": "6431:647:10"
											},
											{
												"body": {
													"nativeSrc": "7180:73:10",
													"nodeType": "YulBlock",
													"src": "7180:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7197:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7197:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7202:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7202:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7190:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7190:6:10"
																},
																"nativeSrc": "7190:19:10",
																"nodeType": "YulFunctionCall",
																"src": "7190:19:10"
															},
															"nativeSrc": "7190:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "7190:19:10"
														},
														{
															"nativeSrc": "7218:29:10",
															"nodeType": "YulAssignment",
															"src": "7218:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7237:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7237:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7242:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7242:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7233:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7233:3:10"
																},
																"nativeSrc": "7233:14:10",
																"nodeType": "YulFunctionCall",
																"src": "7233:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7218:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "7218:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7084:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7152:3:10",
														"nodeType": "YulTypedName",
														"src": "7152:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7157:6:10",
														"nodeType": "YulTypedName",
														"src": "7157:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7168:11:10",
														"nodeType": "YulTypedName",
														"src": "7168:11:10",
														"type": ""
													}
												],
												"src": "7084:169:10"
											},
											{
												"body": {
													"nativeSrc": "7365:58:10",
													"nodeType": "YulBlock",
													"src": "7365:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7387:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7387:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7395:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7395:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7383:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7383:3:10"
																		},
																		"nativeSrc": "7383:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7383:14:10"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "7399:16:10",
																		"nodeType": "YulLiteral",
																		"src": "7399:16:10",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7376:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7376:6:10"
																},
																"nativeSrc": "7376:40:10",
																"nodeType": "YulFunctionCall",
																"src": "7376:40:10"
															},
															"nativeSrc": "7376:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "7376:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
												"nativeSrc": "7259:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7357:6:10",
														"nodeType": "YulTypedName",
														"src": "7357:6:10",
														"type": ""
													}
												],
												"src": "7259:164:10"
											},
											{
												"body": {
													"nativeSrc": "7575:220:10",
													"nodeType": "YulBlock",
													"src": "7575:220:10",
													"statements": [
														{
															"nativeSrc": "7585:74:10",
															"nodeType": "YulAssignment",
															"src": "7585:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7651:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7651:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7656:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7656:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7592:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7592:58:10"
																},
																"nativeSrc": "7592:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7592:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7585:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7585:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7757:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7757:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																	"nativeSrc": "7668:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7668:88:10"
																},
																"nativeSrc": "7668:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7668:93:10"
															},
															"nativeSrc": "7668:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7668:93:10"
														},
														{
															"nativeSrc": "7770:19:10",
															"nodeType": "YulAssignment",
															"src": "7770:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7781:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7781:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7786:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7786:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7777:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7777:3:10"
																},
																"nativeSrc": "7777:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7777:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7770:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7770:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7429:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7563:3:10",
														"nodeType": "YulTypedName",
														"src": "7563:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7571:3:10",
														"nodeType": "YulTypedName",
														"src": "7571:3:10",
														"type": ""
													}
												],
												"src": "7429:366:10"
											},
											{
												"body": {
													"nativeSrc": "7972:248:10",
													"nodeType": "YulBlock",
													"src": "7972:248:10",
													"statements": [
														{
															"nativeSrc": "7982:26:10",
															"nodeType": "YulAssignment",
															"src": "7982:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7994:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7994:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8005:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8005:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7990:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7990:3:10"
																},
																"nativeSrc": "7990:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7990:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7982:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7982:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8029:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8029:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8040:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8040:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8025:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8025:3:10"
																		},
																		"nativeSrc": "8025:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8025:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8048:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8048:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8054:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8054:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8044:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8044:3:10"
																		},
																		"nativeSrc": "8044:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8044:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8018:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8018:6:10"
																},
																"nativeSrc": "8018:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8018:47:10"
															},
															"nativeSrc": "8018:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8018:47:10"
														},
														{
															"nativeSrc": "8074:139:10",
															"nodeType": "YulAssignment",
															"src": "8074:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8208:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8208:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8082:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8082:124:10"
																},
																"nativeSrc": "8082:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8082:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8074:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8074:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7801:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7952:9:10",
														"nodeType": "YulTypedName",
														"src": "7952:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7967:4:10",
														"nodeType": "YulTypedName",
														"src": "7967:4:10",
														"type": ""
													}
												],
												"src": "7801:419:10"
											},
											{
												"body": {
													"nativeSrc": "8332:64:10",
													"nodeType": "YulBlock",
													"src": "8332:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8354:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8354:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8362:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8362:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8350:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8350:3:10"
																		},
																		"nativeSrc": "8350:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8350:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "8366:22:10",
																		"nodeType": "YulLiteral",
																		"src": "8366:22:10",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8343:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8343:6:10"
																},
																"nativeSrc": "8343:46:10",
																"nodeType": "YulFunctionCall",
																"src": "8343:46:10"
															},
															"nativeSrc": "8343:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "8343:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "8226:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8324:6:10",
														"nodeType": "YulTypedName",
														"src": "8324:6:10",
														"type": ""
													}
												],
												"src": "8226:170:10"
											},
											{
												"body": {
													"nativeSrc": "8548:220:10",
													"nodeType": "YulBlock",
													"src": "8548:220:10",
													"statements": [
														{
															"nativeSrc": "8558:74:10",
															"nodeType": "YulAssignment",
															"src": "8558:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8624:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8624:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8629:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8629:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8565:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8565:58:10"
																},
																"nativeSrc": "8565:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8565:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8558:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8558:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8730:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8730:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "8641:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8641:88:10"
																},
																"nativeSrc": "8641:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8641:93:10"
															},
															"nativeSrc": "8641:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8641:93:10"
														},
														{
															"nativeSrc": "8743:19:10",
															"nodeType": "YulAssignment",
															"src": "8743:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8754:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8754:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8759:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8759:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8750:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8750:3:10"
																},
																"nativeSrc": "8750:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8750:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8743:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8743:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8402:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8536:3:10",
														"nodeType": "YulTypedName",
														"src": "8536:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8544:3:10",
														"nodeType": "YulTypedName",
														"src": "8544:3:10",
														"type": ""
													}
												],
												"src": "8402:366:10"
											},
											{
												"body": {
													"nativeSrc": "8945:248:10",
													"nodeType": "YulBlock",
													"src": "8945:248:10",
													"statements": [
														{
															"nativeSrc": "8955:26:10",
															"nodeType": "YulAssignment",
															"src": "8955:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8967:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8967:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8978:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8978:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8963:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8963:3:10"
																},
																"nativeSrc": "8963:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8963:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8955:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8955:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9002:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9002:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9013:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9013:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8998:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8998:3:10"
																		},
																		"nativeSrc": "8998:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8998:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9021:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9021:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9027:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9027:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9017:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9017:3:10"
																		},
																		"nativeSrc": "9017:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9017:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8991:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8991:6:10"
																},
																"nativeSrc": "8991:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8991:47:10"
															},
															"nativeSrc": "8991:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8991:47:10"
														},
														{
															"nativeSrc": "9047:139:10",
															"nodeType": "YulAssignment",
															"src": "9047:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9181:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9181:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9055:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9055:124:10"
																},
																"nativeSrc": "9055:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9055:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9047:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9047:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8774:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8925:9:10",
														"nodeType": "YulTypedName",
														"src": "8925:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8940:4:10",
														"nodeType": "YulTypedName",
														"src": "8940:4:10",
														"type": ""
													}
												],
												"src": "8774:419:10"
											},
											{
												"body": {
													"nativeSrc": "9312:34:10",
													"nodeType": "YulBlock",
													"src": "9312:34:10",
													"statements": [
														{
															"nativeSrc": "9322:18:10",
															"nodeType": "YulAssignment",
															"src": "9322:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "9337:3:10",
																"nodeType": "YulIdentifier",
																"src": "9337:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9322:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "9322:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9199:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9284:3:10",
														"nodeType": "YulTypedName",
														"src": "9284:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9289:6:10",
														"nodeType": "YulTypedName",
														"src": "9289:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9300:11:10",
														"nodeType": "YulTypedName",
														"src": "9300:11:10",
														"type": ""
													}
												],
												"src": "9199:147:10"
											},
											{
												"body": {
													"nativeSrc": "9458:8:10",
													"nodeType": "YulBlock",
													"src": "9458:8:10",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "9352:114:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9450:6:10",
														"nodeType": "YulTypedName",
														"src": "9450:6:10",
														"type": ""
													}
												],
												"src": "9352:114:10"
											},
											{
												"body": {
													"nativeSrc": "9635:235:10",
													"nodeType": "YulBlock",
													"src": "9635:235:10",
													"statements": [
														{
															"nativeSrc": "9645:90:10",
															"nodeType": "YulAssignment",
															"src": "9645:90:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9728:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9728:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9733:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9733:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "9652:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "9652:75:10"
																},
																"nativeSrc": "9652:83:10",
																"nodeType": "YulFunctionCall",
																"src": "9652:83:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9645:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9645:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9833:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9833:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "9744:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9744:88:10"
																},
																"nativeSrc": "9744:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9744:93:10"
															},
															"nativeSrc": "9744:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9744:93:10"
														},
														{
															"nativeSrc": "9846:18:10",
															"nodeType": "YulAssignment",
															"src": "9846:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9857:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9857:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9862:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9862:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9853:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9853:3:10"
																},
																"nativeSrc": "9853:11:10",
																"nodeType": "YulFunctionCall",
																"src": "9853:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9846:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9846:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9472:398:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9623:3:10",
														"nodeType": "YulTypedName",
														"src": "9623:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9631:3:10",
														"nodeType": "YulTypedName",
														"src": "9631:3:10",
														"type": ""
													}
												],
												"src": "9472:398:10"
											},
											{
												"body": {
													"nativeSrc": "10064:191:10",
													"nodeType": "YulBlock",
													"src": "10064:191:10",
													"statements": [
														{
															"nativeSrc": "10075:154:10",
															"nodeType": "YulAssignment",
															"src": "10075:154:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10225:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10082:141:10",
																	"nodeType": "YulIdentifier",
																	"src": "10082:141:10"
																},
																"nativeSrc": "10082:147:10",
																"nodeType": "YulFunctionCall",
																"src": "10082:147:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10075:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10075:3:10"
																}
															]
														},
														{
															"nativeSrc": "10239:10:10",
															"nodeType": "YulAssignment",
															"src": "10239:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "10246:3:10",
																"nodeType": "YulIdentifier",
																"src": "10246:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10239:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10239:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9876:379:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10051:3:10",
														"nodeType": "YulTypedName",
														"src": "10051:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10060:3:10",
														"nodeType": "YulTypedName",
														"src": "10060:3:10",
														"type": ""
													}
												],
												"src": "9876:379:10"
											},
											{
												"body": {
													"nativeSrc": "10367:67:10",
													"nodeType": "YulBlock",
													"src": "10367:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10389:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10389:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10397:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10397:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10385:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10385:3:10"
																		},
																		"nativeSrc": "10385:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10385:14:10"
																	},
																	{
																		"hexValue": "4574686572207769746864726177616c206661696c6564",
																		"kind": "string",
																		"nativeSrc": "10401:25:10",
																		"nodeType": "YulLiteral",
																		"src": "10401:25:10",
																		"type": "",
																		"value": "Ether withdrawal failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10378:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10378:6:10"
																},
																"nativeSrc": "10378:49:10",
																"nodeType": "YulFunctionCall",
																"src": "10378:49:10"
															},
															"nativeSrc": "10378:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "10378:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc",
												"nativeSrc": "10261:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10359:6:10",
														"nodeType": "YulTypedName",
														"src": "10359:6:10",
														"type": ""
													}
												],
												"src": "10261:173:10"
											},
											{
												"body": {
													"nativeSrc": "10586:220:10",
													"nodeType": "YulBlock",
													"src": "10586:220:10",
													"statements": [
														{
															"nativeSrc": "10596:74:10",
															"nodeType": "YulAssignment",
															"src": "10596:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10662:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10662:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10667:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10667:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10603:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10603:58:10"
																},
																"nativeSrc": "10603:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10603:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10596:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10596:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10768:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10768:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc",
																	"nativeSrc": "10679:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10679:88:10"
																},
																"nativeSrc": "10679:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10679:93:10"
															},
															"nativeSrc": "10679:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10679:93:10"
														},
														{
															"nativeSrc": "10781:19:10",
															"nodeType": "YulAssignment",
															"src": "10781:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10792:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10792:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10797:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10797:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10788:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10788:3:10"
																},
																"nativeSrc": "10788:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10788:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10781:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10781:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10440:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10574:3:10",
														"nodeType": "YulTypedName",
														"src": "10574:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10582:3:10",
														"nodeType": "YulTypedName",
														"src": "10582:3:10",
														"type": ""
													}
												],
												"src": "10440:366:10"
											},
											{
												"body": {
													"nativeSrc": "10983:248:10",
													"nodeType": "YulBlock",
													"src": "10983:248:10",
													"statements": [
														{
															"nativeSrc": "10993:26:10",
															"nodeType": "YulAssignment",
															"src": "10993:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11005:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11005:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11016:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11016:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11001:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11001:3:10"
																},
																"nativeSrc": "11001:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11001:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10993:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10993:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11040:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11040:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11051:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11051:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11036:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11036:3:10"
																		},
																		"nativeSrc": "11036:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11036:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11059:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11059:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11065:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11065:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11055:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11055:3:10"
																		},
																		"nativeSrc": "11055:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11055:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11029:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11029:6:10"
																},
																"nativeSrc": "11029:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11029:47:10"
															},
															"nativeSrc": "11029:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11029:47:10"
														},
														{
															"nativeSrc": "11085:139:10",
															"nodeType": "YulAssignment",
															"src": "11085:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11219:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11219:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11093:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11093:124:10"
																},
																"nativeSrc": "11093:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11093:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11085:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11085:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10812:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10963:9:10",
														"nodeType": "YulTypedName",
														"src": "10963:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10978:4:10",
														"nodeType": "YulTypedName",
														"src": "10978:4:10",
														"type": ""
													}
												],
												"src": "10812:419:10"
											},
											{
												"body": {
													"nativeSrc": "11343:66:10",
													"nodeType": "YulBlock",
													"src": "11343:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11365:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11365:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11373:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11373:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11361:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11361:3:10"
																		},
																		"nativeSrc": "11361:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11361:14:10"
																	},
																	{
																		"hexValue": "41646472657373206e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "11377:24:10",
																		"nodeType": "YulLiteral",
																		"src": "11377:24:10",
																		"type": "",
																		"value": "Address not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11354:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11354:6:10"
																},
																"nativeSrc": "11354:48:10",
																"nodeType": "YulFunctionCall",
																"src": "11354:48:10"
															},
															"nativeSrc": "11354:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "11354:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d",
												"nativeSrc": "11237:172:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11335:6:10",
														"nodeType": "YulTypedName",
														"src": "11335:6:10",
														"type": ""
													}
												],
												"src": "11237:172:10"
											},
											{
												"body": {
													"nativeSrc": "11561:220:10",
													"nodeType": "YulBlock",
													"src": "11561:220:10",
													"statements": [
														{
															"nativeSrc": "11571:74:10",
															"nodeType": "YulAssignment",
															"src": "11571:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11637:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11637:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11642:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11642:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11578:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11578:58:10"
																},
																"nativeSrc": "11578:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11578:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11571:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11571:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11743:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11743:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d",
																	"nativeSrc": "11654:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11654:88:10"
																},
																"nativeSrc": "11654:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11654:93:10"
															},
															"nativeSrc": "11654:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11654:93:10"
														},
														{
															"nativeSrc": "11756:19:10",
															"nodeType": "YulAssignment",
															"src": "11756:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11767:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11767:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11772:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11772:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11763:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11763:3:10"
																},
																"nativeSrc": "11763:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11763:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11756:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11756:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11415:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11549:3:10",
														"nodeType": "YulTypedName",
														"src": "11549:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11557:3:10",
														"nodeType": "YulTypedName",
														"src": "11557:3:10",
														"type": ""
													}
												],
												"src": "11415:366:10"
											},
											{
												"body": {
													"nativeSrc": "11958:248:10",
													"nodeType": "YulBlock",
													"src": "11958:248:10",
													"statements": [
														{
															"nativeSrc": "11968:26:10",
															"nodeType": "YulAssignment",
															"src": "11968:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11980:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11980:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11991:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11991:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11976:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11976:3:10"
																},
																"nativeSrc": "11976:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11976:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11968:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11968:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12015:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12015:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12026:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12026:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12011:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12011:3:10"
																		},
																		"nativeSrc": "12011:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12011:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12034:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12034:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12040:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12040:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12030:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12030:3:10"
																		},
																		"nativeSrc": "12030:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12030:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12004:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12004:6:10"
																},
																"nativeSrc": "12004:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12004:47:10"
															},
															"nativeSrc": "12004:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12004:47:10"
														},
														{
															"nativeSrc": "12060:139:10",
															"nodeType": "YulAssignment",
															"src": "12060:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12194:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12194:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12068:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12068:124:10"
																},
																"nativeSrc": "12068:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12068:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12060:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12060:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11787:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11938:9:10",
														"nodeType": "YulTypedName",
														"src": "11938:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11953:4:10",
														"nodeType": "YulTypedName",
														"src": "11953:4:10",
														"type": ""
													}
												],
												"src": "11787:419:10"
											},
											{
												"body": {
													"nativeSrc": "12318:58:10",
													"nodeType": "YulBlock",
													"src": "12318:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12340:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12340:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12348:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12348:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12336:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12336:3:10"
																		},
																		"nativeSrc": "12336:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12336:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746172676574",
																		"kind": "string",
																		"nativeSrc": "12352:16:10",
																		"nodeType": "YulLiteral",
																		"src": "12352:16:10",
																		"type": "",
																		"value": "Invalid target"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12329:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12329:6:10"
																},
																"nativeSrc": "12329:40:10",
																"nodeType": "YulFunctionCall",
																"src": "12329:40:10"
															},
															"nativeSrc": "12329:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "12329:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2",
												"nativeSrc": "12212:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12310:6:10",
														"nodeType": "YulTypedName",
														"src": "12310:6:10",
														"type": ""
													}
												],
												"src": "12212:164:10"
											},
											{
												"body": {
													"nativeSrc": "12528:220:10",
													"nodeType": "YulBlock",
													"src": "12528:220:10",
													"statements": [
														{
															"nativeSrc": "12538:74:10",
															"nodeType": "YulAssignment",
															"src": "12538:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12604:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12604:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12609:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12609:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12545:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12545:58:10"
																},
																"nativeSrc": "12545:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12545:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12538:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12538:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12710:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12710:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2",
																	"nativeSrc": "12621:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12621:88:10"
																},
																"nativeSrc": "12621:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12621:93:10"
															},
															"nativeSrc": "12621:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12621:93:10"
														},
														{
															"nativeSrc": "12723:19:10",
															"nodeType": "YulAssignment",
															"src": "12723:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12734:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12734:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12739:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12739:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12730:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12730:3:10"
																},
																"nativeSrc": "12730:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12730:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12723:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12723:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12382:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12516:3:10",
														"nodeType": "YulTypedName",
														"src": "12516:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12524:3:10",
														"nodeType": "YulTypedName",
														"src": "12524:3:10",
														"type": ""
													}
												],
												"src": "12382:366:10"
											},
											{
												"body": {
													"nativeSrc": "12925:248:10",
													"nodeType": "YulBlock",
													"src": "12925:248:10",
													"statements": [
														{
															"nativeSrc": "12935:26:10",
															"nodeType": "YulAssignment",
															"src": "12935:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12947:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12947:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12958:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12958:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12943:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12943:3:10"
																},
																"nativeSrc": "12943:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12943:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12935:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12935:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12982:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12982:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12993:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12993:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12978:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12978:3:10"
																		},
																		"nativeSrc": "12978:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12978:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13001:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13001:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13007:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13007:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12997:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12997:3:10"
																		},
																		"nativeSrc": "12997:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12997:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12971:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12971:6:10"
																},
																"nativeSrc": "12971:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12971:47:10"
															},
															"nativeSrc": "12971:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12971:47:10"
														},
														{
															"nativeSrc": "13027:139:10",
															"nodeType": "YulAssignment",
															"src": "13027:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13161:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13161:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13035:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13035:124:10"
																},
																"nativeSrc": "13035:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13035:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13027:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13027:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12754:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12905:9:10",
														"nodeType": "YulTypedName",
														"src": "12905:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12920:4:10",
														"nodeType": "YulTypedName",
														"src": "12920:4:10",
														"type": ""
													}
												],
												"src": "12754:419:10"
											},
											{
												"body": {
													"nativeSrc": "13243:84:10",
													"nodeType": "YulBlock",
													"src": "13243:84:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "13267:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13267:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "13272:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13272:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13277:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13277:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "13254:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "13254:12:10"
																},
																"nativeSrc": "13254:30:10",
																"nodeType": "YulFunctionCall",
																"src": "13254:30:10"
															},
															"nativeSrc": "13254:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "13254:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "13304:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "13304:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "13309:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13309:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13300:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13300:3:10"
																		},
																		"nativeSrc": "13300:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13300:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13318:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13318:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13293:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13293:6:10"
																},
																"nativeSrc": "13293:27:10",
																"nodeType": "YulFunctionCall",
																"src": "13293:27:10"
															},
															"nativeSrc": "13293:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "13293:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "13179:148:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "13225:3:10",
														"nodeType": "YulTypedName",
														"src": "13225:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "13230:3:10",
														"nodeType": "YulTypedName",
														"src": "13230:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13235:6:10",
														"nodeType": "YulTypedName",
														"src": "13235:6:10",
														"type": ""
													}
												],
												"src": "13179:148:10"
											},
											{
												"body": {
													"nativeSrc": "13473:209:10",
													"nodeType": "YulBlock",
													"src": "13473:209:10",
													"statements": [
														{
															"nativeSrc": "13483:95:10",
															"nodeType": "YulAssignment",
															"src": "13483:95:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13566:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13566:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13571:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13571:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13490:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "13490:75:10"
																},
																"nativeSrc": "13490:88:10",
																"nodeType": "YulFunctionCall",
																"src": "13490:88:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13483:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13483:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "13625:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "13625:5:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13632:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13632:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13637:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13637:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "13588:36:10",
																	"nodeType": "YulIdentifier",
																	"src": "13588:36:10"
																},
																"nativeSrc": "13588:56:10",
																"nodeType": "YulFunctionCall",
																"src": "13588:56:10"
															},
															"nativeSrc": "13588:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "13588:56:10"
														},
														{
															"nativeSrc": "13653:23:10",
															"nodeType": "YulAssignment",
															"src": "13653:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13664:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13664:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13669:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13669:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13660:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13660:3:10"
																},
																"nativeSrc": "13660:16:10",
																"nodeType": "YulFunctionCall",
																"src": "13660:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13653:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13653:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13355:327:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "13446:5:10",
														"nodeType": "YulTypedName",
														"src": "13446:5:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13453:6:10",
														"nodeType": "YulTypedName",
														"src": "13453:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13461:3:10",
														"nodeType": "YulTypedName",
														"src": "13461:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13469:3:10",
														"nodeType": "YulTypedName",
														"src": "13469:3:10",
														"type": ""
													}
												],
												"src": "13355:327:10"
											},
											{
												"body": {
													"nativeSrc": "13832:147:10",
													"nodeType": "YulBlock",
													"src": "13832:147:10",
													"statements": [
														{
															"nativeSrc": "13843:110:10",
															"nodeType": "YulAssignment",
															"src": "13843:110:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13932:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13932:6:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "13940:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13940:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13949:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13949:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13850:81:10",
																	"nodeType": "YulIdentifier",
																	"src": "13850:81:10"
																},
																"nativeSrc": "13850:103:10",
																"nodeType": "YulFunctionCall",
																"src": "13850:103:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13843:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13843:3:10"
																}
															]
														},
														{
															"nativeSrc": "13963:10:10",
															"nodeType": "YulAssignment",
															"src": "13963:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "13970:3:10",
																"nodeType": "YulIdentifier",
																"src": "13970:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13963:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13963:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13688:291:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13803:3:10",
														"nodeType": "YulTypedName",
														"src": "13803:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13809:6:10",
														"nodeType": "YulTypedName",
														"src": "13809:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13817:6:10",
														"nodeType": "YulTypedName",
														"src": "13817:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13828:3:10",
														"nodeType": "YulTypedName",
														"src": "13828:3:10",
														"type": ""
													}
												],
												"src": "13688:291:10"
											},
											{
												"body": {
													"nativeSrc": "14091:65:10",
													"nodeType": "YulBlock",
													"src": "14091:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14113:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14113:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14121:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14121:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14109:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14109:3:10"
																		},
																		"nativeSrc": "14109:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14109:14:10"
																	},
																	{
																		"hexValue": "43616c6c20657865637574696f6e206661696c6564",
																		"kind": "string",
																		"nativeSrc": "14125:23:10",
																		"nodeType": "YulLiteral",
																		"src": "14125:23:10",
																		"type": "",
																		"value": "Call execution failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14102:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14102:6:10"
																},
																"nativeSrc": "14102:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14102:47:10"
															},
															"nativeSrc": "14102:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14102:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_2796c61c946df02007454e4fe25eeedbdb7345d33153a0e3ee502b088b313018",
												"nativeSrc": "13985:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14083:6:10",
														"nodeType": "YulTypedName",
														"src": "14083:6:10",
														"type": ""
													}
												],
												"src": "13985:171:10"
											},
											{
												"body": {
													"nativeSrc": "14308:220:10",
													"nodeType": "YulBlock",
													"src": "14308:220:10",
													"statements": [
														{
															"nativeSrc": "14318:74:10",
															"nodeType": "YulAssignment",
															"src": "14318:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14384:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14384:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14389:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14389:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14325:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14325:58:10"
																},
																"nativeSrc": "14325:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14325:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14318:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14318:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14490:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14490:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2796c61c946df02007454e4fe25eeedbdb7345d33153a0e3ee502b088b313018",
																	"nativeSrc": "14401:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14401:88:10"
																},
																"nativeSrc": "14401:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14401:93:10"
															},
															"nativeSrc": "14401:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14401:93:10"
														},
														{
															"nativeSrc": "14503:19:10",
															"nodeType": "YulAssignment",
															"src": "14503:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14514:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14514:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14519:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14519:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14510:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14510:3:10"
																},
																"nativeSrc": "14510:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14510:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14503:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14503:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2796c61c946df02007454e4fe25eeedbdb7345d33153a0e3ee502b088b313018_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14162:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14296:3:10",
														"nodeType": "YulTypedName",
														"src": "14296:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14304:3:10",
														"nodeType": "YulTypedName",
														"src": "14304:3:10",
														"type": ""
													}
												],
												"src": "14162:366:10"
											},
											{
												"body": {
													"nativeSrc": "14705:248:10",
													"nodeType": "YulBlock",
													"src": "14705:248:10",
													"statements": [
														{
															"nativeSrc": "14715:26:10",
															"nodeType": "YulAssignment",
															"src": "14715:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14727:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14727:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14738:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14738:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14723:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14723:3:10"
																},
																"nativeSrc": "14723:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14723:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14715:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14715:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14762:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14762:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14773:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14773:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14758:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14758:3:10"
																		},
																		"nativeSrc": "14758:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14758:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14781:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14781:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14787:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14787:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14777:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14777:3:10"
																		},
																		"nativeSrc": "14777:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14777:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14751:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14751:6:10"
																},
																"nativeSrc": "14751:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14751:47:10"
															},
															"nativeSrc": "14751:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14751:47:10"
														},
														{
															"nativeSrc": "14807:139:10",
															"nodeType": "YulAssignment",
															"src": "14807:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14941:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14941:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2796c61c946df02007454e4fe25eeedbdb7345d33153a0e3ee502b088b313018_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14815:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14815:124:10"
																},
																"nativeSrc": "14815:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14815:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14807:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14807:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2796c61c946df02007454e4fe25eeedbdb7345d33153a0e3ee502b088b313018__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14534:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14685:9:10",
														"nodeType": "YulTypedName",
														"src": "14685:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14700:4:10",
														"nodeType": "YulTypedName",
														"src": "14700:4:10",
														"type": ""
													}
												],
												"src": "14534:419:10"
											},
											{
												"body": {
													"nativeSrc": "15081:214:10",
													"nodeType": "YulBlock",
													"src": "15081:214:10",
													"statements": [
														{
															"nativeSrc": "15091:77:10",
															"nodeType": "YulAssignment",
															"src": "15091:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15156:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15156:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15161:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15161:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "15098:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "15098:57:10"
																},
																"nativeSrc": "15098:70:10",
																"nodeType": "YulFunctionCall",
																"src": "15098:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15091:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15091:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "15215:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "15215:5:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15222:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15222:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15227:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15227:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "15178:36:10",
																	"nodeType": "YulIdentifier",
																	"src": "15178:36:10"
																},
																"nativeSrc": "15178:56:10",
																"nodeType": "YulFunctionCall",
																"src": "15178:56:10"
															},
															"nativeSrc": "15178:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "15178:56:10"
														},
														{
															"nativeSrc": "15243:46:10",
															"nodeType": "YulAssignment",
															"src": "15243:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15254:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15254:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "15281:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15281:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "15259:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "15259:21:10"
																		},
																		"nativeSrc": "15259:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15259:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15250:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15250:3:10"
																},
																"nativeSrc": "15250:39:10",
																"nodeType": "YulFunctionCall",
																"src": "15250:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15243:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15243:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "14981:314:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "15054:5:10",
														"nodeType": "YulTypedName",
														"src": "15054:5:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15061:6:10",
														"nodeType": "YulTypedName",
														"src": "15061:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15069:3:10",
														"nodeType": "YulTypedName",
														"src": "15069:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15077:3:10",
														"nodeType": "YulTypedName",
														"src": "15077:3:10",
														"type": ""
													}
												],
												"src": "14981:314:10"
											},
											{
												"body": {
													"nativeSrc": "15501:436:10",
													"nodeType": "YulBlock",
													"src": "15501:436:10",
													"statements": [
														{
															"nativeSrc": "15511:26:10",
															"nodeType": "YulAssignment",
															"src": "15511:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15523:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15523:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15534:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15534:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15519:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15519:3:10"
																},
																"nativeSrc": "15519:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15519:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15511:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15511:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15591:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15591:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15604:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15604:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15615:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15615:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15600:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15600:3:10"
																		},
																		"nativeSrc": "15600:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15600:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15547:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15547:43:10"
																},
																"nativeSrc": "15547:71:10",
																"nodeType": "YulFunctionCall",
																"src": "15547:71:10"
															},
															"nativeSrc": "15547:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "15547:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15639:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15639:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15650:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15650:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15635:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15635:3:10"
																		},
																		"nativeSrc": "15635:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15635:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15659:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15659:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15665:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15665:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15655:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15655:3:10"
																		},
																		"nativeSrc": "15655:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15655:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15628:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15628:6:10"
																},
																"nativeSrc": "15628:48:10",
																"nodeType": "YulFunctionCall",
																"src": "15628:48:10"
															},
															"nativeSrc": "15628:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "15628:48:10"
														},
														{
															"nativeSrc": "15685:94:10",
															"nodeType": "YulAssignment",
															"src": "15685:94:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15757:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15757:6:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "15765:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15765:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "15774:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15774:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "15693:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "15693:63:10"
																},
																"nativeSrc": "15693:86:10",
																"nodeType": "YulFunctionCall",
																"src": "15693:86:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15685:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15685:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15800:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15800:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15811:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15811:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15796:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15796:3:10"
																		},
																		"nativeSrc": "15796:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15796:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15820:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15820:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15826:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15826:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15816:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15816:3:10"
																		},
																		"nativeSrc": "15816:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15816:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15789:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15789:6:10"
																},
																"nativeSrc": "15789:48:10",
																"nodeType": "YulFunctionCall",
																"src": "15789:48:10"
															},
															"nativeSrc": "15789:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "15789:48:10"
														},
														{
															"nativeSrc": "15846:84:10",
															"nodeType": "YulAssignment",
															"src": "15846:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "15916:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15916:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "15925:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15925:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "15854:61:10",
																	"nodeType": "YulIdentifier",
																	"src": "15854:61:10"
																},
																"nativeSrc": "15854:76:10",
																"nodeType": "YulFunctionCall",
																"src": "15854:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15846:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15846:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "15301:636:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15449:9:10",
														"nodeType": "YulTypedName",
														"src": "15449:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15461:6:10",
														"nodeType": "YulTypedName",
														"src": "15461:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15469:6:10",
														"nodeType": "YulTypedName",
														"src": "15469:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15477:6:10",
														"nodeType": "YulTypedName",
														"src": "15477:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15485:6:10",
														"nodeType": "YulTypedName",
														"src": "15485:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15496:4:10",
														"nodeType": "YulTypedName",
														"src": "15496:4:10",
														"type": ""
													}
												],
												"src": "15301:636:10"
											},
											{
												"body": {
													"nativeSrc": "16049:59:10",
													"nodeType": "YulBlock",
													"src": "16049:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16071:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16071:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16079:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16079:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16067:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16067:3:10"
																		},
																		"nativeSrc": "16067:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16067:14:10"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "16083:17:10",
																		"nodeType": "YulLiteral",
																		"src": "16083:17:10",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16060:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16060:6:10"
																},
																"nativeSrc": "16060:41:10",
																"nodeType": "YulFunctionCall",
																"src": "16060:41:10"
															},
															"nativeSrc": "16060:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "16060:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "15943:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16041:6:10",
														"nodeType": "YulTypedName",
														"src": "16041:6:10",
														"type": ""
													}
												],
												"src": "15943:165:10"
											},
											{
												"body": {
													"nativeSrc": "16260:220:10",
													"nodeType": "YulBlock",
													"src": "16260:220:10",
													"statements": [
														{
															"nativeSrc": "16270:74:10",
															"nodeType": "YulAssignment",
															"src": "16270:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16336:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16336:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16341:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16341:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16277:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16277:58:10"
																},
																"nativeSrc": "16277:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16277:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16270:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16270:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16442:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16442:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "16353:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16353:88:10"
																},
																"nativeSrc": "16353:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16353:93:10"
															},
															"nativeSrc": "16353:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16353:93:10"
														},
														{
															"nativeSrc": "16455:19:10",
															"nodeType": "YulAssignment",
															"src": "16455:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16466:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16466:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16471:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16471:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16462:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16462:3:10"
																},
																"nativeSrc": "16462:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16462:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16455:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16455:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16114:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16248:3:10",
														"nodeType": "YulTypedName",
														"src": "16248:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16256:3:10",
														"nodeType": "YulTypedName",
														"src": "16256:3:10",
														"type": ""
													}
												],
												"src": "16114:366:10"
											},
											{
												"body": {
													"nativeSrc": "16657:248:10",
													"nodeType": "YulBlock",
													"src": "16657:248:10",
													"statements": [
														{
															"nativeSrc": "16667:26:10",
															"nodeType": "YulAssignment",
															"src": "16667:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16679:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16679:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16690:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16690:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16675:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16675:3:10"
																},
																"nativeSrc": "16675:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16675:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16667:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16667:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16714:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16714:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16725:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16725:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16710:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16710:3:10"
																		},
																		"nativeSrc": "16710:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16710:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16733:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16733:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16739:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16739:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16729:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16729:3:10"
																		},
																		"nativeSrc": "16729:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16729:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16703:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16703:6:10"
																},
																"nativeSrc": "16703:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16703:47:10"
															},
															"nativeSrc": "16703:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16703:47:10"
														},
														{
															"nativeSrc": "16759:139:10",
															"nodeType": "YulAssignment",
															"src": "16759:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16893:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16893:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16767:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16767:124:10"
																},
																"nativeSrc": "16767:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16767:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16759:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16759:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16486:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16637:9:10",
														"nodeType": "YulTypedName",
														"src": "16637:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16652:4:10",
														"nodeType": "YulTypedName",
														"src": "16652:4:10",
														"type": ""
													}
												],
												"src": "16486:419:10"
											},
											{
												"body": {
													"nativeSrc": "17017:62:10",
													"nodeType": "YulBlock",
													"src": "17017:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17039:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17039:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17047:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17047:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17035:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17035:3:10"
																		},
																		"nativeSrc": "17035:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17035:14:10"
																	},
																	{
																		"hexValue": "416c726561647920617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "17051:20:10",
																		"nodeType": "YulLiteral",
																		"src": "17051:20:10",
																		"type": "",
																		"value": "Already authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17028:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17028:6:10"
																},
																"nativeSrc": "17028:44:10",
																"nodeType": "YulFunctionCall",
																"src": "17028:44:10"
															},
															"nativeSrc": "17028:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "17028:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2",
												"nativeSrc": "16911:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17009:6:10",
														"nodeType": "YulTypedName",
														"src": "17009:6:10",
														"type": ""
													}
												],
												"src": "16911:168:10"
											},
											{
												"body": {
													"nativeSrc": "17231:220:10",
													"nodeType": "YulBlock",
													"src": "17231:220:10",
													"statements": [
														{
															"nativeSrc": "17241:74:10",
															"nodeType": "YulAssignment",
															"src": "17241:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17307:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17307:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17312:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17312:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17248:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17248:58:10"
																},
																"nativeSrc": "17248:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17248:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17241:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17241:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17413:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17413:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2",
																	"nativeSrc": "17324:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17324:88:10"
																},
																"nativeSrc": "17324:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17324:93:10"
															},
															"nativeSrc": "17324:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17324:93:10"
														},
														{
															"nativeSrc": "17426:19:10",
															"nodeType": "YulAssignment",
															"src": "17426:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17437:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17437:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17442:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17442:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17433:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17433:3:10"
																},
																"nativeSrc": "17433:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17433:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17426:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17426:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17085:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17219:3:10",
														"nodeType": "YulTypedName",
														"src": "17219:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17227:3:10",
														"nodeType": "YulTypedName",
														"src": "17227:3:10",
														"type": ""
													}
												],
												"src": "17085:366:10"
											},
											{
												"body": {
													"nativeSrc": "17628:248:10",
													"nodeType": "YulBlock",
													"src": "17628:248:10",
													"statements": [
														{
															"nativeSrc": "17638:26:10",
															"nodeType": "YulAssignment",
															"src": "17638:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17650:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17650:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17661:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17661:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17646:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17646:3:10"
																},
																"nativeSrc": "17646:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17646:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17638:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17638:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17685:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17685:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17696:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17696:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17681:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17681:3:10"
																		},
																		"nativeSrc": "17681:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17681:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17704:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17704:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17710:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17710:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17700:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17700:3:10"
																		},
																		"nativeSrc": "17700:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17700:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17674:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17674:6:10"
																},
																"nativeSrc": "17674:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17674:47:10"
															},
															"nativeSrc": "17674:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17674:47:10"
														},
														{
															"nativeSrc": "17730:139:10",
															"nodeType": "YulAssignment",
															"src": "17730:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17864:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17864:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17738:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17738:124:10"
																},
																"nativeSrc": "17738:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17738:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17730:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17730:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17457:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17608:9:10",
														"nodeType": "YulTypedName",
														"src": "17608:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17623:4:10",
														"nodeType": "YulTypedName",
														"src": "17623:4:10",
														"type": ""
													}
												],
												"src": "17457:419:10"
											},
											{
												"body": {
													"nativeSrc": "17988:65:10",
													"nodeType": "YulBlock",
													"src": "17988:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18010:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18010:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18018:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18018:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18006:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18006:3:10"
																		},
																		"nativeSrc": "18006:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18006:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "18022:23:10",
																		"nodeType": "YulLiteral",
																		"src": "18022:23:10",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17999:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17999:6:10"
																},
																"nativeSrc": "17999:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17999:47:10"
															},
															"nativeSrc": "17999:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17999:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nativeSrc": "17882:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17980:6:10",
														"nodeType": "YulTypedName",
														"src": "17980:6:10",
														"type": ""
													}
												],
												"src": "17882:171:10"
											},
											{
												"body": {
													"nativeSrc": "18205:220:10",
													"nodeType": "YulBlock",
													"src": "18205:220:10",
													"statements": [
														{
															"nativeSrc": "18215:74:10",
															"nodeType": "YulAssignment",
															"src": "18215:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18281:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18281:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18286:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18286:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18222:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18222:58:10"
																},
																"nativeSrc": "18222:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18222:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18215:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18215:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18387:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18387:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nativeSrc": "18298:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18298:88:10"
																},
																"nativeSrc": "18298:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18298:93:10"
															},
															"nativeSrc": "18298:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18298:93:10"
														},
														{
															"nativeSrc": "18400:19:10",
															"nodeType": "YulAssignment",
															"src": "18400:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18411:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18411:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18416:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18416:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18407:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18407:3:10"
																},
																"nativeSrc": "18407:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18407:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18400:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18059:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18193:3:10",
														"nodeType": "YulTypedName",
														"src": "18193:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18201:3:10",
														"nodeType": "YulTypedName",
														"src": "18201:3:10",
														"type": ""
													}
												],
												"src": "18059:366:10"
											},
											{
												"body": {
													"nativeSrc": "18602:248:10",
													"nodeType": "YulBlock",
													"src": "18602:248:10",
													"statements": [
														{
															"nativeSrc": "18612:26:10",
															"nodeType": "YulAssignment",
															"src": "18612:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18624:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18624:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18635:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18635:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18620:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18620:3:10"
																},
																"nativeSrc": "18620:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18620:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18612:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18612:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18659:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18659:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18670:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18670:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18655:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18655:3:10"
																		},
																		"nativeSrc": "18655:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18655:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18678:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18678:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18684:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18684:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18674:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18674:3:10"
																		},
																		"nativeSrc": "18674:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18674:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18648:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18648:6:10"
																},
																"nativeSrc": "18648:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18648:47:10"
															},
															"nativeSrc": "18648:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18648:47:10"
														},
														{
															"nativeSrc": "18704:139:10",
															"nodeType": "YulAssignment",
															"src": "18704:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18838:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18838:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18712:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18712:124:10"
																},
																"nativeSrc": "18712:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18712:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18704:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18704:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18431:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18582:9:10",
														"nodeType": "YulTypedName",
														"src": "18582:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18597:4:10",
														"nodeType": "YulTypedName",
														"src": "18597:4:10",
														"type": ""
													}
												],
												"src": "18431:419:10"
											},
											{
												"body": {
													"nativeSrc": "18962:69:10",
													"nodeType": "YulBlock",
													"src": "18962:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18984:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18984:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18992:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18992:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18980:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18980:3:10"
																		},
																		"nativeSrc": "18980:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18980:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420726563697069656e742061646472657373",
																		"kind": "string",
																		"nativeSrc": "18996:27:10",
																		"nodeType": "YulLiteral",
																		"src": "18996:27:10",
																		"type": "",
																		"value": "Invalid recipient address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18973:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18973:6:10"
																},
																"nativeSrc": "18973:51:10",
																"nodeType": "YulFunctionCall",
																"src": "18973:51:10"
															},
															"nativeSrc": "18973:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "18973:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
												"nativeSrc": "18856:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18954:6:10",
														"nodeType": "YulTypedName",
														"src": "18954:6:10",
														"type": ""
													}
												],
												"src": "18856:175:10"
											},
											{
												"body": {
													"nativeSrc": "19183:220:10",
													"nodeType": "YulBlock",
													"src": "19183:220:10",
													"statements": [
														{
															"nativeSrc": "19193:74:10",
															"nodeType": "YulAssignment",
															"src": "19193:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19259:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19259:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19264:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19264:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19200:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19200:58:10"
																},
																"nativeSrc": "19200:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19200:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19193:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19193:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19365:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19365:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																	"nativeSrc": "19276:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19276:88:10"
																},
																"nativeSrc": "19276:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19276:93:10"
															},
															"nativeSrc": "19276:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19276:93:10"
														},
														{
															"nativeSrc": "19378:19:10",
															"nodeType": "YulAssignment",
															"src": "19378:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19389:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19389:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19394:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19394:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19385:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19385:3:10"
																},
																"nativeSrc": "19385:12:10",
																"nodeType": "YulFunctionCall",
																"src": "19385:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19378:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19378:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19037:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19171:3:10",
														"nodeType": "YulTypedName",
														"src": "19171:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19179:3:10",
														"nodeType": "YulTypedName",
														"src": "19179:3:10",
														"type": ""
													}
												],
												"src": "19037:366:10"
											},
											{
												"body": {
													"nativeSrc": "19580:248:10",
													"nodeType": "YulBlock",
													"src": "19580:248:10",
													"statements": [
														{
															"nativeSrc": "19590:26:10",
															"nodeType": "YulAssignment",
															"src": "19590:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19602:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19602:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19613:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19613:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19598:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19598:3:10"
																},
																"nativeSrc": "19598:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19598:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19590:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19590:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19637:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19637:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19648:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19648:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19633:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19633:3:10"
																		},
																		"nativeSrc": "19633:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19633:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19656:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19656:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19662:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19662:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19652:3:10"
																		},
																		"nativeSrc": "19652:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19652:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19626:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19626:6:10"
																},
																"nativeSrc": "19626:47:10",
																"nodeType": "YulFunctionCall",
																"src": "19626:47:10"
															},
															"nativeSrc": "19626:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "19626:47:10"
														},
														{
															"nativeSrc": "19682:139:10",
															"nodeType": "YulAssignment",
															"src": "19682:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19816:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19816:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19690:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "19690:124:10"
																},
																"nativeSrc": "19690:131:10",
																"nodeType": "YulFunctionCall",
																"src": "19690:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19682:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19682:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19409:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19560:9:10",
														"nodeType": "YulTypedName",
														"src": "19560:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19575:4:10",
														"nodeType": "YulTypedName",
														"src": "19575:4:10",
														"type": ""
													}
												],
												"src": "19409:419:10"
											},
											{
												"body": {
													"nativeSrc": "19940:75:10",
													"nodeType": "YulBlock",
													"src": "19940:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19962:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19962:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19970:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19970:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19958:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19958:3:10"
																		},
																		"nativeSrc": "19958:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19958:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "19974:33:10",
																		"nodeType": "YulLiteral",
																		"src": "19974:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19951:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19951:6:10"
																},
																"nativeSrc": "19951:57:10",
																"nodeType": "YulFunctionCall",
																"src": "19951:57:10"
															},
															"nativeSrc": "19951:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "19951:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "19834:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19932:6:10",
														"nodeType": "YulTypedName",
														"src": "19932:6:10",
														"type": ""
													}
												],
												"src": "19834:181:10"
											},
											{
												"body": {
													"nativeSrc": "20167:220:10",
													"nodeType": "YulBlock",
													"src": "20167:220:10",
													"statements": [
														{
															"nativeSrc": "20177:74:10",
															"nodeType": "YulAssignment",
															"src": "20177:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20243:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20243:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20248:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20248:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20184:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "20184:58:10"
																},
																"nativeSrc": "20184:67:10",
																"nodeType": "YulFunctionCall",
																"src": "20184:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20177:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20177:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20349:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20349:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "20260:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "20260:88:10"
																},
																"nativeSrc": "20260:93:10",
																"nodeType": "YulFunctionCall",
																"src": "20260:93:10"
															},
															"nativeSrc": "20260:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "20260:93:10"
														},
														{
															"nativeSrc": "20362:19:10",
															"nodeType": "YulAssignment",
															"src": "20362:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20373:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20373:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20378:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20378:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20369:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20369:3:10"
																},
																"nativeSrc": "20369:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20369:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20362:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20362:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20021:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20155:3:10",
														"nodeType": "YulTypedName",
														"src": "20155:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20163:3:10",
														"nodeType": "YulTypedName",
														"src": "20163:3:10",
														"type": ""
													}
												],
												"src": "20021:366:10"
											},
											{
												"body": {
													"nativeSrc": "20564:248:10",
													"nodeType": "YulBlock",
													"src": "20564:248:10",
													"statements": [
														{
															"nativeSrc": "20574:26:10",
															"nodeType": "YulAssignment",
															"src": "20574:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20586:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20586:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20597:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20597:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20582:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20582:3:10"
																},
																"nativeSrc": "20582:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20582:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20574:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20574:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20621:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20621:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20632:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20632:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20617:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20617:3:10"
																		},
																		"nativeSrc": "20617:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20617:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20640:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20640:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20646:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20646:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20636:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20636:3:10"
																		},
																		"nativeSrc": "20636:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20636:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20610:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20610:6:10"
																},
																"nativeSrc": "20610:47:10",
																"nodeType": "YulFunctionCall",
																"src": "20610:47:10"
															},
															"nativeSrc": "20610:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "20610:47:10"
														},
														{
															"nativeSrc": "20666:139:10",
															"nodeType": "YulAssignment",
															"src": "20666:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20800:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20800:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20674:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "20674:124:10"
																},
																"nativeSrc": "20674:131:10",
																"nodeType": "YulFunctionCall",
																"src": "20674:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20666:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20666:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20393:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20544:9:10",
														"nodeType": "YulTypedName",
														"src": "20544:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20559:4:10",
														"nodeType": "YulTypedName",
														"src": "20559:4:10",
														"type": ""
													}
												],
												"src": "20393:419:10"
											},
											{
												"body": {
													"nativeSrc": "20944:206:10",
													"nodeType": "YulBlock",
													"src": "20944:206:10",
													"statements": [
														{
															"nativeSrc": "20954:26:10",
															"nodeType": "YulAssignment",
															"src": "20954:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20966:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20966:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20977:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20977:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20962:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20962:3:10"
																},
																"nativeSrc": "20962:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20962:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20954:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20954:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21034:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21034:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21047:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21047:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21058:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21058:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21043:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21043:3:10"
																		},
																		"nativeSrc": "21043:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21043:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20990:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20990:43:10"
																},
																"nativeSrc": "20990:71:10",
																"nodeType": "YulFunctionCall",
																"src": "20990:71:10"
															},
															"nativeSrc": "20990:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "20990:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21115:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21115:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21128:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21128:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21139:2:10",
																				"nodeType": "YulLiteral",
																				"src": "21139:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21124:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21124:3:10"
																		},
																		"nativeSrc": "21124:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21124:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21071:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21071:43:10"
																},
																"nativeSrc": "21071:72:10",
																"nodeType": "YulFunctionCall",
																"src": "21071:72:10"
															},
															"nativeSrc": "21071:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "21071:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "20818:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20908:9:10",
														"nodeType": "YulTypedName",
														"src": "20908:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20920:6:10",
														"nodeType": "YulTypedName",
														"src": "20920:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20928:6:10",
														"nodeType": "YulTypedName",
														"src": "20928:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20939:4:10",
														"nodeType": "YulTypedName",
														"src": "20939:4:10",
														"type": ""
													}
												],
												"src": "20818:332:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IERC20_$380(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$380(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$380(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$380(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$380(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$380t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$380(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ether withdrawal failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid target\")\n\n    }\n\n    function abi_encode_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_2796c61c946df02007454e4fe25eeedbdb7345d33153a0e3ee502b088b313018(memPtr) {\n\n        mstore(add(memPtr, 0), \"Call execution failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_2796c61c946df02007454e4fe25eeedbdb7345d33153a0e3ee502b088b313018_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_2796c61c946df02007454e4fe25eeedbdb7345d33153a0e3ee502b088b313018(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2796c61c946df02007454e4fe25eeedbdb7345d33153a0e3ee502b088b313018__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2796c61c946df02007454e4fe25eeedbdb7345d33153a0e3ee502b088b313018_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value1, value2,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid recipient address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610089575f3560e01c80639e5d4c49116100585780639e5d4c49146101be578063b9181611146101fa578063cf1c316a14610236578063f2fde38b1461025e578063f5537ede14610286576100de565b80633bed33ce1461012e578063485d7d9414610156578063715018a61461017e5780638da5cb5b14610194576100de565b366100de573373ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874346040516100d49190610fd7565b60405180910390a2005b3373ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874346040516101249190610fd7565b60405180910390a2005b348015610139575f5ffd5b50610154600480360381019061014f9190611022565b6102ae565b005b348015610161575f5ffd5b5061017c600480360381019061017791906110a7565b6104c1565b005b348015610189575f5ffd5b506101926105ec565b005b34801561019f575f5ffd5b506101a86105ff565b6040516101b591906110e1565b60405180910390f35b3480156101c9575f5ffd5b506101e460048036038101906101df919061115b565b610626565b6040516101f1919061123c565b60405180910390f35b348015610205575f5ffd5b50610220600480360381019061021b91906110a7565b61087b565b60405161022d9190611276565b60405180910390f35b348015610241575f5ffd5b5061025c600480360381019061025791906110a7565b610898565b005b348015610269575f5ffd5b50610284600480360381019061027f91906110a7565b610a33565b005b348015610291575f5ffd5b506102ac60048036038101906102a791906112ca565b610ab7565b005b6102b66105ff565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610335575060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036b90611374565b60405180910390fd5b61037c610cfe565b804710156103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b6906113dc565b60405180910390fd5b5f3373ffffffffffffffffffffffffffffffffffffffff16826040516103e490611427565b5f6040518083038185875af1925050503d805f811461041e576040519150601f19603f3d011682016040523d82523d5f602084013e610423565b606091505b5050905080610467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045e90611485565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f06097061aeda806b5e9cb4133d9899f332ff0913956567fc0f7ea15e3d19947c836040516104ad9190610fd7565b60405180910390a2506104be610d4d565b50565b6104c9610d56565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610552576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610549906114ed565b60405180910390fd5b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f0fafd0343e6c6f6985727574866da48938c918559eb9521cf9cc0d317ea0f7b460405160405180910390a250565b6105f4610d56565b6105fd5f610ddd565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606106306105ff565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106af575060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b6106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e590611374565b60405180910390fd5b6106f6610cfe565b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b90611555565b60405180910390fd5b5f5f8673ffffffffffffffffffffffffffffffffffffffff1686868660405161078e9291906115a5565b5f6040518083038185875af1925050503d805f81146107c8576040519150601f19603f3d011682016040523d82523d5f602084013e6107cd565b606091505b509150915081610812576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080990611607565b60405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff167fe39b605d485d947e52b62c3b5028a14d5277db44425263c74171a857071543348787878560405161085e9493929190611651565b60405180910390a28092505050610873610d4d565b949350505050565b6002602052805f5260405f205f915054906101000a900460ff1681565b6108a0610d56565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361090e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610905906116e0565b60405180910390fd5b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610998576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098f90611748565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fdd10d14f6ac19e913d4edbb11fd30661531e2ccd0d23f571e9b224f001f0dd0660405160405180910390a250565b610a3b610d56565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610aab575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610aa291906110e1565b60405180910390fd5b610ab481610ddd565b50565b610abf6105ff565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b3e575060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7490611374565b60405180910390fd5b610b85610cfe565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bea906117b0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5890611818565b60405180910390fd5b610c8c82828573ffffffffffffffffffffffffffffffffffffffff16610e9e9092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f9c8515990fd8c61431c4ac8db9b81475f90c292a1dda77731e56c22e64fc764383604051610ce99190610fd7565b60405180910390a3610cf9610d4d565b505050565b600260015403610d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3a90611880565b60405180910390fd5b6002600181905550565b60018081905550565b610d5e610f1d565b73ffffffffffffffffffffffffffffffffffffffff16610d7c6105ff565b73ffffffffffffffffffffffffffffffffffffffff1614610ddb57610d9f610f1d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610dd291906110e1565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f18838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610ed192919061189e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f24565b505050565b5f33905090565b5f5f60205f8451602086015f885af180610f43576040513d5f823e3d81fd5b3d92505f519150505f8214610f5c576001811415610f77565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610fb957836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610fb091906110e1565b60405180910390fd5b50505050565b5f819050919050565b610fd181610fbf565b82525050565b5f602082019050610fea5f830184610fc8565b92915050565b5f5ffd5b5f5ffd5b61100181610fbf565b811461100b575f5ffd5b50565b5f8135905061101c81610ff8565b92915050565b5f6020828403121561103757611036610ff0565b5b5f6110448482850161100e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110768261104d565b9050919050565b6110868161106c565b8114611090575f5ffd5b50565b5f813590506110a18161107d565b92915050565b5f602082840312156110bc576110bb610ff0565b5b5f6110c984828501611093565b91505092915050565b6110db8161106c565b82525050565b5f6020820190506110f45f8301846110d2565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261111b5761111a6110fa565b5b8235905067ffffffffffffffff811115611138576111376110fe565b5b60208301915083600182028301111561115457611153611102565b5b9250929050565b5f5f5f5f6060858703121561117357611172610ff0565b5b5f61118087828801611093565b94505060206111918782880161100e565b935050604085013567ffffffffffffffff8111156111b2576111b1610ff4565b5b6111be87828801611106565b925092505092959194509250565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61120e826111cc565b61121881856111d6565b93506112288185602086016111e6565b611231816111f4565b840191505092915050565b5f6020820190508181035f8301526112548184611204565b905092915050565b5f8115159050919050565b6112708161125c565b82525050565b5f6020820190506112895f830184611267565b92915050565b5f6112998261106c565b9050919050565b6112a98161128f565b81146112b3575f5ffd5b50565b5f813590506112c4816112a0565b92915050565b5f5f5f606084860312156112e1576112e0610ff0565b5b5f6112ee868287016112b6565b93505060206112ff86828701611093565b92505060406113108682870161100e565b9150509250925092565b5f82825260208201905092915050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f61135e600e8361131a565b91506113698261132a565b602082019050919050565b5f6020820190508181035f83015261138b81611352565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6113c660148361131a565b91506113d182611392565b602082019050919050565b5f6020820190508181035f8301526113f3816113ba565b9050919050565b5f81905092915050565b50565b5f6114125f836113fa565b915061141d82611404565b5f82019050919050565b5f61143182611407565b9150819050919050565b7f4574686572207769746864726177616c206661696c65640000000000000000005f82015250565b5f61146f60178361131a565b915061147a8261143b565b602082019050919050565b5f6020820190508181035f83015261149c81611463565b9050919050565b7f41646472657373206e6f7420617574686f72697a6564000000000000000000005f82015250565b5f6114d760168361131a565b91506114e2826114a3565b602082019050919050565b5f6020820190508181035f830152611504816114cb565b9050919050565b7f496e76616c6964207461726765740000000000000000000000000000000000005f82015250565b5f61153f600e8361131a565b915061154a8261150b565b602082019050919050565b5f6020820190508181035f83015261156c81611533565b9050919050565b828183375f83830152505050565b5f61158c83856113fa565b9350611599838584611573565b82840190509392505050565b5f6115b1828486611581565b91508190509392505050565b7f43616c6c20657865637574696f6e206661696c656400000000000000000000005f82015250565b5f6115f160158361131a565b91506115fc826115bd565b602082019050919050565b5f6020820190508181035f83015261161e816115e5565b9050919050565b5f61163083856111d6565b935061163d838584611573565b611646836111f4565b840190509392505050565b5f6060820190506116645f830187610fc8565b8181036020830152611677818587611625565b9050818103604083015261168b8184611204565b905095945050505050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f6116ca600f8361131a565b91506116d582611696565b602082019050919050565b5f6020820190508181035f8301526116f7816116be565b9050919050565b7f416c726561647920617574686f72697a656400000000000000000000000000005f82015250565b5f61173260128361131a565b915061173d826116fe565b602082019050919050565b5f6020820190508181035f83015261175f81611726565b9050919050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f61179a60158361131a565b91506117a582611766565b602082019050919050565b5f6020820190508181035f8301526117c78161178e565b9050919050565b7f496e76616c696420726563697069656e742061646472657373000000000000005f82015250565b5f61180260198361131a565b915061180d826117ce565b602082019050919050565b5f6020820190508181035f83015261182f816117f6565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61186a601f8361131a565b915061187582611836565b602082019050919050565b5f6020820190508181035f8301526118978161185e565b9050919050565b5f6040820190506118b15f8301856110d2565b6118be6020830184610fc8565b939250505056fea2646970667358221220edd7ac8bb35abf9a48f1b5ff98b15f9c931cb511f7c6d5a406f562f4a528c13564736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x89 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5D4C49 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xCF1C316A EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF5537EDE EQ PUSH2 0x286 JUMPI PUSH2 0xDE JUMP JUMPDEST DUP1 PUSH4 0x3BED33CE EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x485D7D94 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x194 JUMPI PUSH2 0xDE JUMP JUMPDEST CALLDATASIZE PUSH2 0xDE JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x2AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x5EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x115B JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x123C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B6 PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x335 JUMPI POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x374 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36B SWAP1 PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x37C PUSH2 0xCFE JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x1427 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x423 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45E SWAP1 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6097061AEDA806B5E9CB4133D9899F332FF0913956567FC0F7EA15E3D19947C DUP4 PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x4BE PUSH2 0xD4D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4C9 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x549 SWAP1 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFAFD0343E6C6F6985727574866DA48938C918559EB9521CF9CC0D317EA0F7B4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x5F4 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x5FD PUSH0 PUSH2 0xDDD JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x630 PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6AF JUMPI POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E5 SWAP1 PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F6 PUSH2 0xCFE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75B SWAP1 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x78E SWAP3 SWAP2 SWAP1 PUSH2 0x15A5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE39B605D485D947E52B62C3B5028A14D5277DB44425263C74171A85707154334 DUP8 DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x85E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP3 POP POP POP PUSH2 0x873 PUSH2 0xD4D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0xD56 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x905 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x998 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98F SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDD10D14F6AC19E913D4EDBB11FD30661531E2CCD0D23F571E9B224F001F0DD06 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xD56 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAAB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA2 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB4 DUP2 PUSH2 0xDDD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xABF PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB3E JUMPI POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB74 SWAP1 PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB85 PUSH2 0xCFE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP1 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC58 SWAP1 PUSH2 0x1818 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8C DUP3 DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9C8515990FD8C61431C4AC8DB9B81475F90C292A1DDA77731E56C22E64FC7643 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xCF9 PUSH2 0xD4D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3A SWAP1 PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD5E PUSH2 0xF1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD7C PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDDB JUMPI PUSH2 0xD9F PUSH2 0xF1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD2 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF18 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xED1 SWAP3 SWAP2 SWAP1 PUSH2 0x189E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF24 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xF43 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xF5C JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xF77 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xFB9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD1 DUP2 PUSH2 0xFBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFEA PUSH0 DUP4 ADD DUP5 PUSH2 0xFC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1001 DUP2 PUSH2 0xFBF JUMP JUMPDEST DUP2 EQ PUSH2 0x100B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x101C DUP2 PUSH2 0xFF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1037 JUMPI PUSH2 0x1036 PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1044 DUP5 DUP3 DUP6 ADD PUSH2 0x100E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1076 DUP3 PUSH2 0x104D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1086 DUP2 PUSH2 0x106C JUMP JUMPDEST DUP2 EQ PUSH2 0x1090 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10A1 DUP2 PUSH2 0x107D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BC JUMPI PUSH2 0x10BB PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C9 DUP5 DUP3 DUP6 ADD PUSH2 0x1093 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10DB DUP2 PUSH2 0x106C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x10D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x111B JUMPI PUSH2 0x111A PUSH2 0x10FA JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1138 JUMPI PUSH2 0x1137 PUSH2 0x10FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1154 JUMPI PUSH2 0x1153 PUSH2 0x1102 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1173 JUMPI PUSH2 0x1172 PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1180 DUP8 DUP3 DUP9 ADD PUSH2 0x1093 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1191 DUP8 DUP3 DUP9 ADD PUSH2 0x100E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B2 JUMPI PUSH2 0x11B1 PUSH2 0xFF4 JUMP JUMPDEST JUMPDEST PUSH2 0x11BE DUP8 DUP3 DUP9 ADD PUSH2 0x1106 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x120E DUP3 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x1218 DUP2 DUP6 PUSH2 0x11D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1228 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11E6 JUMP JUMPDEST PUSH2 0x1231 DUP2 PUSH2 0x11F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1254 DUP2 DUP5 PUSH2 0x1204 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1270 DUP2 PUSH2 0x125C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1289 PUSH0 DUP4 ADD DUP5 PUSH2 0x1267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1299 DUP3 PUSH2 0x106C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A9 DUP2 PUSH2 0x128F JUMP JUMPDEST DUP2 EQ PUSH2 0x12B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12C4 DUP2 PUSH2 0x12A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12E1 JUMPI PUSH2 0x12E0 PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12EE DUP7 DUP3 DUP8 ADD PUSH2 0x12B6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12FF DUP7 DUP3 DUP8 ADD PUSH2 0x1093 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1310 DUP7 DUP3 DUP8 ADD PUSH2 0x100E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x135E PUSH1 0xE DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x1369 DUP3 PUSH2 0x132A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x138B DUP2 PUSH2 0x1352 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13C6 PUSH1 0x14 DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x13D1 DUP3 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13F3 DUP2 PUSH2 0x13BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1412 PUSH0 DUP4 PUSH2 0x13FA JUMP JUMPDEST SWAP2 POP PUSH2 0x141D DUP3 PUSH2 0x1404 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1431 DUP3 PUSH2 0x1407 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207769746864726177616C206661696C6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x146F PUSH1 0x17 DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x147A DUP3 PUSH2 0x143B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x149C DUP2 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646472657373206E6F7420617574686F72697A656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14D7 PUSH1 0x16 DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x14E2 DUP3 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1504 DUP2 PUSH2 0x14CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746172676574000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x153F PUSH1 0xE DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x154A DUP3 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x156C DUP2 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x158C DUP4 DUP6 PUSH2 0x13FA JUMP JUMPDEST SWAP4 POP PUSH2 0x1599 DUP4 DUP6 DUP5 PUSH2 0x1573 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15B1 DUP3 DUP5 DUP7 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43616C6C20657865637574696F6E206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15F1 PUSH1 0x15 DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x15FC DUP3 PUSH2 0x15BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x161E DUP2 PUSH2 0x15E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1630 DUP4 DUP6 PUSH2 0x11D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x163D DUP4 DUP6 DUP5 PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x1646 DUP4 PUSH2 0x11F4 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1664 PUSH0 DUP4 ADD DUP8 PUSH2 0xFC8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1677 DUP2 DUP6 DUP8 PUSH2 0x1625 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x168B DUP2 DUP5 PUSH2 0x1204 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16CA PUSH1 0xF DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x16D5 DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16F7 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920617574686F72697A65640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1732 PUSH1 0x12 DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x173D DUP3 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x175F DUP2 PUSH2 0x1726 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x179A PUSH1 0x15 DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x17A5 DUP3 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17C7 DUP2 PUSH2 0x178E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1802 PUSH1 0x19 DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x180D DUP3 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x182F DUP2 PUSH2 0x17F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x186A PUSH1 0x1F DUP4 PUSH2 0x131A JUMP JUMPDEST SWAP2 POP PUSH2 0x1875 DUP3 PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1897 DUP2 PUSH2 0x185E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18B1 PUSH0 DUP4 ADD DUP6 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x18BE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFC8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xD7 0xAC DUP12 0xB3 GAS 0xBF SWAP11 BASEFEE CALL 0xB5 SELFDESTRUCT SWAP9 0xB1 PUSH0 SWAP13 SWAP4 SHR 0xB5 GT 0xF7 0xC6 0xD5 LOG4 MOD CREATE2 PUSH3 0xF4A528 0xC1 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "568:3754:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4146:10;4137:31;;;4158:9;4137:31;;;;;;:::i;:::-;;;;;;;;568:3754;;4291:10;4282:31;;;4303:9;4282:31;;;;;;:::i;:::-;;;;;;;;568:3754;3130:331;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2072:211;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2561:436:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;716:42;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1698:261;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3693:344:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3130:331;1336:7;:5;:7::i;:::-;1322:21;;:10;:21;;;:47;;;;1347:10;:22;1358:10;1347:22;;;;;;;;;;;;;;;;;;;;;;;;;1322:47;1314:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:4::1;:19;:21::i;:::-;3249:6:9::2;3224:21;:31;;3216:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3291:12;3317:10;3309:24;;3341:6;3309:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3290:62;;;3370:7;3362:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;3435:10;3420:34;;;3447:6;3420:34;;;;;;:::i;:::-;;;;;;;;3206:255;2303:20:4::1;:18;:20::i;:::-;3130:331:9::0;:::o;2072:211::-;1531:13:0;:11;:13::i;:::-;2152:10:9::1;:19;2163:7;2152:19;;;;;;;;;;;;;;;;;;;;;;;;;2144:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2230:5;2208:10;:19;2219:7;2208:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2268:7;2250:26;;;;;;;;;;;;2072:211:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2561:436:9:-;2712:19;1336:7;:5;:7::i;:::-;1322:21;;:10;:21;;;:47;;;;1347:10;:22;1358:10;1347:22;;;;;;;;;;;;;;;;;;;;;;;;;1322:47;1314:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:4::1;:19;:21::i;:::-;2773:1:9::2;2755:20;;:6;:20;;::::0;2747:47:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2805:12;2819:16;2839:6;:11;;2858:5;2865:4;;2839:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2804:66;;;;2888:7;2880:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2945:6;2936:34;;;2953:5;2960:4;;2966:3;2936:34;;;;;;;;;:::i;:::-;;;;;;;;2987:3;2980:10;;;;2303:20:4::1;:18;:20::i;:::-;2561:436:9::0;;;;;;:::o;716:42::-;;;;;;;;;;;;;;;;;;;;;;:::o;1698:261::-;1531:13:0;:11;:13::i;:::-;1794:1:9::1;1775:21;;:7;:21;;::::0;1767:49:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1835:10;:19;1846:7;1835:19;;;;;;;;;;;;;;;;;;;;;;;;;1834:20;1826:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1909:4;1887:10;:19;1898:7;1887:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1944:7;1928:24;;;;;;;;;;;;1698:261:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3693:344:9:-;1336:7;:5;:7::i;:::-;1322:21;;:10;:21;;;:47;;;;1347:10;:22;1358:10;1347:22;;;;;;;;;;;;;;;;;;;;;;;;;1322:47;1314:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:4::1;:19;:21::i;:::-;3839:1:9::2;3813:28;;3821:5;3813:28;;::::0;3805:62:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;3899:1;3885:16;;:2;:16;;::::0;3877:54:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;3941:30;3960:2;3964:6;3941:5;:18;;;;:30;;;;;:::i;:::-;4019:2;3986:44;;4011:5;3986:44;;;4023:6;3986:44;;;;;;:::i;:::-;;;;;;;;2303:20:4::1;:18;:20::i;:::-;3693:344:9::0;;;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;7686:720:6:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:222::-;2436:4;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2343:222;;;;:::o;2571:117::-;2680:1;2677;2670:12;2694:117;2803:1;2800;2793:12;2817:117;2926:1;2923;2916:12;2953:552;3010:8;3020:6;3070:3;3063:4;3055:6;3051:17;3047:27;3037:122;;3078:79;;:::i;:::-;3037:122;3191:6;3178:20;3168:30;;3221:18;3213:6;3210:30;3207:117;;;3243:79;;:::i;:::-;3207:117;3357:4;3349:6;3345:17;3333:29;;3411:3;3403:4;3395:6;3391:17;3381:8;3377:32;3374:41;3371:128;;;3418:79;;:::i;:::-;3371:128;2953:552;;;;;:::o;3511:817::-;3599:6;3607;3615;3623;3672:2;3660:9;3651:7;3647:23;3643:32;3640:119;;;3678:79;;:::i;:::-;3640:119;3798:1;3823:53;3868:7;3859:6;3848:9;3844:22;3823:53;:::i;:::-;3813:63;;3769:117;3925:2;3951:53;3996:7;3987:6;3976:9;3972:22;3951:53;:::i;:::-;3941:63;;3896:118;4081:2;4070:9;4066:18;4053:32;4112:18;4104:6;4101:30;4098:117;;;4134:79;;:::i;:::-;4098:117;4247:64;4303:7;4294:6;4283:9;4279:22;4247:64;:::i;:::-;4229:82;;;;4024:297;3511:817;;;;;;;:::o;4334:98::-;4385:6;4419:5;4413:12;4403:22;;4334:98;;;:::o;4438:168::-;4521:11;4555:6;4550:3;4543:19;4595:4;4590:3;4586:14;4571:29;;4438:168;;;;:::o;4612:139::-;4701:6;4696:3;4691;4685:23;4742:1;4733:6;4728:3;4724:16;4717:27;4612:139;;;:::o;4757:102::-;4798:6;4849:2;4845:7;4840:2;4833:5;4829:14;4825:28;4815:38;;4757:102;;;:::o;4865:373::-;4951:3;4979:38;5011:5;4979:38;:::i;:::-;5033:70;5096:6;5091:3;5033:70;:::i;:::-;5026:77;;5112:65;5170:6;5165:3;5158:4;5151:5;5147:16;5112:65;:::i;:::-;5202:29;5224:6;5202:29;:::i;:::-;5197:3;5193:39;5186:46;;4955:283;4865:373;;;;:::o;5244:309::-;5355:4;5393:2;5382:9;5378:18;5370:26;;5442:9;5436:4;5432:20;5428:1;5417:9;5413:17;5406:47;5470:76;5541:4;5532:6;5470:76;:::i;:::-;5462:84;;5244:309;;;;:::o;5559:90::-;5593:7;5636:5;5629:13;5622:21;5611:32;;5559:90;;;:::o;5655:109::-;5736:21;5751:5;5736:21;:::i;:::-;5731:3;5724:34;5655:109;;:::o;5770:210::-;5857:4;5895:2;5884:9;5880:18;5872:26;;5908:65;5970:1;5959:9;5955:17;5946:6;5908:65;:::i;:::-;5770:210;;;;:::o;5986:110::-;6037:7;6066:24;6084:5;6066:24;:::i;:::-;6055:35;;5986:110;;;:::o;6102:150::-;6189:38;6221:5;6189:38;:::i;:::-;6182:5;6179:49;6169:77;;6242:1;6239;6232:12;6169:77;6102:150;:::o;6258:167::-;6318:5;6356:6;6343:20;6334:29;;6372:47;6413:5;6372:47;:::i;:::-;6258:167;;;;:::o;6431:647::-;6522:6;6530;6538;6587:2;6575:9;6566:7;6562:23;6558:32;6555:119;;;6593:79;;:::i;:::-;6555:119;6713:1;6738:67;6797:7;6788:6;6777:9;6773:22;6738:67;:::i;:::-;6728:77;;6684:131;6854:2;6880:53;6925:7;6916:6;6905:9;6901:22;6880:53;:::i;:::-;6870:63;;6825:118;6982:2;7008:53;7053:7;7044:6;7033:9;7029:22;7008:53;:::i;:::-;6998:63;;6953:118;6431:647;;;;;:::o;7084:169::-;7168:11;7202:6;7197:3;7190:19;7242:4;7237:3;7233:14;7218:29;;7084:169;;;;:::o;7259:164::-;7399:16;7395:1;7387:6;7383:14;7376:40;7259:164;:::o;7429:366::-;7571:3;7592:67;7656:2;7651:3;7592:67;:::i;:::-;7585:74;;7668:93;7757:3;7668:93;:::i;:::-;7786:2;7781:3;7777:12;7770:19;;7429:366;;;:::o;7801:419::-;7967:4;8005:2;7994:9;7990:18;7982:26;;8054:9;8048:4;8044:20;8040:1;8029:9;8025:17;8018:47;8082:131;8208:4;8082:131;:::i;:::-;8074:139;;7801:419;;;:::o;8226:170::-;8366:22;8362:1;8354:6;8350:14;8343:46;8226:170;:::o;8402:366::-;8544:3;8565:67;8629:2;8624:3;8565:67;:::i;:::-;8558:74;;8641:93;8730:3;8641:93;:::i;:::-;8759:2;8754:3;8750:12;8743:19;;8402:366;;;:::o;8774:419::-;8940:4;8978:2;8967:9;8963:18;8955:26;;9027:9;9021:4;9017:20;9013:1;9002:9;8998:17;8991:47;9055:131;9181:4;9055:131;:::i;:::-;9047:139;;8774:419;;;:::o;9199:147::-;9300:11;9337:3;9322:18;;9199:147;;;;:::o;9352:114::-;;:::o;9472:398::-;9631:3;9652:83;9733:1;9728:3;9652:83;:::i;:::-;9645:90;;9744:93;9833:3;9744:93;:::i;:::-;9862:1;9857:3;9853:11;9846:18;;9472:398;;;:::o;9876:379::-;10060:3;10082:147;10225:3;10082:147;:::i;:::-;10075:154;;10246:3;10239:10;;9876:379;;;:::o;10261:173::-;10401:25;10397:1;10389:6;10385:14;10378:49;10261:173;:::o;10440:366::-;10582:3;10603:67;10667:2;10662:3;10603:67;:::i;:::-;10596:74;;10679:93;10768:3;10679:93;:::i;:::-;10797:2;10792:3;10788:12;10781:19;;10440:366;;;:::o;10812:419::-;10978:4;11016:2;11005:9;11001:18;10993:26;;11065:9;11059:4;11055:20;11051:1;11040:9;11036:17;11029:47;11093:131;11219:4;11093:131;:::i;:::-;11085:139;;10812:419;;;:::o;11237:172::-;11377:24;11373:1;11365:6;11361:14;11354:48;11237:172;:::o;11415:366::-;11557:3;11578:67;11642:2;11637:3;11578:67;:::i;:::-;11571:74;;11654:93;11743:3;11654:93;:::i;:::-;11772:2;11767:3;11763:12;11756:19;;11415:366;;;:::o;11787:419::-;11953:4;11991:2;11980:9;11976:18;11968:26;;12040:9;12034:4;12030:20;12026:1;12015:9;12011:17;12004:47;12068:131;12194:4;12068:131;:::i;:::-;12060:139;;11787:419;;;:::o;12212:164::-;12352:16;12348:1;12340:6;12336:14;12329:40;12212:164;:::o;12382:366::-;12524:3;12545:67;12609:2;12604:3;12545:67;:::i;:::-;12538:74;;12621:93;12710:3;12621:93;:::i;:::-;12739:2;12734:3;12730:12;12723:19;;12382:366;;;:::o;12754:419::-;12920:4;12958:2;12947:9;12943:18;12935:26;;13007:9;13001:4;12997:20;12993:1;12982:9;12978:17;12971:47;13035:131;13161:4;13035:131;:::i;:::-;13027:139;;12754:419;;;:::o;13179:148::-;13277:6;13272:3;13267;13254:30;13318:1;13309:6;13304:3;13300:16;13293:27;13179:148;;;:::o;13355:327::-;13469:3;13490:88;13571:6;13566:3;13490:88;:::i;:::-;13483:95;;13588:56;13637:6;13632:3;13625:5;13588:56;:::i;:::-;13669:6;13664:3;13660:16;13653:23;;13355:327;;;;;:::o;13688:291::-;13828:3;13850:103;13949:3;13940:6;13932;13850:103;:::i;:::-;13843:110;;13970:3;13963:10;;13688:291;;;;;:::o;13985:171::-;14125:23;14121:1;14113:6;14109:14;14102:47;13985:171;:::o;14162:366::-;14304:3;14325:67;14389:2;14384:3;14325:67;:::i;:::-;14318:74;;14401:93;14490:3;14401:93;:::i;:::-;14519:2;14514:3;14510:12;14503:19;;14162:366;;;:::o;14534:419::-;14700:4;14738:2;14727:9;14723:18;14715:26;;14787:9;14781:4;14777:20;14773:1;14762:9;14758:17;14751:47;14815:131;14941:4;14815:131;:::i;:::-;14807:139;;14534:419;;;:::o;14981:314::-;15077:3;15098:70;15161:6;15156:3;15098:70;:::i;:::-;15091:77;;15178:56;15227:6;15222:3;15215:5;15178:56;:::i;:::-;15259:29;15281:6;15259:29;:::i;:::-;15254:3;15250:39;15243:46;;14981:314;;;;;:::o;15301:636::-;15496:4;15534:2;15523:9;15519:18;15511:26;;15547:71;15615:1;15604:9;15600:17;15591:6;15547:71;:::i;:::-;15665:9;15659:4;15655:20;15650:2;15639:9;15635:18;15628:48;15693:86;15774:4;15765:6;15757;15693:86;:::i;:::-;15685:94;;15826:9;15820:4;15816:20;15811:2;15800:9;15796:18;15789:48;15854:76;15925:4;15916:6;15854:76;:::i;:::-;15846:84;;15301:636;;;;;;;:::o;15943:165::-;16083:17;16079:1;16071:6;16067:14;16060:41;15943:165;:::o;16114:366::-;16256:3;16277:67;16341:2;16336:3;16277:67;:::i;:::-;16270:74;;16353:93;16442:3;16353:93;:::i;:::-;16471:2;16466:3;16462:12;16455:19;;16114:366;;;:::o;16486:419::-;16652:4;16690:2;16679:9;16675:18;16667:26;;16739:9;16733:4;16729:20;16725:1;16714:9;16710:17;16703:47;16767:131;16893:4;16767:131;:::i;:::-;16759:139;;16486:419;;;:::o;16911:168::-;17051:20;17047:1;17039:6;17035:14;17028:44;16911:168;:::o;17085:366::-;17227:3;17248:67;17312:2;17307:3;17248:67;:::i;:::-;17241:74;;17324:93;17413:3;17324:93;:::i;:::-;17442:2;17437:3;17433:12;17426:19;;17085:366;;;:::o;17457:419::-;17623:4;17661:2;17650:9;17646:18;17638:26;;17710:9;17704:4;17700:20;17696:1;17685:9;17681:17;17674:47;17738:131;17864:4;17738:131;:::i;:::-;17730:139;;17457:419;;;:::o;17882:171::-;18022:23;18018:1;18010:6;18006:14;17999:47;17882:171;:::o;18059:366::-;18201:3;18222:67;18286:2;18281:3;18222:67;:::i;:::-;18215:74;;18298:93;18387:3;18298:93;:::i;:::-;18416:2;18411:3;18407:12;18400:19;;18059:366;;;:::o;18431:419::-;18597:4;18635:2;18624:9;18620:18;18612:26;;18684:9;18678:4;18674:20;18670:1;18659:9;18655:17;18648:47;18712:131;18838:4;18712:131;:::i;:::-;18704:139;;18431:419;;;:::o;18856:175::-;18996:27;18992:1;18984:6;18980:14;18973:51;18856:175;:::o;19037:366::-;19179:3;19200:67;19264:2;19259:3;19200:67;:::i;:::-;19193:74;;19276:93;19365:3;19276:93;:::i;:::-;19394:2;19389:3;19385:12;19378:19;;19037:366;;;:::o;19409:419::-;19575:4;19613:2;19602:9;19598:18;19590:26;;19662:9;19656:4;19652:20;19648:1;19637:9;19633:17;19626:47;19690:131;19816:4;19690:131;:::i;:::-;19682:139;;19409:419;;;:::o;19834:181::-;19974:33;19970:1;19962:6;19958:14;19951:57;19834:181;:::o;20021:366::-;20163:3;20184:67;20248:2;20243:3;20184:67;:::i;:::-;20177:74;;20260:93;20349:3;20260:93;:::i;:::-;20378:2;20373:3;20369:12;20362:19;;20021:366;;;:::o;20393:419::-;20559:4;20597:2;20586:9;20582:18;20574:26;;20646:9;20640:4;20636:20;20632:1;20621:9;20617:17;20610:47;20674:131;20800:4;20674:131;:::i;:::-;20666:139;;20393:419;;;:::o;20818:332::-;20939:4;20977:2;20966:9;20962:18;20954:26;;20990:71;21058:1;21047:9;21043:17;21034:6;20990:71;:::i;:::-;21071:72;21139:2;21128:9;21124:18;21115:6;21071:72;:::i;:::-;20818:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1279000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "1743",
								"addAuthorized(address)": "infinite",
								"authorized(address)": "2855",
								"executeCall(address,uint256,bytes)": "infinite",
								"owner()": "2581",
								"removeAuthorized(address)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"transferToken(address,address,uint256)": "infinite",
								"withdrawEther(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 568,
									"end": 4322,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 568,
									"end": 4322,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 568,
									"end": 4322,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1587,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1587,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1587,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1587,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1480,
									"end": 1587,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1587,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1480,
									"end": 1587,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1480,
									"end": 1587,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1587,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1480,
									"end": 1587,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1587,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1502,
									"end": 1512,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 4322,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 568,
									"end": 4322,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 4322,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 568,
									"end": 4322,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 4322,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 568,
									"end": 4322,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 568,
									"end": 4322,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 568,
									"end": 4322,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 568,
									"end": 4322,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 568,
									"end": 4322,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 568,
									"end": 4322,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220edd7ac8bb35abf9a48f1b5ff98b15f9c931cb511f7c6d5a406f562f4a528c13564736f6c634300081d0033",
									".code": [
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "9E5D4C49"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "9E5D4C49"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "B9181611"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "CF1C316A"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "F5537EDE"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "3BED33CE"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "485D7D94"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4156,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "PUSH",
											"source": 9,
											"value": "88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
										},
										{
											"begin": 4158,
											"end": 4167,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 4137,
											"end": 4168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4168,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4291,
											"end": 4301,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "PUSH",
											"source": 9,
											"value": "88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
										},
										{
											"begin": 4303,
											"end": 4312,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 4282,
											"end": 4313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4313,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 568,
											"end": 4322,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3130,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3130,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2072,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2072,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2561,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2561,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2561,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 716,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 716,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 716,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1698,
											"end": 1959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1698,
											"end": 1959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 3693,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3693,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1336,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1336,
											"end": 1343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1336,
											"end": 1343,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1336,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1357,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1368,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1314,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3255,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3245,
											"modifierDepth": 2,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3255,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3255,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3216,
											"end": 3280,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3216,
											"end": 3280,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3291,
											"end": 3303,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3327,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3333,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3309,
											"end": 3333,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3347,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3309,
											"end": 3352,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3352,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3290,
											"end": 3352,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3290,
											"end": 3352,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3290,
											"end": 3352,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3377,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3362,
											"end": 3405,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3362,
											"end": 3405,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3445,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6097061AEDA806B5E9CB4133D9899F332FF0913956567FC0F7EA15E3D19947C"
										},
										{
											"begin": 3447,
											"end": 3453,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3420,
											"end": 3454,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3454,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3461,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2152,
											"end": 2162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2152,
											"end": 2171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2198,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2144,
											"end": 2198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2230,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2226,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2275,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2250,
											"end": 2276,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FAFD0343E6C6F6985727574866DA48938C918559EB9521CF9CC0D317EA0F7B4"
										},
										{
											"begin": 2250,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2250,
											"end": 2276,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2250,
											"end": 2276,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2276,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2276,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2276,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2276,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2276,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2731,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1336,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1336,
											"end": 1343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1336,
											"end": 1343,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1336,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1357,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1368,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1314,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2774,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2761,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2747,
											"end": 2794,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2747,
											"end": 2794,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2835,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2845,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2850,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2839,
											"end": 2850,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2858,
											"end": 2863,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2865,
											"end": 2869,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2865,
											"end": 2869,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 2839,
											"end": 2870,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2870,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2870,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2870,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2870,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2870,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2888,
											"end": 2895,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2880,
											"end": 2921,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2880,
											"end": 2921,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2951,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E39B605D485D947E52B62C3B5028A14D5277DB44425263C74171A85707154334"
										},
										{
											"begin": 2953,
											"end": 2958,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2964,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2964,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 2969,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2936,
											"end": 2970,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2970,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 2990,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 2990,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 2990,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 2990,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 2990,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 716,
											"end": 758,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 716,
											"end": 758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1775,
											"end": 1796,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1775,
											"end": 1782,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1775,
											"end": 1796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1775,
											"end": 1796,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1775,
											"end": 1796,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 1767,
											"end": 1816,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1767,
											"end": 1816,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1853,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1835,
											"end": 1854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1854,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 1826,
											"end": 1877,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 1826,
											"end": 1877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1887,
											"end": 1897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1905,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 1951,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1928,
											"end": 1952,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "DD10D14F6AC19E913D4EDBB11FD30661531E2CCD0D23F571E9B224F001F0DD06"
										},
										{
											"begin": 1928,
											"end": 1952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1928,
											"end": 1952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1928,
											"end": 1952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1952,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1952,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1952,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1952,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1336,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1336,
											"end": 1343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1336,
											"end": 1343,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1336,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1357,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1368,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1322,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1314,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1314,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3839,
											"end": 3840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3841,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3813,
											"end": 3841,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3821,
											"end": 3826,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3813,
											"end": 3841,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3813,
											"end": 3841,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3805,
											"end": 3867,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3805,
											"end": 3867,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3899,
											"end": 3900,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3901,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3885,
											"end": 3901,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3887,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3901,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3885,
											"end": 3901,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3901,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3877,
											"end": 3931,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3877,
											"end": 3931,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3941,
											"end": 3971,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3960,
											"end": 3962,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 3970,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3941,
											"end": 3946,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3941,
											"end": 3959,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3959,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3941,
											"end": 3959,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3941,
											"end": 3959,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3941,
											"end": 3971,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3941,
											"end": 3971,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3941,
											"end": 3971,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3941,
											"end": 3971,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3971,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3941,
											"end": 3971,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3941,
											"end": 3971,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3941,
											"end": 3971,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4021,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4011,
											"end": 4016,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "9C8515990FD8C61431C4AC8DB9B81475F90C292A1DDA77731E56C22E64FC7643"
										},
										{
											"begin": 4023,
											"end": 4029,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3986,
											"end": 4030,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4030,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 4037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 646,
											"end": 763,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 646,
											"end": 763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 755,
											"end": 756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 757,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2306,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2301,
											"end": 2304,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2294,
											"end": 2331,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2436,
											"end": 2440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2476,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2540,
											"end": 2557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2487,
											"end": 2558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2688,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 2571,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2680,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2682,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2694,
											"end": 2811,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 2694,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2803,
											"end": 2804,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2793,
											"end": 2805,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2817,
											"end": 2934,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 2817,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2924,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 2928,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 3505,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 2953,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3073,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3067,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3055,
											"end": 3061,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3051,
											"end": 3068,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3047,
											"end": 3074,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3037,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 3037,
											"end": 3159,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 3078,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 3078,
											"end": 3157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3157,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 3078,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3037,
											"end": 3159,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 3037,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3198,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3240,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3207,
											"end": 3324,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3207,
											"end": 3324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 3207,
											"end": 3324,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3243,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 3243,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 3243,
											"end": 3322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3243,
											"end": 3322,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 3243,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3207,
											"end": 3324,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 3207,
											"end": 3324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3357,
											"end": 3361,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3411,
											"end": 3414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3403,
											"end": 3407,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3395,
											"end": 3401,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3408,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3389,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3374,
											"end": 3415,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3499,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 3371,
											"end": 3499,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3418,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 3418,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 3418,
											"end": 3497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3418,
											"end": 3497,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 3418,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3499,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 3371,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 3505,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 3505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 3505,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 3505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 3505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 3505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3629,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3674,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3660,
											"end": 3669,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3658,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3670,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3643,
											"end": 3675,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3759,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 3640,
											"end": 3759,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 3678,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 3678,
											"end": 3757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3757,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 3678,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3759,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 3640,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 3868,
											"end": 3875,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3859,
											"end": 3865,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3857,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3866,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 3823,
											"end": 3876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3876,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 3823,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3876,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3769,
											"end": 3886,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3927,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 3996,
											"end": 4003,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 3994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 3951,
											"end": 4004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 4004,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 3951,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 4004,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 4004,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3896,
											"end": 4014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4083,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4070,
											"end": 4079,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4085,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4104,
											"end": 4110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4101,
											"end": 4131,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4098,
											"end": 4215,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4098,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4098,
											"end": 4215,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 4134,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4134,
											"end": 4213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4213,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 4134,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4098,
											"end": 4215,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4098,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4247,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 4303,
											"end": 4310,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4283,
											"end": 4292,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4301,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4247,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4247,
											"end": 4311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4247,
											"end": 4311,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 4247,
											"end": 4311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4311,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4311,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4432,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 4334,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4391,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4424,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4413,
											"end": 4425,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4403,
											"end": 4425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4403,
											"end": 4425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4432,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4432,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4606,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 4438,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4532,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4555,
											"end": 4561,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4550,
											"end": 4553,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4543,
											"end": 4562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 4599,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4590,
											"end": 4593,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4606,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4606,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4751,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 4612,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4707,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4696,
											"end": 4699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4694,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4685,
											"end": 4708,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4733,
											"end": 4739,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4728,
											"end": 4731,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4717,
											"end": 4744,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4757,
											"end": 4859,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 4757,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4851,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4842,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4833,
											"end": 4838,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 4843,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4853,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4815,
											"end": 4853,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4815,
											"end": 4853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4757,
											"end": 4859,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4757,
											"end": 4859,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4757,
											"end": 4859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4757,
											"end": 4859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 5238,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 4865,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4951,
											"end": 4954,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5011,
											"end": 5016,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 4979,
											"end": 5017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 5096,
											"end": 5102,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5094,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 5033,
											"end": 5103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5103,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 5033,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5026,
											"end": 5103,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5026,
											"end": 5103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 5170,
											"end": 5176,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5168,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5162,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5151,
											"end": 5156,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 5112,
											"end": 5177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5177,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 5112,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5202,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 5224,
											"end": 5230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5202,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 5202,
											"end": 5231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5202,
											"end": 5231,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 5202,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5197,
											"end": 5200,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5193,
											"end": 5232,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5186,
											"end": 5232,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5186,
											"end": 5232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4955,
											"end": 5238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 5238,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 5238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 5238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 5238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 5238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5244,
											"end": 5553,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5244,
											"end": 5553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5355,
											"end": 5359,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5395,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5378,
											"end": 5396,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5370,
											"end": 5396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5370,
											"end": 5396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5436,
											"end": 5440,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5432,
											"end": 5452,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5429,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5417,
											"end": 5426,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5413,
											"end": 5430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5406,
											"end": 5453,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5532,
											"end": 5538,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 5470,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5546,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5244,
											"end": 5553,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5244,
											"end": 5553,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5244,
											"end": 5553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5244,
											"end": 5553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5244,
											"end": 5553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5649,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 5559,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5593,
											"end": 5600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5641,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5642,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5622,
											"end": 5643,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5611,
											"end": 5643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5611,
											"end": 5643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5649,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5649,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5655,
											"end": 5764,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 5655,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 5751,
											"end": 5756,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 5736,
											"end": 5757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5757,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 5736,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5731,
											"end": 5734,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5724,
											"end": 5758,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5655,
											"end": 5764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5655,
											"end": 5764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5655,
											"end": 5764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5980,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 5770,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5857,
											"end": 5861,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5895,
											"end": 5897,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5884,
											"end": 5893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5872,
											"end": 5898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5872,
											"end": 5898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 5970,
											"end": 5971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5959,
											"end": 5968,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5955,
											"end": 5972,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5946,
											"end": 5952,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 5908,
											"end": 5973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5973,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 5908,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5980,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5980,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5986,
											"end": 6096,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 5986,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6044,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6066,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 6084,
											"end": 6089,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6066,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 6066,
											"end": 6090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6066,
											"end": 6090,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 6066,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6055,
											"end": 6090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6055,
											"end": 6090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5986,
											"end": 6096,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5986,
											"end": 6096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5986,
											"end": 6096,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5986,
											"end": 6096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6252,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 6102,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6189,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 6221,
											"end": 6226,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6189,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 6189,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6189,
											"end": 6227,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 6189,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6187,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6179,
											"end": 6228,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6169,
											"end": 6246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 6169,
											"end": 6246,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6242,
											"end": 6243,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6239,
											"end": 6240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6244,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6169,
											"end": 6246,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 6169,
											"end": 6246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6258,
											"end": 6425,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 6258,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6318,
											"end": 6323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6356,
											"end": 6362,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6343,
											"end": 6363,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6334,
											"end": 6363,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6334,
											"end": 6363,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6372,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 6413,
											"end": 6418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6372,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 6372,
											"end": 6419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6372,
											"end": 6419,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 6372,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6258,
											"end": 6425,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6258,
											"end": 6425,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6258,
											"end": 6425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6258,
											"end": 6425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6258,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 7078,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 6431,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6587,
											"end": 6589,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6575,
											"end": 6584,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6566,
											"end": 6573,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6585,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6590,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6674,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 6555,
											"end": 6674,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 6593,
											"end": 6672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6674,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 6555,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6713,
											"end": 6714,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6738,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 6797,
											"end": 6804,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6794,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6777,
											"end": 6786,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6773,
											"end": 6795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6738,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 6738,
											"end": 6805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6738,
											"end": 6805,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 6738,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6805,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6684,
											"end": 6815,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6854,
											"end": 6856,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6880,
											"end": 6933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 6925,
											"end": 6932,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6916,
											"end": 6922,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6905,
											"end": 6914,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6901,
											"end": 6923,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6880,
											"end": 6933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 6880,
											"end": 6933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6880,
											"end": 6933,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 6880,
											"end": 6933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6870,
											"end": 6933,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6870,
											"end": 6933,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6825,
											"end": 6943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 6984,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7008,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 7053,
											"end": 7060,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7044,
											"end": 7050,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7033,
											"end": 7042,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 7008,
											"end": 7061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7061,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 7008,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6998,
											"end": 7061,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6998,
											"end": 7061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 7078,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 7078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 7078,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 7078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 7078,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 7078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7253,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 7084,
											"end": 7253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7168,
											"end": 7179,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7202,
											"end": 7208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7190,
											"end": 7209,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7242,
											"end": 7246,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7237,
											"end": 7240,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7233,
											"end": 7247,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7218,
											"end": 7247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7218,
											"end": 7247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7253,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7253,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7259,
											"end": 7423,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 7259,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7415,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 7395,
											"end": 7396,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7387,
											"end": 7393,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7383,
											"end": 7397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7376,
											"end": 7416,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7259,
											"end": 7423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7259,
											"end": 7423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7795,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 7429,
											"end": 7795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7571,
											"end": 7574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7592,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 7656,
											"end": 7658,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 7651,
											"end": 7654,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7592,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 7592,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7592,
											"end": 7659,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 7592,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7585,
											"end": 7659,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7585,
											"end": 7659,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 7757,
											"end": 7760,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 7668,
											"end": 7761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7761,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 7668,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7788,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7781,
											"end": 7784,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7777,
											"end": 7789,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7770,
											"end": 7789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7770,
											"end": 7789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7795,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7801,
											"end": 8220,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 7801,
											"end": 8220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7967,
											"end": 7971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8005,
											"end": 8007,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7994,
											"end": 8003,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7982,
											"end": 8008,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7982,
											"end": 8008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8054,
											"end": 8063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8052,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8044,
											"end": 8064,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8040,
											"end": 8041,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8029,
											"end": 8038,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8025,
											"end": 8042,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8018,
											"end": 8065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 8208,
											"end": 8212,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 8082,
											"end": 8213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8213,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 8082,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8074,
											"end": 8213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8074,
											"end": 8213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7801,
											"end": 8220,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7801,
											"end": 8220,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7801,
											"end": 8220,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7801,
											"end": 8220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8226,
											"end": 8396,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 8226,
											"end": 8396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8366,
											"end": 8388,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 8362,
											"end": 8363,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8354,
											"end": 8360,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8343,
											"end": 8389,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8226,
											"end": 8396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8226,
											"end": 8396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8768,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 8402,
											"end": 8768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8544,
											"end": 8547,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8565,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 8629,
											"end": 8631,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 8624,
											"end": 8627,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8565,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 8565,
											"end": 8632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8565,
											"end": 8632,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 8565,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8558,
											"end": 8632,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8558,
											"end": 8632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8641,
											"end": 8734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 8730,
											"end": 8733,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8641,
											"end": 8734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 8641,
											"end": 8734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8641,
											"end": 8734,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 8641,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8759,
											"end": 8761,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8750,
											"end": 8762,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8743,
											"end": 8762,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8743,
											"end": 8762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8768,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8768,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8774,
											"end": 9193,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 8774,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8944,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8978,
											"end": 8980,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8967,
											"end": 8976,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8963,
											"end": 8981,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8955,
											"end": 8981,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8955,
											"end": 8981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9027,
											"end": 9036,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9025,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9017,
											"end": 9037,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9013,
											"end": 9014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9002,
											"end": 9011,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8998,
											"end": 9015,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8991,
											"end": 9038,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9055,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 9181,
											"end": 9185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9055,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 9055,
											"end": 9186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9055,
											"end": 9186,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 9055,
											"end": 9186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9047,
											"end": 9186,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9047,
											"end": 9186,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8774,
											"end": 9193,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8774,
											"end": 9193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8774,
											"end": 9193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8774,
											"end": 9193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9199,
											"end": 9346,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 9199,
											"end": 9346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9300,
											"end": 9311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9337,
											"end": 9340,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9199,
											"end": 9346,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9199,
											"end": 9346,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9199,
											"end": 9346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9199,
											"end": 9346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9199,
											"end": 9346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9352,
											"end": 9466,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 9352,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9352,
											"end": 9466,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9352,
											"end": 9466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9472,
											"end": 9870,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 9472,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9631,
											"end": 9634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9652,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 9733,
											"end": 9734,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9728,
											"end": 9731,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9652,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 9652,
											"end": 9735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9652,
											"end": 9735,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 9652,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9645,
											"end": 9735,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9645,
											"end": 9735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9744,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 9833,
											"end": 9836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9744,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 9744,
											"end": 9837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9744,
											"end": 9837,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 9744,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9857,
											"end": 9860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9853,
											"end": 9864,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9846,
											"end": 9864,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9846,
											"end": 9864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9472,
											"end": 9870,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9472,
											"end": 9870,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9472,
											"end": 9870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9472,
											"end": 9870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9876,
											"end": 10255,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 9876,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10060,
											"end": 10063,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10082,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 10225,
											"end": 10228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10082,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 10082,
											"end": 10229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10082,
											"end": 10229,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 10082,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10229,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10246,
											"end": 10249,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10239,
											"end": 10249,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10239,
											"end": 10249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9876,
											"end": 10255,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9876,
											"end": 10255,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9876,
											"end": 10255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9876,
											"end": 10255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10261,
											"end": 10434,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 10261,
											"end": 10434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10401,
											"end": 10426,
											"name": "PUSH",
											"source": 10,
											"value": "4574686572207769746864726177616C206661696C6564000000000000000000"
										},
										{
											"begin": 10397,
											"end": 10398,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10389,
											"end": 10395,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10385,
											"end": 10399,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10378,
											"end": 10427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10261,
											"end": 10434,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10261,
											"end": 10434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10440,
											"end": 10806,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 10440,
											"end": 10806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10582,
											"end": 10585,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10603,
											"end": 10670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 10667,
											"end": 10669,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 10662,
											"end": 10665,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10603,
											"end": 10670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 10603,
											"end": 10670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10603,
											"end": 10670,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 10603,
											"end": 10670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10596,
											"end": 10670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10596,
											"end": 10670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10679,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 10768,
											"end": 10771,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10679,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 10679,
											"end": 10772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10679,
											"end": 10772,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 10679,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10797,
											"end": 10799,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10792,
											"end": 10795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10788,
											"end": 10800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10781,
											"end": 10800,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10781,
											"end": 10800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10440,
											"end": 10806,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10440,
											"end": 10806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10440,
											"end": 10806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10440,
											"end": 10806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10812,
											"end": 11231,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10812,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10978,
											"end": 10982,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11016,
											"end": 11018,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11005,
											"end": 11014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11001,
											"end": 11019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10993,
											"end": 11019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10993,
											"end": 11019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11065,
											"end": 11074,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11059,
											"end": 11063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11055,
											"end": 11075,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11051,
											"end": 11052,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11036,
											"end": 11053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11029,
											"end": 11076,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11093,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 11219,
											"end": 11223,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11093,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 11093,
											"end": 11224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11093,
											"end": 11224,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 11093,
											"end": 11224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11085,
											"end": 11224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11085,
											"end": 11224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10812,
											"end": 11231,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10812,
											"end": 11231,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10812,
											"end": 11231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10812,
											"end": 11231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11237,
											"end": 11409,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 11237,
											"end": 11409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11377,
											"end": 11401,
											"name": "PUSH",
											"source": 10,
											"value": "41646472657373206E6F7420617574686F72697A656400000000000000000000"
										},
										{
											"begin": 11373,
											"end": 11374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11365,
											"end": 11371,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11361,
											"end": 11375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11354,
											"end": 11402,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11237,
											"end": 11409,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11237,
											"end": 11409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11415,
											"end": 11781,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 11415,
											"end": 11781,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11557,
											"end": 11560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11578,
											"end": 11645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 11642,
											"end": 11644,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 11637,
											"end": 11640,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11578,
											"end": 11645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 11578,
											"end": 11645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11578,
											"end": 11645,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 11578,
											"end": 11645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11571,
											"end": 11645,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11571,
											"end": 11645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11654,
											"end": 11747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 11743,
											"end": 11746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11654,
											"end": 11747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 11654,
											"end": 11747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11654,
											"end": 11747,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 11654,
											"end": 11747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11772,
											"end": 11774,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11767,
											"end": 11770,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11763,
											"end": 11775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11756,
											"end": 11775,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11756,
											"end": 11775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11415,
											"end": 11781,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11415,
											"end": 11781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11415,
											"end": 11781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11415,
											"end": 11781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11787,
											"end": 12206,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 11787,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11953,
											"end": 11957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11991,
											"end": 11993,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11980,
											"end": 11989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11968,
											"end": 11994,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11968,
											"end": 11994,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12040,
											"end": 12049,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12034,
											"end": 12038,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12030,
											"end": 12050,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12026,
											"end": 12027,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12015,
											"end": 12024,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12011,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12051,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12068,
											"end": 12199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 12194,
											"end": 12198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12068,
											"end": 12199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 12068,
											"end": 12199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12068,
											"end": 12199,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 12068,
											"end": 12199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12060,
											"end": 12199,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12060,
											"end": 12199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11787,
											"end": 12206,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11787,
											"end": 12206,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11787,
											"end": 12206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11787,
											"end": 12206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12212,
											"end": 12376,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 12212,
											"end": 12376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12352,
											"end": 12368,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420746172676574000000000000000000000000000000000000"
										},
										{
											"begin": 12348,
											"end": 12349,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12340,
											"end": 12346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12336,
											"end": 12350,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12329,
											"end": 12369,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12212,
											"end": 12376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12212,
											"end": 12376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12382,
											"end": 12748,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 12382,
											"end": 12748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12524,
											"end": 12527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12545,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 12609,
											"end": 12611,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 12604,
											"end": 12607,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12545,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 12545,
											"end": 12612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12545,
											"end": 12612,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 12545,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12538,
											"end": 12612,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12538,
											"end": 12612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12621,
											"end": 12714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 12710,
											"end": 12713,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12621,
											"end": 12714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 12621,
											"end": 12714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12621,
											"end": 12714,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 12621,
											"end": 12714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12739,
											"end": 12741,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12734,
											"end": 12737,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12723,
											"end": 12742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12723,
											"end": 12742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12382,
											"end": 12748,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12382,
											"end": 12748,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12382,
											"end": 12748,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12382,
											"end": 12748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12754,
											"end": 13173,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 12754,
											"end": 13173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12920,
											"end": 12924,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12958,
											"end": 12960,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12947,
											"end": 12956,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12961,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12935,
											"end": 12961,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12935,
											"end": 12961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13007,
											"end": 13016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13001,
											"end": 13005,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12997,
											"end": 13017,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12993,
											"end": 12994,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12982,
											"end": 12991,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12978,
											"end": 12995,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12971,
											"end": 13018,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13035,
											"end": 13166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 13161,
											"end": 13165,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13035,
											"end": 13166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 13035,
											"end": 13166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13035,
											"end": 13166,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 13035,
											"end": 13166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13027,
											"end": 13166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13027,
											"end": 13166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12754,
											"end": 13173,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12754,
											"end": 13173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12754,
											"end": 13173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12754,
											"end": 13173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13327,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 13179,
											"end": 13327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13277,
											"end": 13283,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13272,
											"end": 13275,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13267,
											"end": 13270,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13254,
											"end": 13284,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 13318,
											"end": 13319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13309,
											"end": 13315,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13304,
											"end": 13307,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13300,
											"end": 13316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13293,
											"end": 13320,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13355,
											"end": 13682,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 13355,
											"end": 13682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13469,
											"end": 13472,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13490,
											"end": 13578,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 13571,
											"end": 13577,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13566,
											"end": 13569,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13490,
											"end": 13578,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 13490,
											"end": 13578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13490,
											"end": 13578,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 13490,
											"end": 13578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13483,
											"end": 13578,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13483,
											"end": 13578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 13637,
											"end": 13643,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13632,
											"end": 13635,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13625,
											"end": 13630,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 13588,
											"end": 13644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13644,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 13588,
											"end": 13644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13669,
											"end": 13675,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13664,
											"end": 13667,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13660,
											"end": 13676,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13653,
											"end": 13676,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13653,
											"end": 13676,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13355,
											"end": 13682,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13355,
											"end": 13682,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13355,
											"end": 13682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13355,
											"end": 13682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13355,
											"end": 13682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13355,
											"end": 13682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13688,
											"end": 13979,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 13688,
											"end": 13979,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13828,
											"end": 13831,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13850,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 13949,
											"end": 13952,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13940,
											"end": 13946,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13932,
											"end": 13938,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13850,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 13850,
											"end": 13953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13850,
											"end": 13953,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 13850,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13843,
											"end": 13953,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13843,
											"end": 13953,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13970,
											"end": 13973,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13963,
											"end": 13973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13963,
											"end": 13973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13688,
											"end": 13979,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13688,
											"end": 13979,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13688,
											"end": 13979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13688,
											"end": 13979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13688,
											"end": 13979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13688,
											"end": 13979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13985,
											"end": 14156,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 13985,
											"end": 14156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14125,
											"end": 14148,
											"name": "PUSH",
											"source": 10,
											"value": "43616C6C20657865637574696F6E206661696C65640000000000000000000000"
										},
										{
											"begin": 14121,
											"end": 14122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14113,
											"end": 14119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14109,
											"end": 14123,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14102,
											"end": 14149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13985,
											"end": 14156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13985,
											"end": 14156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14162,
											"end": 14528,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 14162,
											"end": 14528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14304,
											"end": 14307,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14325,
											"end": 14392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 14389,
											"end": 14391,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 14384,
											"end": 14387,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14325,
											"end": 14392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 14325,
											"end": 14392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14325,
											"end": 14392,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 14325,
											"end": 14392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14318,
											"end": 14392,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14318,
											"end": 14392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14401,
											"end": 14494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 14490,
											"end": 14493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14401,
											"end": 14494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 14401,
											"end": 14494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14401,
											"end": 14494,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 14401,
											"end": 14494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14519,
											"end": 14521,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14514,
											"end": 14517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14510,
											"end": 14522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14503,
											"end": 14522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14503,
											"end": 14522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14162,
											"end": 14528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14162,
											"end": 14528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14162,
											"end": 14528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14162,
											"end": 14528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14534,
											"end": 14953,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 14534,
											"end": 14953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14700,
											"end": 14704,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14738,
											"end": 14740,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14727,
											"end": 14736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14723,
											"end": 14741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14715,
											"end": 14741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14715,
											"end": 14741,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14787,
											"end": 14796,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14781,
											"end": 14785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14777,
											"end": 14797,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14773,
											"end": 14774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14762,
											"end": 14771,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14758,
											"end": 14775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14751,
											"end": 14798,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14815,
											"end": 14946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 14941,
											"end": 14945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14815,
											"end": 14946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 14815,
											"end": 14946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14815,
											"end": 14946,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 14815,
											"end": 14946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14807,
											"end": 14946,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14807,
											"end": 14946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14534,
											"end": 14953,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14534,
											"end": 14953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14534,
											"end": 14953,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14534,
											"end": 14953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14981,
											"end": 15295,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 14981,
											"end": 15295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15077,
											"end": 15080,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15098,
											"end": 15168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 15161,
											"end": 15167,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15156,
											"end": 15159,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15098,
											"end": 15168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 15098,
											"end": 15168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15098,
											"end": 15168,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 15098,
											"end": 15168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15091,
											"end": 15168,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15091,
											"end": 15168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15178,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 15227,
											"end": 15233,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15222,
											"end": 15225,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15215,
											"end": 15220,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15178,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 15178,
											"end": 15234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15178,
											"end": 15234,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 15178,
											"end": 15234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15259,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 15281,
											"end": 15287,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15259,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 15259,
											"end": 15288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15259,
											"end": 15288,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 15259,
											"end": 15288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15254,
											"end": 15257,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15250,
											"end": 15289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15243,
											"end": 15289,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15243,
											"end": 15289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14981,
											"end": 15295,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14981,
											"end": 15295,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14981,
											"end": 15295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14981,
											"end": 15295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14981,
											"end": 15295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14981,
											"end": 15295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15937,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 15301,
											"end": 15937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15496,
											"end": 15500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15534,
											"end": 15536,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15523,
											"end": 15532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15519,
											"end": 15537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15547,
											"end": 15618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 15615,
											"end": 15616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15604,
											"end": 15613,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15600,
											"end": 15617,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15591,
											"end": 15597,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15547,
											"end": 15618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 15547,
											"end": 15618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15547,
											"end": 15618,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 15547,
											"end": 15618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15665,
											"end": 15674,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15659,
											"end": 15663,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15655,
											"end": 15675,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15650,
											"end": 15652,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15639,
											"end": 15648,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15635,
											"end": 15653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15628,
											"end": 15676,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15693,
											"end": 15779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 15774,
											"end": 15778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15765,
											"end": 15771,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15757,
											"end": 15763,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15693,
											"end": 15779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 15693,
											"end": 15779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15693,
											"end": 15779,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 15693,
											"end": 15779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15685,
											"end": 15779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15685,
											"end": 15779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15826,
											"end": 15835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15820,
											"end": 15824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15816,
											"end": 15836,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15811,
											"end": 15813,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15800,
											"end": 15809,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15814,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15789,
											"end": 15837,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15854,
											"end": 15930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 15925,
											"end": 15929,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15916,
											"end": 15922,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15854,
											"end": 15930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 15854,
											"end": 15930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15854,
											"end": 15930,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 15854,
											"end": 15930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15846,
											"end": 15930,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15846,
											"end": 15930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15937,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15937,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15943,
											"end": 16108,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 15943,
											"end": 16108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16083,
											"end": 16100,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 16079,
											"end": 16080,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16071,
											"end": 16077,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16067,
											"end": 16081,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16060,
											"end": 16101,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15943,
											"end": 16108,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15943,
											"end": 16108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16114,
											"end": 16480,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 16114,
											"end": 16480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16256,
											"end": 16259,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16277,
											"end": 16344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 16341,
											"end": 16343,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 16336,
											"end": 16339,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16277,
											"end": 16344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 16277,
											"end": 16344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16277,
											"end": 16344,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 16277,
											"end": 16344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16270,
											"end": 16344,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16270,
											"end": 16344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16353,
											"end": 16446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 16442,
											"end": 16445,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16353,
											"end": 16446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 16353,
											"end": 16446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16353,
											"end": 16446,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 16353,
											"end": 16446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16471,
											"end": 16473,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16466,
											"end": 16469,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16462,
											"end": 16474,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16455,
											"end": 16474,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16455,
											"end": 16474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16114,
											"end": 16480,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16114,
											"end": 16480,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16114,
											"end": 16480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16114,
											"end": 16480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16486,
											"end": 16905,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 16486,
											"end": 16905,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16652,
											"end": 16656,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16690,
											"end": 16692,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16679,
											"end": 16688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16675,
											"end": 16693,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16739,
											"end": 16748,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16733,
											"end": 16737,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16729,
											"end": 16749,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16725,
											"end": 16726,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16714,
											"end": 16723,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16710,
											"end": 16727,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16703,
											"end": 16750,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16767,
											"end": 16898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 16893,
											"end": 16897,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16767,
											"end": 16898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 16767,
											"end": 16898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16767,
											"end": 16898,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 16767,
											"end": 16898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16759,
											"end": 16898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16759,
											"end": 16898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16486,
											"end": 16905,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16486,
											"end": 16905,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16486,
											"end": 16905,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16486,
											"end": 16905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 17079,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 16911,
											"end": 17079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17051,
											"end": 17071,
											"name": "PUSH",
											"source": 10,
											"value": "416C726561647920617574686F72697A65640000000000000000000000000000"
										},
										{
											"begin": 17047,
											"end": 17048,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17039,
											"end": 17045,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17035,
											"end": 17049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17028,
											"end": 17072,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 17079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 17079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17451,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 17085,
											"end": 17451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17227,
											"end": 17230,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17248,
											"end": 17315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 17312,
											"end": 17314,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 17307,
											"end": 17310,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17248,
											"end": 17315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 17248,
											"end": 17315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17248,
											"end": 17315,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 17248,
											"end": 17315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17241,
											"end": 17315,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17241,
											"end": 17315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17324,
											"end": 17417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 17413,
											"end": 17416,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17324,
											"end": 17417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 17324,
											"end": 17417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17324,
											"end": 17417,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 17324,
											"end": 17417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17442,
											"end": 17444,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17437,
											"end": 17440,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17433,
											"end": 17445,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17426,
											"end": 17445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17426,
											"end": 17445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17457,
											"end": 17876,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 17457,
											"end": 17876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17623,
											"end": 17627,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17661,
											"end": 17663,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17650,
											"end": 17659,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17646,
											"end": 17664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17638,
											"end": 17664,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17638,
											"end": 17664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17710,
											"end": 17719,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17704,
											"end": 17708,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17700,
											"end": 17720,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17696,
											"end": 17697,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17685,
											"end": 17694,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17681,
											"end": 17698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17674,
											"end": 17721,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17738,
											"end": 17869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 17864,
											"end": 17868,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17738,
											"end": 17869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 17738,
											"end": 17869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17738,
											"end": 17869,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 17738,
											"end": 17869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17730,
											"end": 17869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17730,
											"end": 17869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17457,
											"end": 17876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17457,
											"end": 17876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17457,
											"end": 17876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17457,
											"end": 17876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17882,
											"end": 18053,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 17882,
											"end": 18053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18022,
											"end": 18045,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
										},
										{
											"begin": 18018,
											"end": 18019,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18010,
											"end": 18016,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18006,
											"end": 18020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17999,
											"end": 18046,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17882,
											"end": 18053,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17882,
											"end": 18053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18059,
											"end": 18425,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 18059,
											"end": 18425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18201,
											"end": 18204,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18222,
											"end": 18289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 18286,
											"end": 18288,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 18281,
											"end": 18284,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18222,
											"end": 18289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 18222,
											"end": 18289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18222,
											"end": 18289,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 18222,
											"end": 18289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18215,
											"end": 18289,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18215,
											"end": 18289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18298,
											"end": 18391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 18387,
											"end": 18390,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18298,
											"end": 18391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 18298,
											"end": 18391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18298,
											"end": 18391,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 18298,
											"end": 18391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18416,
											"end": 18418,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18411,
											"end": 18414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18407,
											"end": 18419,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18400,
											"end": 18419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18400,
											"end": 18419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18059,
											"end": 18425,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18059,
											"end": 18425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18059,
											"end": 18425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18059,
											"end": 18425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18431,
											"end": 18850,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 18431,
											"end": 18850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18597,
											"end": 18601,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18635,
											"end": 18637,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18624,
											"end": 18633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18620,
											"end": 18638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18612,
											"end": 18638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18612,
											"end": 18638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18684,
											"end": 18693,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18678,
											"end": 18682,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18674,
											"end": 18694,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18670,
											"end": 18671,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18659,
											"end": 18668,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18655,
											"end": 18672,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18648,
											"end": 18695,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18712,
											"end": 18843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 18838,
											"end": 18842,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18712,
											"end": 18843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 18712,
											"end": 18843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18712,
											"end": 18843,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 18712,
											"end": 18843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18704,
											"end": 18843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18704,
											"end": 18843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18431,
											"end": 18850,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18431,
											"end": 18850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18431,
											"end": 18850,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18431,
											"end": 18850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18856,
											"end": 19031,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 18856,
											"end": 19031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18996,
											"end": 19023,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420726563697069656E74206164647265737300000000000000"
										},
										{
											"begin": 18992,
											"end": 18993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18984,
											"end": 18990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18980,
											"end": 18994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18973,
											"end": 19024,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18856,
											"end": 19031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18856,
											"end": 19031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19037,
											"end": 19403,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 19037,
											"end": 19403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19179,
											"end": 19182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19200,
											"end": 19267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 19264,
											"end": 19266,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 19259,
											"end": 19262,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19200,
											"end": 19267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 19200,
											"end": 19267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19200,
											"end": 19267,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 19200,
											"end": 19267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19193,
											"end": 19267,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19193,
											"end": 19267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19276,
											"end": 19369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 19365,
											"end": 19368,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19276,
											"end": 19369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 19276,
											"end": 19369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19276,
											"end": 19369,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 19276,
											"end": 19369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19394,
											"end": 19396,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19389,
											"end": 19392,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19385,
											"end": 19397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19378,
											"end": 19397,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19378,
											"end": 19397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19037,
											"end": 19403,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19037,
											"end": 19403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19037,
											"end": 19403,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19037,
											"end": 19403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19409,
											"end": 19828,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 19409,
											"end": 19828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19575,
											"end": 19579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19613,
											"end": 19615,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19602,
											"end": 19611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19598,
											"end": 19616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19590,
											"end": 19616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19590,
											"end": 19616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19662,
											"end": 19671,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19656,
											"end": 19660,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19652,
											"end": 19672,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19648,
											"end": 19649,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19637,
											"end": 19646,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19633,
											"end": 19650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19626,
											"end": 19673,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19690,
											"end": 19821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 19816,
											"end": 19820,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19690,
											"end": 19821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 19690,
											"end": 19821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19690,
											"end": 19821,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 19690,
											"end": 19821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19682,
											"end": 19821,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19682,
											"end": 19821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19409,
											"end": 19828,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19409,
											"end": 19828,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19409,
											"end": 19828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19409,
											"end": 19828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19834,
											"end": 20015,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 19834,
											"end": 20015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19974,
											"end": 20007,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 19970,
											"end": 19971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19962,
											"end": 19968,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19958,
											"end": 19972,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19951,
											"end": 20008,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19834,
											"end": 20015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19834,
											"end": 20015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20021,
											"end": 20387,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 20021,
											"end": 20387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20163,
											"end": 20166,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20184,
											"end": 20251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 20248,
											"end": 20250,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 20243,
											"end": 20246,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20184,
											"end": 20251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 20184,
											"end": 20251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20184,
											"end": 20251,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 20184,
											"end": 20251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20177,
											"end": 20251,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20177,
											"end": 20251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20260,
											"end": 20353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 20349,
											"end": 20352,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20260,
											"end": 20353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 20260,
											"end": 20353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20260,
											"end": 20353,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 20260,
											"end": 20353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20378,
											"end": 20380,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20373,
											"end": 20376,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20369,
											"end": 20381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20362,
											"end": 20381,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20362,
											"end": 20381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20021,
											"end": 20387,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20021,
											"end": 20387,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20021,
											"end": 20387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20021,
											"end": 20387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20393,
											"end": 20812,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 20393,
											"end": 20812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20559,
											"end": 20563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20597,
											"end": 20599,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20586,
											"end": 20595,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20582,
											"end": 20600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20574,
											"end": 20600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20574,
											"end": 20600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20646,
											"end": 20655,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20640,
											"end": 20644,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20636,
											"end": 20656,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20632,
											"end": 20633,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20621,
											"end": 20630,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20617,
											"end": 20634,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20610,
											"end": 20657,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20674,
											"end": 20805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 20800,
											"end": 20804,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20674,
											"end": 20805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 20674,
											"end": 20805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20674,
											"end": 20805,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 20674,
											"end": 20805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20666,
											"end": 20805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20666,
											"end": 20805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20393,
											"end": 20812,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20393,
											"end": 20812,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20393,
											"end": 20812,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20393,
											"end": 20812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21150,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 20818,
											"end": 21150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20939,
											"end": 20943,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20977,
											"end": 20979,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20966,
											"end": 20975,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20962,
											"end": 20980,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20954,
											"end": 20980,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20954,
											"end": 20980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20990,
											"end": 21061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 21058,
											"end": 21059,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21047,
											"end": 21056,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21043,
											"end": 21060,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21034,
											"end": 21040,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20990,
											"end": 21061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 20990,
											"end": 21061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20990,
											"end": 21061,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 20990,
											"end": 21061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21071,
											"end": 21143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 21139,
											"end": 21141,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21128,
											"end": 21137,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21124,
											"end": 21142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21115,
											"end": 21121,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21071,
											"end": 21143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 21071,
											"end": 21143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21071,
											"end": 21143,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 21071,
											"end": 21143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21150,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21150,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 21150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"D/DaedalusWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAuthorized(address)": "cf1c316a",
							"authorized(address)": "b9181611",
							"executeCall(address,uint256,bytes)": "9e5d4c49",
							"owner()": "8da5cb5b",
							"removeAuthorized(address)": "485d7d94",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"transferToken(address,address,uint256)": "f5537ede",
							"withdrawEther(uint256)": "3bed33ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AuthorizedAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AuthorizedRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAuthorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAuthorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"addAuthorized(address)\":{\"params\":{\"account\":\"The address to authorize.\"}},\"executeCall(address,uint256,bytes)\":{\"params\":{\"data\":\"The calldata for the call.\",\"target\":\"The target address to call.\",\"value\":\"The amount of Ether (in wei) to send.\"},\"returns\":{\"result\":\"The returned data from the call.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeAuthorized(address)\":{\"params\":{\"account\":\"The address to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferToken(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"to\":\"The recipient address.\",\"token\":\"The ERC20 token to transfer.\"}},\"withdrawEther(uint256)\":{\"params\":{\"amount\":\"The amount of Ether (in wei) to withdraw.\"}}},\"title\":\"DaedalusWallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAuthorized(address)\":{\"notice\":\"Adds an address to the authorized list.\"},\"constructor\":{\"notice\":\"Constructor sets the deployer as the initial owner.\"},\"executeCall(address,uint256,bytes)\":{\"notice\":\"Executes an arbitrary call from the wallet.\"},\"removeAuthorized(address)\":{\"notice\":\"Removes an address from the authorized list.\"},\"transferToken(address,address,uint256)\":{\"notice\":\"Transfers ERC20 tokens from the wallet to a specified address.\"},\"withdrawEther(uint256)\":{\"notice\":\"Withdraws Ether from the wallet to the caller.\"}},\"notice\":\"A dynamic and optimized smart wallet that holds Ether and ERC20 tokens. The owner can add or remove additional authorized addresses, which are permitted to execute arbitrary calls and transfer funds on behalf of the wallet.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"D/DaedalusWallet.sol\":\"DaedalusWallet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"D/DaedalusWallet.sol\":{\"keccak256\":\"0x634606952109f11c92d0c96b0f984493b60bcf9b509212035039b6d0107d51c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce4aefc4685604c620e20f0235880444970c18fd1375c74a6a2391e57e55b14\",\"dweb:/ipfs/QmagCSLNtTHJFq7i3oV83U2BknnUm1t5n95cogi1DgujGP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "D/DaedalusWallet.sol:DaedalusWallet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "D/DaedalusWallet.sol:DaedalusWallet",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 850,
								"contract": "D/DaedalusWallet.sol:DaedalusWallet",
								"label": "authorized",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addAuthorized(address)": {
								"notice": "Adds an address to the authorized list."
							},
							"constructor": {
								"notice": "Constructor sets the deployer as the initial owner."
							},
							"executeCall(address,uint256,bytes)": {
								"notice": "Executes an arbitrary call from the wallet."
							},
							"removeAuthorized(address)": {
								"notice": "Removes an address from the authorized list."
							},
							"transferToken(address,address,uint256)": {
								"notice": "Transfers ERC20 tokens from the wallet to a specified address."
							},
							"withdrawEther(uint256)": {
								"notice": "Withdraws Ether from the wallet to the caller."
							}
						},
						"notice": "A dynamic and optimized smart wallet that holds Ether and ERC20 tokens. The owner can add or remove additional authorized addresses, which are permitted to execute arbitrary calls and transfer funds on behalf of the wallet.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							819
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 820,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 819,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 819,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								819
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 801,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							831
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 831,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								831,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							831
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 832,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							789
						]
					},
					"id": 790,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 790,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 790,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 789,
							"linearizedBaseContracts": [
								789
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 789,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 789,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "2548:139:6",
										"statements": [
											{
												"assignments": [
													464
												],
												"declarations": [
													{
														"constant": false,
														"id": 464,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "2558:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 463,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 469,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$789",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$789",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2612:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2581:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "2581:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 475,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2643:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 476,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2650:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 477,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "2659:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 478,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2674:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 474,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "2630:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2493:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2493:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2493:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2507:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2524:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:6"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:6"
									},
									"scope": 789,
									"src": "2462:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "3453:370:6",
										"statements": [
											{
												"id": 524,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:6",
												"statements": [
													{
														"assignments": [
															495
														],
														"declarations": [
															{
																"constant": false,
																"id": 495,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 524,
																"src": "3487:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 504,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 500,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$789",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$789",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 498,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 502,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3545:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 496,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3514:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "3514:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 505,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "3571:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 506,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "3590:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 515,
														"nodeType": "IfStatement",
														"src": "3567:160:6",
														"trueBody": {
															"id": 514,
															"nodeType": "Block",
															"src": "3609:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 509,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 489,
																				"src": "3667:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 510,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "3676:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 511,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "3694:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 508,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "3634:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 513,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 517,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3753:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 518,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3760:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 519,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "3769:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 520,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "3788:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 516,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "3740:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 523,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3386:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 485,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3386:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3386:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3400:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3417:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:6"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:6"
									},
									"scope": 789,
									"src": "3355:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "4477:303:6",
										"statements": [
											{
												"assignments": [
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "4487:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 537,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 541,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "4530:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "4530:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 543,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "4546:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 544,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4555:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 545,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 539,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:6"
											},
											{
												"condition": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 549,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "4602:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 550,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "4609:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 548,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "4578:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "4573:201:6",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "4624:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 554,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "4658:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 557,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "4680:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "4680:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 559,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 532,
																						"src": "4696:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 555,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 553,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4638:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 564,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 566,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "4743:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 567,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "4750:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 565,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4723:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 569,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4422:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 529,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 528,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4422:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4422:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4436:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4453:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:6"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:6"
									},
									"scope": 789,
									"src": "4400:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "5227:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 586,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "5241:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 600,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "5350:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 601,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5354:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 602,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5361:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 598,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "5328:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5328:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 613,
													"nodeType": "IfStatement",
													"src": "5323:117:6",
													"trueBody": {
														"id": 612,
														"nodeType": "Block",
														"src": "5368:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 608,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 577,
																					"src": "5422:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 606,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 605,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5389:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 611,
																"nodeType": "RevertStatement",
																"src": "5382:47:6"
															}
														]
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "5237:203:6",
												"trueBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "5262:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "5289:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 593,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "5296:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "5300:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 591,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5276:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 596,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5156:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 576,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 575,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5156:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5156:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5172:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5184:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5199:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:6"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:6"
									},
									"scope": 789,
									"src": "5124:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "5965:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 631,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "5979:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 646,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6102:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 647,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "6108:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 648,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6112:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 649,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6119:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 644,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "6076:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6076:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 660,
													"nodeType": "IfStatement",
													"src": "6071:127:6",
													"trueBody": {
														"id": 659,
														"nodeType": "Block",
														"src": "6126:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 655,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 620,
																					"src": "6180:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 654,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 653,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 652,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6147:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 658,
																"nodeType": "RevertStatement",
																"src": "6140:47:6"
															}
														]
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "5975:223:6",
												"trueBody": {
													"id": 643,
													"nodeType": "Block",
													"src": "6000:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "6031:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 638,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "6038:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "6044:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 640,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6048:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6014:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 642,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5843:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 619,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 618,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5843:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5843:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5867:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5889:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5909:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5932:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:6"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:6"
									},
									"scope": 789,
									"src": "5798:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "6971:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 676,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "6985:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 690,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "7093:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 691,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "7097:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 692,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "7104:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 688,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "7072:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7072:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 703,
													"nodeType": "IfStatement",
													"src": "7067:116:6",
													"trueBody": {
														"id": 702,
														"nodeType": "Block",
														"src": "7111:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 698,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 667,
																					"src": "7165:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 696,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 695,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7132:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 701,
																"nodeType": "RevertStatement",
																"src": "7125:47:6"
															}
														]
													}
												},
												"id": 704,
												"nodeType": "IfStatement",
												"src": "6981:202:6",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "7006:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 682,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "7033:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 683,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "7040:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 684,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "7044:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 681,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "7020:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6900:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 665,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6900:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6900:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6916:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6928:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6943:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 672,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:6"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:6"
									},
									"scope": 789,
									"src": "6869:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7756:650:6",
										"statements": [
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "7766:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 717,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:6"
											},
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "7794:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:6"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:6",
													"nodeType": "YulBlock",
													"src": "7848:396:6",
													"statements": [
														{
															"nativeSrc": "7862:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:6"
																		},
																		"nativeSrc": "7882:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:6",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:6"
																		},
																		"nativeSrc": "7899:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:6"
																		},
																		"nativeSrc": "7916:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:6"
																},
																"nativeSrc": "7877:60:6",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:6",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:6",
																"nodeType": "YulBlock",
																"src": "7998:157:6",
																"statements": [
																	{
																		"nativeSrc": "8016:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:6"
																			},
																			"nativeSrc": "8027:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:6"
																					},
																					"nativeSrc": "8078:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:6"
																			},
																			"nativeSrc": "8055:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:6"
																		},
																		"nativeSrc": "8055:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:6"
																					},
																					"nativeSrc": "8124:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:6"
																			},
																			"nativeSrc": "8112:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:6"
																		},
																		"nativeSrc": "8112:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:6"
																},
																"nativeSrc": "7982:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:6"
															},
															"nativeSrc": "7979:176:6",
															"nodeType": "YulIf",
															"src": "7979:176:6"
														},
														{
															"nativeSrc": "8168:30:6",
															"nodeType": "YulAssignment",
															"src": "8168:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:6"
																},
																"nativeSrc": "8182:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:6"
																}
															]
														},
														{
															"nativeSrc": "8211:23:6",
															"nodeType": "YulAssignment",
															"src": "8211:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:6"
																},
																"nativeSrc": "8226:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:6",
														"valueSize": 1
													},
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:6",
														"valueSize": 1
													},
													{
														"declaration": 716,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:6",
														"valueSize": 1
													},
													{
														"declaration": 719,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:6",
														"valueSize": 1
													},
													{
														"declaration": 710,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 721,
												"nodeType": "InlineAssembly",
												"src": "7823:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 722,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "8258:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 733,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "8310:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 727,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "8284:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 725,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "IfStatement",
												"src": "8254:146:6",
												"trueBody": {
													"id": 744,
													"nodeType": "Block",
													"src": "8328:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 740,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "8382:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 738,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 737,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "8349:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 743,
															"nodeType": "RevertStatement",
															"src": "8342:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7715:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 709,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 708,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "7715:6:6"
													},
													"referencedDeclaration": 380,
													"src": "7715:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7729:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:6"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:6"
									},
									"scope": 789,
									"src": "7686:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "8997:391:6",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9007:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 758,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 760,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:6"
											},
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9029:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:6"
											},
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9057:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 764,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:6",
													"nodeType": "YulBlock",
													"src": "9111:174:6",
													"statements": [
														{
															"nativeSrc": "9125:71:6",
															"nodeType": "YulAssignment",
															"src": "9125:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:6"
																		},
																		"nativeSrc": "9141:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:6"
																		},
																		"nativeSrc": "9158:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:6"
																		},
																		"nativeSrc": "9175:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:6"
																},
																"nativeSrc": "9136:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:6"
																}
															]
														},
														{
															"nativeSrc": "9209:30:6",
															"nodeType": "YulAssignment",
															"src": "9209:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:6"
																},
																"nativeSrc": "9223:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:6"
																}
															]
														},
														{
															"nativeSrc": "9252:23:6",
															"nodeType": "YulAssignment",
															"src": "9252:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:6"
																},
																"nativeSrc": "9267:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:6",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:6",
														"valueSize": 1
													},
													{
														"declaration": 762,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:6",
														"valueSize": 1
													},
													{
														"declaration": 759,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:6",
														"valueSize": 1
													},
													{
														"declaration": 751,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 767,
												"nodeType": "InlineAssembly",
												"src": "9086:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 768,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "9301:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 769,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "9313:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 780,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9364:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 774,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 751,
																						"src": "9339:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 773,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 772,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 784,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 757,
												"id": 786,
												"nodeType": "Return",
												"src": "9294:87:6"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8941:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 750,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 749,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8941:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8941:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8955:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:6"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8991:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:6"
									},
									"scope": 789,
									"src": "8908:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 790,
							"src": "698:8692:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							819
						]
					},
					"id": 820,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 791,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 792,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 819,
							"linearizedBaseContracts": [
								819
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 797,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 796,
												"id": 799,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 819,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 806,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 805,
												"id": 808,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 803,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 819,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 814,
												"id": 816,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 819,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 820,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							831
						]
					},
					"id": 832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 821,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 822,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 831,
							"linearizedBaseContracts": [
								831
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 824,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 831,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 832,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"D/DaedalusWallet.sol": {
				"ast": {
					"absolutePath": "D/DaedalusWallet.sol",
					"exportedSymbols": {
						"Context": [
							819
						],
						"DaedalusWallet": [
							1157
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							789
						]
					},
					"id": 1158,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 834,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1158,
							"sourceUnit": 148,
							"src": "58:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 835,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1158,
							"sourceUnit": 303,
							"src": "111:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 836,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1158,
							"sourceUnit": 381,
							"src": "174:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 837,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1158,
							"sourceUnit": 790,
							"src": "231:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 839,
										"name": "Ownable",
										"nameLocations": [
											"595:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "595:7:9"
									},
									"id": 840,
									"nodeType": "InheritanceSpecifier",
									"src": "595:7:9"
								},
								{
									"baseName": {
										"id": 841,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"604:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "604:15:9"
									},
									"id": 842,
									"nodeType": "InheritanceSpecifier",
									"src": "604:15:9"
								}
							],
							"canonicalName": "DaedalusWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 838,
								"nodeType": "StructuredDocumentation",
								"src": "298:270:9",
								"text": "@title DaedalusWallet\n @notice A dynamic and optimized smart wallet that holds Ether and ERC20 tokens.\n The owner can add or remove additional authorized addresses, which are permitted to execute\n arbitrary calls and transfer funds on behalf of the wallet."
							},
							"fullyImplemented": true,
							"id": 1157,
							"linearizedBaseContracts": [
								1157,
								302,
								147,
								819
							],
							"name": "DaedalusWallet",
							"nameLocation": "577:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 846,
									"libraryName": {
										"id": 843,
										"name": "SafeERC20",
										"nameLocations": [
											"632:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 789,
										"src": "632:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "626:27:9",
									"typeName": {
										"id": 845,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 844,
											"name": "IERC20",
											"nameLocations": [
												"646:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "646:6:9"
										},
										"referencedDeclaration": 380,
										"src": "646:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "b9181611",
									"id": 850,
									"mutability": "mutable",
									"name": "authorized",
									"nameLocation": "748:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1157,
									"src": "716:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 849,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 847,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "724:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "716:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 848,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "735:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "dd10d14f6ac19e913d4edbb11fd30661531e2ccd0d23f571e9b224f001f0dd06",
									"id": 854,
									"name": "AuthorizedAdded",
									"nameLocation": "793:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "825:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "809:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:25:9"
									},
									"src": "787:47:9"
								},
								{
									"anonymous": false,
									"eventSelector": "0fafd0343e6c6f6985727574866da48938c918559eb9521cf9cc0d317ea0f7b4",
									"id": 858,
									"name": "AuthorizedRemoved",
									"nameLocation": "845:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "879:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "863:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:25:9"
									},
									"src": "839:49:9"
								},
								{
									"anonymous": false,
									"eventSelector": "e39b605d485d947e52b62c3b5028a14d5277db44425263c74171a85707154334",
									"id": 868,
									"name": "Executed",
									"nameLocation": "899:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "924:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "908:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "940:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "932:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "953:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "947:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 863,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "947:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"indexed": false,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "965:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "959:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 865,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "959:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "907:65:9"
									},
									"src": "893:80:9"
								},
								{
									"anonymous": false,
									"eventSelector": "06097061aeda806b5e9cb4133d9899f332ff0913956567fc0f7ea15e3d19947c",
									"id": 874,
									"name": "EtherWithdrawn",
									"nameLocation": "984:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1015:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "999:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1027:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "1019:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:36:9"
									},
									"src": "978:57:9"
								},
								{
									"anonymous": false,
									"eventSelector": "9c8515990fd8c61431c4ac8db9b81475f90c292a1dda77731e56c22e64fc7643",
									"id": 882,
									"name": "TokenTransferred",
									"nameLocation": "1046:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1079:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1063:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1102:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1086:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1114:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1106:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1106:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:59:9"
									},
									"src": "1040:82:9"
								},
								{
									"anonymous": false,
									"eventSelector": "88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874",
									"id": 888,
									"name": "Received",
									"nameLocation": "1133:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1158:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1142:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1142:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1174:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1166:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:40:9"
									},
									"src": "1127:55:9"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "1304:102:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 892,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1322:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1326:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1322:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 894,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "1336:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1336:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1322:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"id": 897,
																	"name": "authorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "1347:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 900,
																"indexExpression": {
																	"expression": {
																		"id": 898,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1358:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1362:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1358:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1347:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1322:47:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1371:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 891,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1314:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1314:74:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "1314:74:9"
											},
											{
												"id": 905,
												"nodeType": "PlaceholderStatement",
												"src": "1398:1:9"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "1188:85:9",
										"text": "@notice Modifier to restrict function calls to the owner or authorized addresses."
									},
									"id": 907,
									"name": "onlyAuthorized",
									"nameLocation": "1287:14:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1301:2:9"
									},
									"src": "1278:128:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "1514:73:9",
										"statements": []
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "1412:63:9",
										"text": "@notice Constructor sets the deployer as the initial owner."
									},
									"id": 916,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1502:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1506:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1502:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 913,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 910,
												"name": "Ownable",
												"nameLocations": [
													"1494:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1494:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1494:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1491:2:9"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1514:0:9"
									},
									"scope": 1157,
									"src": "1480:107:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "1757:202:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 925,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "1775:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1794:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1786:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 926,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1786:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1786:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1775:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1798:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 924,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1767:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1767:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "1767:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1834:20:9",
															"subExpression": {
																"baseExpression": {
																	"id": 935,
																	"name": "authorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "1835:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 937,
																"indexExpression": {
																	"id": 936,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "1846:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1835:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920617574686f72697a6564",
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1856:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2",
																"typeString": "literal_string \"Already authorized\""
															},
															"value": "Already authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2",
																"typeString": "literal_string \"Already authorized\""
															}
														],
														"id": 934,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1826:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "1826:51:9"
											},
											{
												"expression": {
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 942,
															"name": "authorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "1887:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 944,
														"indexExpression": {
															"id": 943,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "1898:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1887:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1909:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1887:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "1887:26:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 949,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "1944:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 948,
														"name": "AuthorizedAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "1928:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1928:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "EmitStatement",
												"src": "1923:29:9"
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "1593:100:9",
										"text": "@notice Adds an address to the authorized list.\n @param account The address to authorize."
									},
									"functionSelector": "cf1c316a",
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 922,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 921,
												"name": "onlyOwner",
												"nameLocations": [
													"1747:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1747:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1747:9:9"
										}
									],
									"name": "addAuthorized",
									"nameLocation": "1707:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1729:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1721:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1720:17:9"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1757:0:9"
									},
									"scope": 1157,
									"src": "1698:261:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "2134:149:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 962,
																"name": "authorized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "2152:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 964,
															"indexExpression": {
																"id": 963,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 956,
																"src": "2163:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2152:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646472657373206e6f7420617574686f72697a6564",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2173:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d",
																"typeString": "literal_string \"Address not authorized\""
															},
															"value": "Address not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d",
																"typeString": "literal_string \"Address not authorized\""
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2144:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2144:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "2144:54:9"
											},
											{
												"expression": {
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 968,
															"name": "authorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "2208:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 970,
														"indexExpression": {
															"id": 969,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "2219:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2208:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2230:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2208:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "2208:27:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 975,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "2268:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 974,
														"name": "AuthorizedRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "2250:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2250:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "EmitStatement",
												"src": "2245:31:9"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "1965:102:9",
										"text": "@notice Removes an address from the authorized list.\n @param account The address to remove."
									},
									"functionSelector": "485d7d94",
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 959,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 958,
												"name": "onlyOwner",
												"nameLocations": [
													"2124:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2124:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2124:9:9"
										}
									],
									"name": "removeAuthorized",
									"nameLocation": "2081:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2106:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "2098:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2098:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:17:9"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2134:0:9"
									},
									"scope": 1157,
									"src": "2072:211:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "2737:260:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 996,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "2755:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2773:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2765:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 997,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2765:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2765:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2755:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746172676574",
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2777:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2",
																"typeString": "literal_string \"Invalid target\""
															},
															"value": "Invalid target"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2",
																"typeString": "literal_string \"Invalid target\""
															}
														],
														"id": 995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2747:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2747:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "2747:47:9"
											},
											{
												"assignments": [
													1006,
													1008
												],
												"declarations": [
													{
														"constant": false,
														"id": 1006,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2810:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "2805:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1005,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2805:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1008,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "2832:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "2819:16:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1007,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2819:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1015,
												"initialValue": {
													"arguments": [
														{
															"id": 1013,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "2865:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"expression": {
																"id": 1009,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "2839:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2846:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2839:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1011,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "2858:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2839:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2839:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2804:66:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1017,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "2888:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c20657865637574696f6e206661696c6564",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2897:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2796c61c946df02007454e4fe25eeedbdb7345d33153a0e3ee502b088b313018",
																"typeString": "literal_string \"Call execution failed\""
															},
															"value": "Call execution failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2796c61c946df02007454e4fe25eeedbdb7345d33153a0e3ee502b088b313018",
																"typeString": "literal_string \"Call execution failed\""
															}
														],
														"id": 1016,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2880:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2880:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "2880:41:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1022,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "2945:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "2953:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1024,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "2960:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 1025,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "2966:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1021,
														"name": "Executed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "2936:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2936:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "EmitStatement",
												"src": "2931:39:9"
											},
											{
												"expression": {
													"id": 1028,
													"name": "res",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1008,
													"src": "2987:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 994,
												"id": 1029,
												"nodeType": "Return",
												"src": "2980:10:9"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "2289:267:9",
										"text": "@notice Executes an arbitrary call from the wallet.\n @param target The target address to call.\n @param value The amount of Ether (in wei) to send.\n @param data The calldata for the call.\n @return result The returned data from the call."
									},
									"functionSelector": "9e5d4c49",
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 989,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 988,
												"name": "onlyAuthorized",
												"nameLocations": [
													"2659:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 907,
												"src": "2659:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2659:14:9"
										},
										{
											"id": 991,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 990,
												"name": "nonReentrant",
												"nameLocations": [
													"2682:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "2682:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2682:12:9"
										}
									],
									"name": "executeCall",
									"nameLocation": "2570:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2590:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2582:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2582:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2606:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2598:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2598:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2628:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2613:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 985,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2613:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2581:52:9"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2725:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2712:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 992,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2712:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:21:9"
									},
									"scope": 1157,
									"src": "2561:436:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "3206:255:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1044,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3232:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DaedalusWallet_$1157",
																				"typeString": "contract DaedalusWallet"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DaedalusWallet_$1157",
																				"typeString": "contract DaedalusWallet"
																			}
																		],
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3224:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1042,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3224:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3224:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3238:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3224:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1047,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "3249:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3224:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3257:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1041,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3216:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3216:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "3216:64:9"
											},
											{
												"assignments": [
													1053,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1053,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3296:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1076,
														"src": "3291:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1052,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3291:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1064,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3349:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1056,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3317:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3321:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3317:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3309:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1054,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3309:8:9",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3309:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3329:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3309:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1060,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "3341:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3309:39:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3309:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3290:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1066,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "3370:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4574686572207769746864726177616c206661696c6564",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3379:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc",
																"typeString": "literal_string \"Ether withdrawal failed\""
															},
															"value": "Ether withdrawal failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc",
																"typeString": "literal_string \"Ether withdrawal failed\""
															}
														],
														"id": 1065,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3362:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3362:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "3362:43:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1071,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3435:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3439:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3435:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "3447:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1070,
														"name": "EtherWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "3420:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3420:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "EmitStatement",
												"src": "3415:39:9"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "3003:122:9",
										"text": "@notice Withdraws Ether from the wallet to the caller.\n @param amount The amount of Ether (in wei) to withdraw."
									},
									"functionSelector": "3bed33ce",
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1037,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1036,
												"name": "onlyAuthorized",
												"nameLocations": [
													"3178:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 907,
												"src": "3178:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3178:14:9"
										},
										{
											"id": 1039,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1038,
												"name": "nonReentrant",
												"nameLocations": [
													"3193:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3193:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3193:12:9"
										}
									],
									"name": "withdrawEther",
									"nameLocation": "3139:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3161:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "3153:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3153:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3152:16:9"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3206:0:9"
									},
									"scope": 1157,
									"src": "3130:331:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "3795:242:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1095,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "3821:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3813:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1093,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3813:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3813:14:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3839:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3831:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1097,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3831:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3831:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3813:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3805:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3805:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "3805:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1106,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "3885:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3899:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3891:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1107,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3891:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3891:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3885:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e742061646472657373",
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3903:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															},
															"value": "Invalid recipient address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															}
														],
														"id": 1105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3877:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3877:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "3877:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1118,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "3960:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "3964:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1115,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3941:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3947:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "3941:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3941:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "3941:30:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1125,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "4011:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4003:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1123,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4003:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4003:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1127,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "4019:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1128,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "4023:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1122,
														"name": "TokenTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "3986:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3986:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "EmitStatement",
												"src": "3981:49:9"
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "3467:221:9",
										"text": "@notice Transfers ERC20 tokens from the wallet to a specified address.\n @param token The ERC20 token to transfer.\n @param to The recipient address.\n @param amount The amount of tokens to transfer."
									},
									"functionSelector": "f5537ede",
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1088,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1087,
												"name": "onlyAuthorized",
												"nameLocations": [
													"3767:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 907,
												"src": "3767:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3767:14:9"
										},
										{
											"id": 1090,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1089,
												"name": "nonReentrant",
												"nameLocations": [
													"3782:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3782:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3782:12:9"
										}
									],
									"name": "transferToken",
									"nameLocation": "3702:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3723:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "3716:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1080,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1079,
														"name": "IERC20",
														"nameLocations": [
															"3716:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3716:6:9"
													},
													"referencedDeclaration": 380,
													"src": "3716:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3738:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "3730:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3730:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3750:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "3742:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3715:42:9"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3795:0:9"
									},
									"scope": 1157,
									"src": "3693:344:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "4122:53:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1137,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4146:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4150:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4146:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1139,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4158:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4162:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4158:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1136,
														"name": "Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "4137:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4137:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1142,
												"nodeType": "EmitStatement",
												"src": "4132:36:9"
											}
										]
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "4043:47:9",
										"text": "@notice Fallback function to receive Ether."
									},
									"id": 1144,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4102:2:9"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4122:0:9"
									},
									"scope": 1157,
									"src": "4095:80:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "4267:53:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1149,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4291:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4295:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4291:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1151,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4303:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4307:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4303:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1148,
														"name": "Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "4282:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4282:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "EmitStatement",
												"src": "4277:36:9"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "4181:53:9",
										"text": "@notice Fallback function for non-empty calldata."
									},
									"id": 1156,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4247:2:9"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4267:0:9"
									},
									"scope": 1157,
									"src": "4239:81:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1158,
							"src": "568:3754:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								854,
								858,
								868,
								874,
								882,
								888
							]
						}
					],
					"src": "32:4291:9"
				},
				"id": 9
			}
		}
	}
}