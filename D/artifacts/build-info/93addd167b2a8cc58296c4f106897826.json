{
	"id": "93addd167b2a8cc58296c4f106897826",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"D/ddosAttack.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/// @title DDOSAttackMitigator\n/// @notice A dynamic and optimized contract demonstrating a pull-payment pattern to mitigate DoS (or DDoS) attacks.\n/// Users deposit Ether, which is stored in a mapping. They later withdraw their own funds, preventing any external calls\n/// that could be malicious or cause blocking issues.\ncontract DDOSAttackMitigator is Ownable, ReentrancyGuard {\n    /// @notice Mapping from user address to their deposited Ether balance (in wei).\n    mapping(address => uint256) public balances;\n\n    // --- Events ---\n    event Deposited(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n\n    /// @notice Constructor sets the deployer as the initial owner (if you wish to add admin logic).\n    constructor() Ownable(msg.sender) {}\n\n    /// @notice Users deposit Ether into the contract, which increments their balance in the mapping.\n    /// The deposit function is external and nonReentrant to avoid reentrancy attacks.\n    function deposit() external payable nonReentrant {\n        require(msg.value > 0, \"Must deposit more than 0\");\n        balances[msg.sender] += msg.value;\n        emit Deposited(msg.sender, msg.value);\n    }\n\n    /// @notice Withdraw function that uses a pull approach. The user withdraws their balance themselves,\n    /// preventing the contract from pushing funds to external addresses.\n    function withdraw() external nonReentrant {\n        uint256 amount = balances[msg.sender];\n        require(amount > 0, \"No funds to withdraw\");\n\n        // Set their balance to zero before transferring out, preventing reentrancy.\n        balances[msg.sender] = 0;\n\n        // Perform a low-level call to transfer Ether. If it fails, revert.\n        (bool success, ) = payable(msg.sender).call{value: amount}(\"\");\n        require(success, \"Withdrawal failed\");\n\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    /// @notice Fallback function to receive Ether from direct transfers.\n    /// Internally calls deposit() to record the userâ€™s balance.\n    receive() external payable {\n        // Optional: automatically deposit to the sender's balance.\n        // We can replicate deposit logic, or keep it blank. \n        // For demonstration, we replicate deposit logic:\n        balances[msg.sender] += msg.value;\n        emit Deposited(msg.sender, msg.value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"D/ddosAttack.sol": {
				"DDOSAttackMitigator": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "DDOSAttackMitigator",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"D/ddosAttack.sol\":499:2533  contract DDOSAttackMitigator is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"D/ddosAttack.sol\":939:975  constructor() Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"D/ddosAttack.sol\":961:971  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"D/ddosAttack.sol\":499:2533  contract DDOSAttackMitigator is Ownable, ReentrancyGuard {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_15:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_16:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_21\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_17:\n    /* \"#utility.yul\":328:352   */\n  tag_23\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_16\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_8:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_25\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"D/ddosAttack.sol\":499:2533  contract DDOSAttackMitigator is Ownable, ReentrancyGuard {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"D/ddosAttack.sol\":499:2533  contract DDOSAttackMitigator is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x27e235e3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"D/ddosAttack.sol\":2468:2477  msg.value */\n      callvalue\n        /* \"D/ddosAttack.sol\":2444:2452  balances */\n      0x02\n        /* \"D/ddosAttack.sol\":2444:2464  balances[msg.sender] */\n      0x00\n        /* \"D/ddosAttack.sol\":2453:2463  msg.sender */\n      caller\n        /* \"D/ddosAttack.sol\":2444:2464  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"D/ddosAttack.sol\":2444:2477  balances[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"D/ddosAttack.sol\":2502:2512  msg.sender */\n      caller\n        /* \"D/ddosAttack.sol\":2492:2524  Deposited(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4\n        /* \"D/ddosAttack.sol\":2514:2523  msg.value */\n      callvalue\n        /* \"D/ddosAttack.sol\":2492:2524  Deposited(msg.sender, msg.value) */\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"D/ddosAttack.sol\":499:2533  contract DDOSAttackMitigator is Ownable, ReentrancyGuard {... */\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"D/ddosAttack.sol\":647:690  mapping(address => uint256) public balances */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      revert(0x00, 0x00)\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/ddosAttack.sol\":1562:2072  function withdraw() external nonReentrant {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      revert(0x00, 0x00)\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      revert(0x00, 0x00)\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/ddosAttack.sol\":1170:1376  function deposit() external payable nonReentrant {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      revert(0x00, 0x00)\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"D/ddosAttack.sol\":647:690  mapping(address => uint256) public balances */\n    tag_19:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"D/ddosAttack.sol\":1562:2072  function withdraw() external nonReentrant {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_39\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_40\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_39:\n        /* \"D/ddosAttack.sol\":1614:1628  uint256 amount */\n      0x00\n        /* \"D/ddosAttack.sol\":1631:1639  balances */\n      0x02\n        /* \"D/ddosAttack.sol\":1631:1651  balances[msg.sender] */\n      0x00\n        /* \"D/ddosAttack.sol\":1640:1650  msg.sender */\n      caller\n        /* \"D/ddosAttack.sol\":1631:1651  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"D/ddosAttack.sol\":1614:1651  uint256 amount = balances[msg.sender] */\n      swap1\n      pop\n        /* \"D/ddosAttack.sol\":1678:1679  0 */\n      0x00\n        /* \"D/ddosAttack.sol\":1669:1675  amount */\n      dup2\n        /* \"D/ddosAttack.sol\":1669:1679  amount > 0 */\n      gt\n        /* \"D/ddosAttack.sol\":1661:1704  require(amount > 0, \"No funds to withdraw\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"D/ddosAttack.sol\":1823:1824  0 */\n      0x00\n        /* \"D/ddosAttack.sol\":1800:1808  balances */\n      0x02\n        /* \"D/ddosAttack.sol\":1800:1820  balances[msg.sender] */\n      0x00\n        /* \"D/ddosAttack.sol\":1809:1819  msg.sender */\n      caller\n        /* \"D/ddosAttack.sol\":1800:1820  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"D/ddosAttack.sol\":1800:1824  balances[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"D/ddosAttack.sol\":1912:1924  bool success */\n      0x00\n        /* \"D/ddosAttack.sol\":1938:1948  msg.sender */\n      caller\n        /* \"D/ddosAttack.sol\":1930:1954  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/ddosAttack.sol\":1962:1968  amount */\n      dup3\n        /* \"D/ddosAttack.sol\":1930:1973  payable(msg.sender).call{value: amount}(\"\") */\n      mload(0x40)\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_49\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_48)\n    tag_49:\n      0x60\n      swap2\n      pop\n    tag_48:\n      pop\n        /* \"D/ddosAttack.sol\":1911:1973  (bool success, ) = payable(msg.sender).call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"D/ddosAttack.sol\":1991:1998  success */\n      dup1\n        /* \"D/ddosAttack.sol\":1983:2020  require(success, \"Withdrawal failed\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"D/ddosAttack.sol\":2046:2056  msg.sender */\n      caller\n        /* \"D/ddosAttack.sol\":2036:2065  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"D/ddosAttack.sol\":2058:2064  amount */\n      dup4\n        /* \"D/ddosAttack.sol\":2036:2065  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"D/ddosAttack.sol\":1604:2072  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_54\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_55\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_54:\n        /* \"D/ddosAttack.sol\":1562:2072  function withdraw() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"D/ddosAttack.sol\":1170:1376  function deposit() external payable nonReentrant {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_64\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_40\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_64:\n        /* \"D/ddosAttack.sol\":1249:1250  0 */\n      0x00\n        /* \"D/ddosAttack.sol\":1237:1246  msg.value */\n      callvalue\n        /* \"D/ddosAttack.sol\":1237:1250  msg.value > 0 */\n      gt\n        /* \"D/ddosAttack.sol\":1229:1279  require(msg.value > 0, \"Must deposit more than 0\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"D/ddosAttack.sol\":1313:1322  msg.value */\n      callvalue\n        /* \"D/ddosAttack.sol\":1289:1297  balances */\n      0x02\n        /* \"D/ddosAttack.sol\":1289:1309  balances[msg.sender] */\n      0x00\n        /* \"D/ddosAttack.sol\":1298:1308  msg.sender */\n      caller\n        /* \"D/ddosAttack.sol\":1289:1309  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"D/ddosAttack.sol\":1289:1322  balances[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_69\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_69:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"D/ddosAttack.sol\":1347:1357  msg.sender */\n      caller\n        /* \"D/ddosAttack.sol\":1337:1369  Deposited(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4\n        /* \"D/ddosAttack.sol\":1359:1368  msg.value */\n      callvalue\n        /* \"D/ddosAttack.sol\":1337:1369  Deposited(msg.sender, msg.value) */\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_71\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_55\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_71:\n        /* \"D/ddosAttack.sol\":1170:1376  function deposit() external payable nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_75\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_29\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_87\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_92:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:270   */\n    tag_93:\n        /* \"#utility.yul\":138:215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":128:216   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x11\n        /* \"#utility.yul\":232:233   */\n      0x04\n        /* \"#utility.yul\":225:240   */\n      mstore\n        /* \"#utility.yul\":259:263   */\n      0x24\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":249:264   */\n      revert\n        /* \"#utility.yul\":276:467   */\n    tag_12:\n        /* \"#utility.yul\":316:319   */\n      0x00\n        /* \"#utility.yul\":335:355   */\n      tag_119\n        /* \"#utility.yul\":353:354   */\n      dup3\n        /* \"#utility.yul\":335:355   */\n      tag_92\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":330:355   */\n      swap2\n      pop\n        /* \"#utility.yul\":369:389   */\n      tag_120\n        /* \"#utility.yul\":387:388   */\n      dup4\n        /* \"#utility.yul\":369:389   */\n      tag_92\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":364:389   */\n      swap3\n      pop\n        /* \"#utility.yul\":412:413   */\n      dup3\n        /* \"#utility.yul\":409:410   */\n      dup3\n        /* \"#utility.yul\":405:414   */\n      add\n        /* \"#utility.yul\":398:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":433:436   */\n      dup1\n        /* \"#utility.yul\":430:431   */\n      dup3\n        /* \"#utility.yul\":427:437   */\n      gt\n        /* \"#utility.yul\":424:460   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":440:458   */\n      tag_122\n      tag_93\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":424:460   */\n    tag_121:\n        /* \"#utility.yul\":276:467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":473:591   */\n    tag_94:\n        /* \"#utility.yul\":560:584   */\n      tag_124\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":560:584   */\n      tag_92\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":555:558   */\n      dup3\n        /* \"#utility.yul\":548:585   */\n      mstore\n        /* \"#utility.yul\":473:591   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":597:819   */\n    tag_14:\n        /* \"#utility.yul\":690:694   */\n      0x00\n        /* \"#utility.yul\":728:730   */\n      0x20\n        /* \"#utility.yul\":717:726   */\n      dup3\n        /* \"#utility.yul\":713:731   */\n      add\n        /* \"#utility.yul\":705:731   */\n      swap1\n      pop\n        /* \"#utility.yul\":741:812   */\n      tag_126\n        /* \"#utility.yul\":809:810   */\n      0x00\n        /* \"#utility.yul\":798:807   */\n      dup4\n        /* \"#utility.yul\":794:811   */\n      add\n        /* \"#utility.yul\":785:791   */\n      dup5\n        /* \"#utility.yul\":741:812   */\n      tag_94\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":597:819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":906:1023   */\n    tag_96:\n        /* \"#utility.yul\":1015:1016   */\n      0x00\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1005:1017   */\n      revert\n        /* \"#utility.yul\":1152:1278   */\n    tag_98:\n        /* \"#utility.yul\":1189:1196   */\n      0x00\n        /* \"#utility.yul\":1229:1271   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1222:1227   */\n      dup3\n        /* \"#utility.yul\":1218:1272   */\n      and\n        /* \"#utility.yul\":1207:1272   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1284:1380   */\n    tag_99:\n        /* \"#utility.yul\":1321:1328   */\n      0x00\n        /* \"#utility.yul\":1350:1374   */\n      tag_132\n        /* \"#utility.yul\":1368:1373   */\n      dup3\n        /* \"#utility.yul\":1350:1374   */\n      tag_98\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1339:1374   */\n      swap1\n      pop\n        /* \"#utility.yul\":1284:1380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1386:1508   */\n    tag_100:\n        /* \"#utility.yul\":1459:1483   */\n      tag_134\n        /* \"#utility.yul\":1477:1482   */\n      dup2\n        /* \"#utility.yul\":1459:1483   */\n      tag_99\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1452:1457   */\n      dup2\n        /* \"#utility.yul\":1449:1484   */\n      eq\n        /* \"#utility.yul\":1439:1502   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":1498:1499   */\n      0x00\n        /* \"#utility.yul\":1495:1496   */\n      0x00\n        /* \"#utility.yul\":1488:1500   */\n      revert\n        /* \"#utility.yul\":1439:1502   */\n    tag_135:\n        /* \"#utility.yul\":1386:1508   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1514:1653   */\n    tag_101:\n        /* \"#utility.yul\":1560:1565   */\n      0x00\n        /* \"#utility.yul\":1598:1604   */\n      dup2\n        /* \"#utility.yul\":1585:1605   */\n      calldataload\n        /* \"#utility.yul\":1576:1605   */\n      swap1\n      pop\n        /* \"#utility.yul\":1614:1647   */\n      tag_137\n        /* \"#utility.yul\":1641:1646   */\n      dup2\n        /* \"#utility.yul\":1614:1647   */\n      tag_100\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1514:1653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1659:1988   */\n    tag_18:\n        /* \"#utility.yul\":1718:1724   */\n      0x00\n        /* \"#utility.yul\":1767:1769   */\n      0x20\n        /* \"#utility.yul\":1755:1764   */\n      dup3\n        /* \"#utility.yul\":1746:1753   */\n      dup5\n        /* \"#utility.yul\":1742:1765   */\n      sub\n        /* \"#utility.yul\":1738:1770   */\n      slt\n        /* \"#utility.yul\":1735:1854   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":1773:1852   */\n      tag_140\n      tag_96\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1735:1854   */\n    tag_139:\n        /* \"#utility.yul\":1893:1894   */\n      0x00\n        /* \"#utility.yul\":1918:1971   */\n      tag_141\n        /* \"#utility.yul\":1963:1970   */\n      dup5\n        /* \"#utility.yul\":1954:1960   */\n      dup3\n        /* \"#utility.yul\":1943:1952   */\n      dup6\n        /* \"#utility.yul\":1939:1961   */\n      add\n        /* \"#utility.yul\":1918:1971   */\n      tag_101\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1908:1971   */\n      swap2\n      pop\n        /* \"#utility.yul\":1864:1981   */\n      pop\n        /* \"#utility.yul\":1659:1988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1994:2112   */\n    tag_102:\n        /* \"#utility.yul\":2081:2105   */\n      tag_143\n        /* \"#utility.yul\":2099:2104   */\n      dup2\n        /* \"#utility.yul\":2081:2105   */\n      tag_99\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2076:2079   */\n      dup3\n        /* \"#utility.yul\":2069:2106   */\n      mstore\n        /* \"#utility.yul\":1994:2112   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2118:2340   */\n    tag_31:\n        /* \"#utility.yul\":2211:2215   */\n      0x00\n        /* \"#utility.yul\":2249:2251   */\n      0x20\n        /* \"#utility.yul\":2238:2247   */\n      dup3\n        /* \"#utility.yul\":2234:2252   */\n      add\n        /* \"#utility.yul\":2226:2252   */\n      swap1\n      pop\n        /* \"#utility.yul\":2262:2333   */\n      tag_145\n        /* \"#utility.yul\":2330:2331   */\n      0x00\n        /* \"#utility.yul\":2319:2328   */\n      dup4\n        /* \"#utility.yul\":2315:2332   */\n      add\n        /* \"#utility.yul\":2306:2312   */\n      dup5\n        /* \"#utility.yul\":2262:2333   */\n      tag_102\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2118:2340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2346:2515   */\n    tag_103:\n        /* \"#utility.yul\":2430:2441   */\n      0x00\n        /* \"#utility.yul\":2464:2470   */\n      dup3\n        /* \"#utility.yul\":2459:2462   */\n      dup3\n        /* \"#utility.yul\":2452:2471   */\n      mstore\n        /* \"#utility.yul\":2504:2508   */\n      0x20\n        /* \"#utility.yul\":2499:2502   */\n      dup3\n        /* \"#utility.yul\":2495:2509   */\n      add\n        /* \"#utility.yul\":2480:2509   */\n      swap1\n      pop\n        /* \"#utility.yul\":2346:2515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2521:2691   */\n    tag_104:\n        /* \"#utility.yul\":2661:2683   */\n      0x4e6f2066756e647320746f207769746864726177000000000000000000000000\n        /* \"#utility.yul\":2657:2658   */\n      0x00\n        /* \"#utility.yul\":2649:2655   */\n      dup3\n        /* \"#utility.yul\":2645:2659   */\n      add\n        /* \"#utility.yul\":2638:2684   */\n      mstore\n        /* \"#utility.yul\":2521:2691   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2697:3063   */\n    tag_105:\n        /* \"#utility.yul\":2839:2842   */\n      0x00\n        /* \"#utility.yul\":2860:2927   */\n      tag_149\n        /* \"#utility.yul\":2924:2926   */\n      0x14\n        /* \"#utility.yul\":2919:2922   */\n      dup4\n        /* \"#utility.yul\":2860:2927   */\n      tag_103\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2853:2927   */\n      swap2\n      pop\n        /* \"#utility.yul\":2936:3029   */\n      tag_150\n        /* \"#utility.yul\":3025:3028   */\n      dup3\n        /* \"#utility.yul\":2936:3029   */\n      tag_104\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":3054:3056   */\n      0x20\n        /* \"#utility.yul\":3049:3052   */\n      dup3\n        /* \"#utility.yul\":3045:3057   */\n      add\n        /* \"#utility.yul\":3038:3057   */\n      swap1\n      pop\n        /* \"#utility.yul\":2697:3063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3069:3488   */\n    tag_44:\n        /* \"#utility.yul\":3235:3239   */\n      0x00\n        /* \"#utility.yul\":3273:3275   */\n      0x20\n        /* \"#utility.yul\":3262:3271   */\n      dup3\n        /* \"#utility.yul\":3258:3276   */\n      add\n        /* \"#utility.yul\":3250:3276   */\n      swap1\n      pop\n        /* \"#utility.yul\":3322:3331   */\n      dup2\n        /* \"#utility.yul\":3316:3320   */\n      dup2\n        /* \"#utility.yul\":3312:3332   */\n      sub\n        /* \"#utility.yul\":3308:3309   */\n      0x00\n        /* \"#utility.yul\":3297:3306   */\n      dup4\n        /* \"#utility.yul\":3293:3310   */\n      add\n        /* \"#utility.yul\":3286:3333   */\n      mstore\n        /* \"#utility.yul\":3350:3481   */\n      tag_152\n        /* \"#utility.yul\":3476:3480   */\n      dup2\n        /* \"#utility.yul\":3350:3481   */\n      tag_105\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3342:3481   */\n      swap1\n      pop\n        /* \"#utility.yul\":3069:3488   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:3641   */\n    tag_106:\n        /* \"#utility.yul\":3595:3606   */\n      0x00\n        /* \"#utility.yul\":3632:3635   */\n      dup2\n        /* \"#utility.yul\":3617:3635   */\n      swap1\n      pop\n        /* \"#utility.yul\":3494:3641   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3647:3761   */\n    tag_107:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3767:4165   */\n    tag_108:\n        /* \"#utility.yul\":3926:3929   */\n      0x00\n        /* \"#utility.yul\":3947:4030   */\n      tag_156\n        /* \"#utility.yul\":4028:4029   */\n      0x00\n        /* \"#utility.yul\":4023:4026   */\n      dup4\n        /* \"#utility.yul\":3947:4030   */\n      tag_106\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3940:4030   */\n      swap2\n      pop\n        /* \"#utility.yul\":4039:4132   */\n      tag_157\n        /* \"#utility.yul\":4128:4131   */\n      dup3\n        /* \"#utility.yul\":4039:4132   */\n      tag_107\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4157:4158   */\n      0x00\n        /* \"#utility.yul\":4152:4155   */\n      dup3\n        /* \"#utility.yul\":4148:4159   */\n      add\n        /* \"#utility.yul\":4141:4159   */\n      swap1\n      pop\n        /* \"#utility.yul\":3767:4165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4171:4550   */\n    tag_46:\n        /* \"#utility.yul\":4355:4358   */\n      0x00\n        /* \"#utility.yul\":4377:4524   */\n      tag_159\n        /* \"#utility.yul\":4520:4523   */\n      dup3\n        /* \"#utility.yul\":4377:4524   */\n      tag_108\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4370:4524   */\n      swap2\n      pop\n        /* \"#utility.yul\":4541:4544   */\n      dup2\n        /* \"#utility.yul\":4534:4544   */\n      swap1\n      pop\n        /* \"#utility.yul\":4171:4550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4556:4723   */\n    tag_109:\n        /* \"#utility.yul\":4696:4715   */\n      0x5769746864726177616c206661696c6564000000000000000000000000000000\n        /* \"#utility.yul\":4692:4693   */\n      0x00\n        /* \"#utility.yul\":4684:4690   */\n      dup3\n        /* \"#utility.yul\":4680:4694   */\n      add\n        /* \"#utility.yul\":4673:4716   */\n      mstore\n        /* \"#utility.yul\":4556:4723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4729:5095   */\n    tag_110:\n        /* \"#utility.yul\":4871:4874   */\n      0x00\n        /* \"#utility.yul\":4892:4959   */\n      tag_162\n        /* \"#utility.yul\":4956:4958   */\n      0x11\n        /* \"#utility.yul\":4951:4954   */\n      dup4\n        /* \"#utility.yul\":4892:4959   */\n      tag_103\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4885:4959   */\n      swap2\n      pop\n        /* \"#utility.yul\":4968:5061   */\n      tag_163\n        /* \"#utility.yul\":5057:5060   */\n      dup3\n        /* \"#utility.yul\":4968:5061   */\n      tag_109\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5086:5088   */\n      0x20\n        /* \"#utility.yul\":5081:5084   */\n      dup3\n        /* \"#utility.yul\":5077:5089   */\n      add\n        /* \"#utility.yul\":5070:5089   */\n      swap1\n      pop\n        /* \"#utility.yul\":4729:5095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5101:5520   */\n    tag_52:\n        /* \"#utility.yul\":5267:5271   */\n      0x00\n        /* \"#utility.yul\":5305:5307   */\n      0x20\n        /* \"#utility.yul\":5294:5303   */\n      dup3\n        /* \"#utility.yul\":5290:5308   */\n      add\n        /* \"#utility.yul\":5282:5308   */\n      swap1\n      pop\n        /* \"#utility.yul\":5354:5363   */\n      dup2\n        /* \"#utility.yul\":5348:5352   */\n      dup2\n        /* \"#utility.yul\":5344:5364   */\n      sub\n        /* \"#utility.yul\":5340:5341   */\n      0x00\n        /* \"#utility.yul\":5329:5338   */\n      dup4\n        /* \"#utility.yul\":5325:5342   */\n      add\n        /* \"#utility.yul\":5318:5365   */\n      mstore\n        /* \"#utility.yul\":5382:5513   */\n      tag_165\n        /* \"#utility.yul\":5508:5512   */\n      dup2\n        /* \"#utility.yul\":5382:5513   */\n      tag_110\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5374:5513   */\n      swap1\n      pop\n        /* \"#utility.yul\":5101:5520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5526:5700   */\n    tag_111:\n        /* \"#utility.yul\":5666:5692   */\n      0x4d757374206465706f736974206d6f7265207468616e20300000000000000000\n        /* \"#utility.yul\":5662:5663   */\n      0x00\n        /* \"#utility.yul\":5654:5660   */\n      dup3\n        /* \"#utility.yul\":5650:5664   */\n      add\n        /* \"#utility.yul\":5643:5693   */\n      mstore\n        /* \"#utility.yul\":5526:5700   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5706:6072   */\n    tag_112:\n        /* \"#utility.yul\":5848:5851   */\n      0x00\n        /* \"#utility.yul\":5869:5936   */\n      tag_168\n        /* \"#utility.yul\":5933:5935   */\n      0x18\n        /* \"#utility.yul\":5928:5931   */\n      dup4\n        /* \"#utility.yul\":5869:5936   */\n      tag_103\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5862:5936   */\n      swap2\n      pop\n        /* \"#utility.yul\":5945:6038   */\n      tag_169\n        /* \"#utility.yul\":6034:6037   */\n      dup3\n        /* \"#utility.yul\":5945:6038   */\n      tag_111\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":6063:6065   */\n      0x20\n        /* \"#utility.yul\":6058:6061   */\n      dup3\n        /* \"#utility.yul\":6054:6066   */\n      add\n        /* \"#utility.yul\":6047:6066   */\n      swap1\n      pop\n        /* \"#utility.yul\":5706:6072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6078:6497   */\n    tag_68:\n        /* \"#utility.yul\":6244:6248   */\n      0x00\n        /* \"#utility.yul\":6282:6284   */\n      0x20\n        /* \"#utility.yul\":6271:6280   */\n      dup3\n        /* \"#utility.yul\":6267:6285   */\n      add\n        /* \"#utility.yul\":6259:6285   */\n      swap1\n      pop\n        /* \"#utility.yul\":6331:6340   */\n      dup2\n        /* \"#utility.yul\":6325:6329   */\n      dup2\n        /* \"#utility.yul\":6321:6341   */\n      sub\n        /* \"#utility.yul\":6317:6318   */\n      0x00\n        /* \"#utility.yul\":6306:6315   */\n      dup4\n        /* \"#utility.yul\":6302:6319   */\n      add\n        /* \"#utility.yul\":6295:6342   */\n      mstore\n        /* \"#utility.yul\":6359:6490   */\n      tag_171\n        /* \"#utility.yul\":6485:6489   */\n      dup2\n        /* \"#utility.yul\":6359:6490   */\n      tag_112\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6351:6490   */\n      swap1\n      pop\n        /* \"#utility.yul\":6078:6497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6503:6684   */\n    tag_113:\n        /* \"#utility.yul\":6643:6676   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":6639:6640   */\n      0x00\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6641   */\n      add\n        /* \"#utility.yul\":6620:6677   */\n      mstore\n        /* \"#utility.yul\":6503:6684   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6690:7056   */\n    tag_114:\n        /* \"#utility.yul\":6832:6835   */\n      0x00\n        /* \"#utility.yul\":6853:6920   */\n      tag_174\n        /* \"#utility.yul\":6917:6919   */\n      0x1f\n        /* \"#utility.yul\":6912:6915   */\n      dup4\n        /* \"#utility.yul\":6853:6920   */\n      tag_103\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6846:6920   */\n      swap2\n      pop\n        /* \"#utility.yul\":6929:7022   */\n      tag_175\n        /* \"#utility.yul\":7018:7021   */\n      dup3\n        /* \"#utility.yul\":6929:7022   */\n      tag_113\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":7047:7049   */\n      0x20\n        /* \"#utility.yul\":7042:7045   */\n      dup3\n        /* \"#utility.yul\":7038:7050   */\n      add\n        /* \"#utility.yul\":7031:7050   */\n      swap1\n      pop\n        /* \"#utility.yul\":6690:7056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7062:7481   */\n    tag_81:\n        /* \"#utility.yul\":7228:7232   */\n      0x00\n        /* \"#utility.yul\":7266:7268   */\n      0x20\n        /* \"#utility.yul\":7255:7264   */\n      dup3\n        /* \"#utility.yul\":7251:7269   */\n      add\n        /* \"#utility.yul\":7243:7269   */\n      swap1\n      pop\n        /* \"#utility.yul\":7315:7324   */\n      dup2\n        /* \"#utility.yul\":7309:7313   */\n      dup2\n        /* \"#utility.yul\":7305:7325   */\n      sub\n        /* \"#utility.yul\":7301:7302   */\n      0x00\n        /* \"#utility.yul\":7290:7299   */\n      dup4\n        /* \"#utility.yul\":7286:7303   */\n      add\n        /* \"#utility.yul\":7279:7326   */\n      mstore\n        /* \"#utility.yul\":7343:7474   */\n      tag_177\n        /* \"#utility.yul\":7469:7473   */\n      dup2\n        /* \"#utility.yul\":7343:7474   */\n      tag_114\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7335:7474   */\n      swap1\n      pop\n        /* \"#utility.yul\":7062:7481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e787964123e2c7257d84f86ec5808a1a7a74e2e11a83119bdb42082f183dff0864736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_277": {
									"entryPoint": null,
									"id": 277,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 157,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:4",
										"nodeType": "YulBlock",
										"src": "0:590:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:4",
													"nodeType": "YulBlock",
													"src": "52:81:4",
													"statements": [
														{
															"nativeSrc": "62:65:4",
															"nodeType": "YulAssignment",
															"src": "62:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:4",
																		"nodeType": "YulLiteral",
																		"src": "84:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:4"
																},
																"nativeSrc": "73:54:4",
																"nodeType": "YulFunctionCall",
																"src": "73:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:126:4"
											},
											{
												"body": {
													"nativeSrc": "184:51:4",
													"nodeType": "YulBlock",
													"src": "184:51:4",
													"statements": [
														{
															"nativeSrc": "194:35:4",
															"nodeType": "YulAssignment",
															"src": "194:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:4"
																},
																"nativeSrc": "205:24:4",
																"nodeType": "YulFunctionCall",
																"src": "205:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:4",
														"nodeType": "YulTypedName",
														"src": "166:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:4",
														"nodeType": "YulTypedName",
														"src": "176:7:4",
														"type": ""
													}
												],
												"src": "139:96:4"
											},
											{
												"body": {
													"nativeSrc": "306:53:4",
													"nodeType": "YulBlock",
													"src": "306:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:4"
																		},
																		"nativeSrc": "328:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:4"
																},
																"nativeSrc": "316:37:4",
																"nodeType": "YulFunctionCall",
																"src": "316:37:4"
															},
															"nativeSrc": "316:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:4",
														"nodeType": "YulTypedName",
														"src": "294:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:4",
														"nodeType": "YulTypedName",
														"src": "301:3:4",
														"type": ""
													}
												],
												"src": "241:118:4"
											},
											{
												"body": {
													"nativeSrc": "463:124:4",
													"nodeType": "YulBlock",
													"src": "463:124:4",
													"statements": [
														{
															"nativeSrc": "473:26:4",
															"nodeType": "YulAssignment",
															"src": "473:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:4",
																		"nodeType": "YulLiteral",
																		"src": "496:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:4"
																},
																"nativeSrc": "481:18:4",
																"nodeType": "YulFunctionCall",
																"src": "481:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:4",
																				"nodeType": "YulLiteral",
																				"src": "577:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:4"
																		},
																		"nativeSrc": "562:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:4"
																},
																"nativeSrc": "509:71:4",
																"nodeType": "YulFunctionCall",
																"src": "509:71:4"
															},
															"nativeSrc": "509:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:4",
														"nodeType": "YulTypedName",
														"src": "435:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:4",
														"nodeType": "YulTypedName",
														"src": "447:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:4",
														"nodeType": "YulTypedName",
														"src": "458:4:4",
														"type": ""
													}
												],
												"src": "365:222:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610078919061019d565b60405180910390fd5b6100908161009d60201b60201c565b50600180819055506101b6565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101878261015e565b9050919050565b6101978161017d565b82525050565b5f6020820190506101b05f83018461018e565b92915050565b610a6f806101c35f395ff3fe608060405260043610610058575f3560e01c806327e235e3146101045780633ccfd60b14610140578063715018a6146101565780638da5cb5b1461016c578063d0e30db014610196578063f2fde38b146101a057610100565b36610100573460025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546100a9919061073c565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4346040516100f6919061077e565b60405180910390a2005b5f5ffd5b34801561010f575f5ffd5b5061012a600480360381019061012591906107f5565b6101c8565b604051610137919061077e565b60405180910390f35b34801561014b575f5ffd5b506101546101dd565b005b348015610161575f5ffd5b5061016a6103ac565b005b348015610177575f5ffd5b506101806103bf565b60405161018d919061082f565b60405180910390f35b61019e6103e6565b005b3480156101ab575f5ffd5b506101c660048036038101906101c191906107f5565b6104db565b005b6002602052805f5260405f205f915090505481565b6101e561055f565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025f906108a2565b60405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f3373ffffffffffffffffffffffffffffffffffffffff16826040516102cf906108ed565b5f6040518083038185875af1925050503d805f8114610309576040519150601f19603f3d011682016040523d82523d5f602084013e61030e565b606091505b5050905080610352576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103499061094b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d583604051610398919061077e565b60405180910390a250506103aa6105ae565b565b6103b46105b7565b6103bd5f61063e565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103ee61055f565b5f3411610430576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610427906109b3565b60405180910390fd5b3460025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461047c919061073c565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4346040516104c9919061077e565b60405180910390a26104d96105ae565b565b6104e36105b7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610553575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161054a919061082f565b60405180910390fd5b61055c8161063e565b50565b6002600154036105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b90610a1b565b60405180910390fd5b6002600181905550565b60018081905550565b6105bf6106ff565b73ffffffffffffffffffffffffffffffffffffffff166105dd6103bf565b73ffffffffffffffffffffffffffffffffffffffff161461063c576106006106ff565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610633919061082f565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61074682610706565b915061075183610706565b92508282019050808211156107695761076861070f565b5b92915050565b61077881610706565b82525050565b5f6020820190506107915f83018461076f565b92915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107c48261079b565b9050919050565b6107d4816107ba565b81146107de575f5ffd5b50565b5f813590506107ef816107cb565b92915050565b5f6020828403121561080a57610809610797565b5b5f610817848285016107e1565b91505092915050565b610829816107ba565b82525050565b5f6020820190506108425f830184610820565b92915050565b5f82825260208201905092915050565b7f4e6f2066756e647320746f2077697468647261770000000000000000000000005f82015250565b5f61088c601483610848565b915061089782610858565b602082019050919050565b5f6020820190508181035f8301526108b981610880565b9050919050565b5f81905092915050565b50565b5f6108d85f836108c0565b91506108e3826108ca565b5f82019050919050565b5f6108f7826108cd565b9150819050919050565b7f5769746864726177616c206661696c65640000000000000000000000000000005f82015250565b5f610935601183610848565b915061094082610901565b602082019050919050565b5f6020820190508181035f83015261096281610929565b9050919050565b7f4d757374206465706f736974206d6f7265207468616e203000000000000000005f82015250565b5f61099d601883610848565b91506109a882610969565b602082019050919050565b5f6020820190508181035f8301526109ca81610991565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610a05601f83610848565b9150610a10826109d1565b602082019050919050565b5f6020820190508181035f830152610a32816109f9565b905091905056fea2646970667358221220e787964123e2c7257d84f86ec5808a1a7a74e2e11a83119bdb42082f183dff0864736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x9D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x1B6 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x187 DUP3 PUSH2 0x15E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197 DUP2 PUSH2 0x17D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA6F DUP1 PUSH2 0x1C3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A0 JUMPI PUSH2 0x100 JUMP JUMPDEST CALLDATASIZE PUSH2 0x100 JUMPI CALLVALUE PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x73C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x154 PUSH2 0x1DD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x3AC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x3E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x55F JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP1 PUSH2 0x8ED JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x30E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x352 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x349 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x3AA PUSH2 0x5AE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x3BD PUSH0 PUSH2 0x63E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x55F JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x430 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x427 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x73C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x4D9 PUSH2 0x5AE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4E3 PUSH2 0x5B7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x553 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x55C DUP2 PUSH2 0x63E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59B SWAP1 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x5BF PUSH2 0x6FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5DD PUSH2 0x3BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x63C JUMPI PUSH2 0x600 PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x633 SWAP2 SWAP1 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x746 DUP3 PUSH2 0x706 JUMP JUMPDEST SWAP2 POP PUSH2 0x751 DUP4 PUSH2 0x706 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x769 JUMPI PUSH2 0x768 PUSH2 0x70F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x778 DUP2 PUSH2 0x706 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x791 PUSH0 DUP4 ADD DUP5 PUSH2 0x76F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7C4 DUP3 PUSH2 0x79B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D4 DUP2 PUSH2 0x7BA JUMP JUMPDEST DUP2 EQ PUSH2 0x7DE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7EF DUP2 PUSH2 0x7CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80A JUMPI PUSH2 0x809 PUSH2 0x797 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x817 DUP5 DUP3 DUP6 ADD PUSH2 0x7E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x829 DUP2 PUSH2 0x7BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x842 PUSH0 DUP4 ADD DUP5 PUSH2 0x820 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2066756E647320746F207769746864726177000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x88C PUSH1 0x14 DUP4 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP PUSH2 0x897 DUP3 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8B9 DUP2 PUSH2 0x880 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x8D8 PUSH0 DUP4 PUSH2 0x8C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x8E3 DUP3 PUSH2 0x8CA JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8F7 DUP3 PUSH2 0x8CD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177616C206661696C6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x935 PUSH1 0x11 DUP4 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP PUSH2 0x940 DUP3 PUSH2 0x901 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x962 DUP2 PUSH2 0x929 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D757374206465706F736974206D6F7265207468616E20300000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x99D PUSH1 0x18 DUP4 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP PUSH2 0x9A8 DUP3 PUSH2 0x969 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9CA DUP2 PUSH2 0x991 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA05 PUSH1 0x1F DUP4 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP PUSH2 0xA10 DUP3 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA32 DUP2 PUSH2 0x9F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAPN 0x87 SWAP7 COINBASE 0x23 0xE2 0xC7 0x25 PUSH30 0x84F86EC5808A1A7A74E2E11A83119BDB42082F183DFF0864736F6C634300 ADDMOD SAR STOP CALLER ",
							"sourceMap": "499:2034:3:-:0;;;939:36;;;;;;;;;;961:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:1;1821:7;:22;;;;499:2034:3;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:4:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;499:2034:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_379": {
									"entryPoint": null,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1463,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_224": {
									"entryPoint": 1791,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 1454,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 1375,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1598,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balances_256": {
									"entryPoint": 456,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_307": {
									"entryPoint": 998,
									"id": 307,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 959,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 940,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1243,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_359": {
									"entryPoint": 477,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1943,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9": {
									"entryPoint": 2136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 2250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 2513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88": {
									"entryPoint": 2305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032": {
									"entryPoint": 2409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7484:4",
										"nodeType": "YulBlock",
										"src": "0:7484:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:4",
													"nodeType": "YulBlock",
													"src": "52:32:4",
													"statements": [
														{
															"nativeSrc": "62:16:4",
															"nodeType": "YulAssignment",
															"src": "62:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:4",
																"nodeType": "YulIdentifier",
																"src": "73:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:77:4"
											},
											{
												"body": {
													"nativeSrc": "118:152:4",
													"nodeType": "YulBlock",
													"src": "118:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "135:1:4",
																		"nodeType": "YulLiteral",
																		"src": "135:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "138:77:4",
																		"nodeType": "YulLiteral",
																		"src": "138:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "128:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:4"
																},
																"nativeSrc": "128:88:4",
																"nodeType": "YulFunctionCall",
																"src": "128:88:4"
															},
															"nativeSrc": "128:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "128:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "232:1:4",
																		"nodeType": "YulLiteral",
																		"src": "232:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "235:4:4",
																		"nodeType": "YulLiteral",
																		"src": "235:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "225:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:4"
																},
																"nativeSrc": "225:15:4",
																"nodeType": "YulFunctionCall",
																"src": "225:15:4"
															},
															"nativeSrc": "225:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "225:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:4",
																		"nodeType": "YulLiteral",
																		"src": "256:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "259:4:4",
																		"nodeType": "YulLiteral",
																		"src": "259:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "249:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:4"
																},
																"nativeSrc": "249:15:4",
																"nodeType": "YulFunctionCall",
																"src": "249:15:4"
															},
															"nativeSrc": "249:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "249:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "90:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:4"
											},
											{
												"body": {
													"nativeSrc": "320:147:4",
													"nodeType": "YulBlock",
													"src": "320:147:4",
													"statements": [
														{
															"nativeSrc": "330:25:4",
															"nodeType": "YulAssignment",
															"src": "330:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "353:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "335:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "335:17:4"
																},
																"nativeSrc": "335:20:4",
																"nodeType": "YulFunctionCall",
																"src": "335:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "330:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "330:1:4"
																}
															]
														},
														{
															"nativeSrc": "364:25:4",
															"nodeType": "YulAssignment",
															"src": "364:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "387:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "369:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "369:17:4"
																},
																"nativeSrc": "369:20:4",
																"nodeType": "YulFunctionCall",
																"src": "369:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "364:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "364:1:4"
																}
															]
														},
														{
															"nativeSrc": "398:16:4",
															"nodeType": "YulAssignment",
															"src": "398:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "409:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "409:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "412:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "412:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "405:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:4"
																},
																"nativeSrc": "405:9:4",
																"nodeType": "YulFunctionCall",
																"src": "405:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "398:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "438:22:4",
																"nodeType": "YulBlock",
																"src": "438:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "440:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "440:16:4"
																			},
																			"nativeSrc": "440:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "440:18:4"
																		},
																		"nativeSrc": "440:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "440:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "430:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "430:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "433:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "433:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "427:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "427:2:4"
																},
																"nativeSrc": "427:10:4",
																"nodeType": "YulFunctionCall",
																"src": "427:10:4"
															},
															"nativeSrc": "424:36:4",
															"nodeType": "YulIf",
															"src": "424:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "276:191:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "307:1:4",
														"nodeType": "YulTypedName",
														"src": "307:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "310:1:4",
														"nodeType": "YulTypedName",
														"src": "310:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "316:3:4",
														"nodeType": "YulTypedName",
														"src": "316:3:4",
														"type": ""
													}
												],
												"src": "276:191:4"
											},
											{
												"body": {
													"nativeSrc": "538:53:4",
													"nodeType": "YulBlock",
													"src": "538:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "555:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "555:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "578:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "578:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "560:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "560:17:4"
																		},
																		"nativeSrc": "560:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "560:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "548:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:4"
																},
																"nativeSrc": "548:37:4",
																"nodeType": "YulFunctionCall",
																"src": "548:37:4"
															},
															"nativeSrc": "548:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "548:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "473:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "526:5:4",
														"nodeType": "YulTypedName",
														"src": "526:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "533:3:4",
														"nodeType": "YulTypedName",
														"src": "533:3:4",
														"type": ""
													}
												],
												"src": "473:118:4"
											},
											{
												"body": {
													"nativeSrc": "695:124:4",
													"nodeType": "YulBlock",
													"src": "695:124:4",
													"statements": [
														{
															"nativeSrc": "705:26:4",
															"nodeType": "YulAssignment",
															"src": "705:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "717:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "717:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "728:2:4",
																		"nodeType": "YulLiteral",
																		"src": "728:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "713:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "713:3:4"
																},
																"nativeSrc": "713:18:4",
																"nodeType": "YulFunctionCall",
																"src": "713:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "705:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "705:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "785:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "798:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "798:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "809:1:4",
																				"nodeType": "YulLiteral",
																				"src": "809:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "794:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:4"
																		},
																		"nativeSrc": "794:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "794:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "741:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "741:43:4"
																},
																"nativeSrc": "741:71:4",
																"nodeType": "YulFunctionCall",
																"src": "741:71:4"
															},
															"nativeSrc": "741:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "741:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "597:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "667:9:4",
														"nodeType": "YulTypedName",
														"src": "667:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "679:6:4",
														"nodeType": "YulTypedName",
														"src": "679:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "690:4:4",
														"nodeType": "YulTypedName",
														"src": "690:4:4",
														"type": ""
													}
												],
												"src": "597:222:4"
											},
											{
												"body": {
													"nativeSrc": "865:35:4",
													"nodeType": "YulBlock",
													"src": "865:35:4",
													"statements": [
														{
															"nativeSrc": "875:19:4",
															"nodeType": "YulAssignment",
															"src": "875:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "891:2:4",
																		"nodeType": "YulLiteral",
																		"src": "891:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "885:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "885:5:4"
																},
																"nativeSrc": "885:9:4",
																"nodeType": "YulFunctionCall",
																"src": "885:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "875:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "825:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "858:6:4",
														"nodeType": "YulTypedName",
														"src": "858:6:4",
														"type": ""
													}
												],
												"src": "825:75:4"
											},
											{
												"body": {
													"nativeSrc": "995:28:4",
													"nodeType": "YulBlock",
													"src": "995:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1012:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1012:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1015:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1015:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1005:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1005:6:4"
																},
																"nativeSrc": "1005:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1005:12:4"
															},
															"nativeSrc": "1005:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1005:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "906:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "906:117:4"
											},
											{
												"body": {
													"nativeSrc": "1118:28:4",
													"nodeType": "YulBlock",
													"src": "1118:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1135:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1135:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1138:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1138:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1128:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1128:6:4"
																},
																"nativeSrc": "1128:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1128:12:4"
															},
															"nativeSrc": "1128:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1128:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1029:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1029:117:4"
											},
											{
												"body": {
													"nativeSrc": "1197:81:4",
													"nodeType": "YulBlock",
													"src": "1197:81:4",
													"statements": [
														{
															"nativeSrc": "1207:65:4",
															"nodeType": "YulAssignment",
															"src": "1207:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1222:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1222:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1229:42:4",
																		"nodeType": "YulLiteral",
																		"src": "1229:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1218:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1218:3:4"
																},
																"nativeSrc": "1218:54:4",
																"nodeType": "YulFunctionCall",
																"src": "1218:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1207:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1207:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1152:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1179:5:4",
														"nodeType": "YulTypedName",
														"src": "1179:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1189:7:4",
														"nodeType": "YulTypedName",
														"src": "1189:7:4",
														"type": ""
													}
												],
												"src": "1152:126:4"
											},
											{
												"body": {
													"nativeSrc": "1329:51:4",
													"nodeType": "YulBlock",
													"src": "1329:51:4",
													"statements": [
														{
															"nativeSrc": "1339:35:4",
															"nodeType": "YulAssignment",
															"src": "1339:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1368:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1368:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1350:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1350:17:4"
																},
																"nativeSrc": "1350:24:4",
																"nodeType": "YulFunctionCall",
																"src": "1350:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1339:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1339:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1284:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1311:5:4",
														"nodeType": "YulTypedName",
														"src": "1311:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1321:7:4",
														"nodeType": "YulTypedName",
														"src": "1321:7:4",
														"type": ""
													}
												],
												"src": "1284:96:4"
											},
											{
												"body": {
													"nativeSrc": "1429:79:4",
													"nodeType": "YulBlock",
													"src": "1429:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1486:16:4",
																"nodeType": "YulBlock",
																"src": "1486:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1495:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1495:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1498:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1498:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1488:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1488:6:4"
																			},
																			"nativeSrc": "1488:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1488:12:4"
																		},
																		"nativeSrc": "1488:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1488:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1452:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1452:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1477:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1477:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1459:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1459:17:4"
																				},
																				"nativeSrc": "1459:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1449:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1449:2:4"
																		},
																		"nativeSrc": "1449:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1449:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1442:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:4"
																},
																"nativeSrc": "1442:43:4",
																"nodeType": "YulFunctionCall",
																"src": "1442:43:4"
															},
															"nativeSrc": "1439:63:4",
															"nodeType": "YulIf",
															"src": "1439:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1386:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1422:5:4",
														"nodeType": "YulTypedName",
														"src": "1422:5:4",
														"type": ""
													}
												],
												"src": "1386:122:4"
											},
											{
												"body": {
													"nativeSrc": "1566:87:4",
													"nodeType": "YulBlock",
													"src": "1566:87:4",
													"statements": [
														{
															"nativeSrc": "1576:29:4",
															"nodeType": "YulAssignment",
															"src": "1576:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1598:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1598:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1585:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1585:12:4"
																},
																"nativeSrc": "1585:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1585:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1576:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1576:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1641:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1641:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1614:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1614:26:4"
																},
																"nativeSrc": "1614:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1614:33:4"
															},
															"nativeSrc": "1614:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1614:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1514:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1544:6:4",
														"nodeType": "YulTypedName",
														"src": "1544:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1552:3:4",
														"nodeType": "YulTypedName",
														"src": "1552:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1560:5:4",
														"nodeType": "YulTypedName",
														"src": "1560:5:4",
														"type": ""
													}
												],
												"src": "1514:139:4"
											},
											{
												"body": {
													"nativeSrc": "1725:263:4",
													"nodeType": "YulBlock",
													"src": "1725:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1771:83:4",
																"nodeType": "YulBlock",
																"src": "1771:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1773:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1773:77:4"
																			},
																			"nativeSrc": "1773:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1773:79:4"
																		},
																		"nativeSrc": "1773:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1773:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1746:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1746:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1755:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1755:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1742:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1742:3:4"
																		},
																		"nativeSrc": "1742:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1742:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1767:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1767:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1738:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1738:3:4"
																},
																"nativeSrc": "1738:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1738:32:4"
															},
															"nativeSrc": "1735:119:4",
															"nodeType": "YulIf",
															"src": "1735:119:4"
														},
														{
															"nativeSrc": "1864:117:4",
															"nodeType": "YulBlock",
															"src": "1864:117:4",
															"statements": [
																{
																	"nativeSrc": "1879:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1879:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1893:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1893:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1883:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1883:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1908:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1908:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1943:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1943:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1954:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1954:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1939:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1939:3:4"
																				},
																				"nativeSrc": "1939:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1939:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1963:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1963:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1918:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1918:20:4"
																		},
																		"nativeSrc": "1918:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1918:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1908:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1908:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1659:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1695:9:4",
														"nodeType": "YulTypedName",
														"src": "1695:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1706:7:4",
														"nodeType": "YulTypedName",
														"src": "1706:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1718:6:4",
														"nodeType": "YulTypedName",
														"src": "1718:6:4",
														"type": ""
													}
												],
												"src": "1659:329:4"
											},
											{
												"body": {
													"nativeSrc": "2059:53:4",
													"nodeType": "YulBlock",
													"src": "2059:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2076:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2076:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2099:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2099:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2081:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2081:17:4"
																		},
																		"nativeSrc": "2081:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2081:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2069:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:4"
																},
																"nativeSrc": "2069:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2069:37:4"
															},
															"nativeSrc": "2069:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2069:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1994:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2047:5:4",
														"nodeType": "YulTypedName",
														"src": "2047:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2054:3:4",
														"nodeType": "YulTypedName",
														"src": "2054:3:4",
														"type": ""
													}
												],
												"src": "1994:118:4"
											},
											{
												"body": {
													"nativeSrc": "2216:124:4",
													"nodeType": "YulBlock",
													"src": "2216:124:4",
													"statements": [
														{
															"nativeSrc": "2226:26:4",
															"nodeType": "YulAssignment",
															"src": "2226:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2238:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2238:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2249:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2249:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2234:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2234:3:4"
																},
																"nativeSrc": "2234:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2234:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2226:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2226:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2306:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2306:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2319:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2319:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2330:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2330:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2315:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2315:3:4"
																		},
																		"nativeSrc": "2315:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2315:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2262:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2262:43:4"
																},
																"nativeSrc": "2262:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2262:71:4"
															},
															"nativeSrc": "2262:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2262:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2118:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2188:9:4",
														"nodeType": "YulTypedName",
														"src": "2188:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2200:6:4",
														"nodeType": "YulTypedName",
														"src": "2200:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2211:4:4",
														"nodeType": "YulTypedName",
														"src": "2211:4:4",
														"type": ""
													}
												],
												"src": "2118:222:4"
											},
											{
												"body": {
													"nativeSrc": "2442:73:4",
													"nodeType": "YulBlock",
													"src": "2442:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2459:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2459:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2464:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2464:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2452:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2452:6:4"
																},
																"nativeSrc": "2452:19:4",
																"nodeType": "YulFunctionCall",
																"src": "2452:19:4"
															},
															"nativeSrc": "2452:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "2452:19:4"
														},
														{
															"nativeSrc": "2480:29:4",
															"nodeType": "YulAssignment",
															"src": "2480:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2499:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2499:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2504:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2504:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2495:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2495:3:4"
																},
																"nativeSrc": "2495:14:4",
																"nodeType": "YulFunctionCall",
																"src": "2495:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2480:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "2480:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2346:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2414:3:4",
														"nodeType": "YulTypedName",
														"src": "2414:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2419:6:4",
														"nodeType": "YulTypedName",
														"src": "2419:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2430:11:4",
														"nodeType": "YulTypedName",
														"src": "2430:11:4",
														"type": ""
													}
												],
												"src": "2346:169:4"
											},
											{
												"body": {
													"nativeSrc": "2627:64:4",
													"nodeType": "YulBlock",
													"src": "2627:64:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2649:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2649:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2657:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2657:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2645:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2645:3:4"
																		},
																		"nativeSrc": "2645:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2645:14:4"
																	},
																	{
																		"hexValue": "4e6f2066756e647320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "2661:22:4",
																		"nodeType": "YulLiteral",
																		"src": "2661:22:4",
																		"type": "",
																		"value": "No funds to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2638:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2638:6:4"
																},
																"nativeSrc": "2638:46:4",
																"nodeType": "YulFunctionCall",
																"src": "2638:46:4"
															},
															"nativeSrc": "2638:46:4",
															"nodeType": "YulExpressionStatement",
															"src": "2638:46:4"
														}
													]
												},
												"name": "store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
												"nativeSrc": "2521:170:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2619:6:4",
														"nodeType": "YulTypedName",
														"src": "2619:6:4",
														"type": ""
													}
												],
												"src": "2521:170:4"
											},
											{
												"body": {
													"nativeSrc": "2843:220:4",
													"nodeType": "YulBlock",
													"src": "2843:220:4",
													"statements": [
														{
															"nativeSrc": "2853:74:4",
															"nodeType": "YulAssignment",
															"src": "2853:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2919:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2919:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2924:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2924:2:4",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2860:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "2860:58:4"
																},
																"nativeSrc": "2860:67:4",
																"nodeType": "YulFunctionCall",
																"src": "2860:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2853:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2853:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3025:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3025:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																	"nativeSrc": "2936:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "2936:88:4"
																},
																"nativeSrc": "2936:93:4",
																"nodeType": "YulFunctionCall",
																"src": "2936:93:4"
															},
															"nativeSrc": "2936:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "2936:93:4"
														},
														{
															"nativeSrc": "3038:19:4",
															"nodeType": "YulAssignment",
															"src": "3038:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3049:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3049:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3054:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3054:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3045:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3045:3:4"
																},
																"nativeSrc": "3045:12:4",
																"nodeType": "YulFunctionCall",
																"src": "3045:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3038:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3038:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2697:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2831:3:4",
														"nodeType": "YulTypedName",
														"src": "2831:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2839:3:4",
														"nodeType": "YulTypedName",
														"src": "2839:3:4",
														"type": ""
													}
												],
												"src": "2697:366:4"
											},
											{
												"body": {
													"nativeSrc": "3240:248:4",
													"nodeType": "YulBlock",
													"src": "3240:248:4",
													"statements": [
														{
															"nativeSrc": "3250:26:4",
															"nodeType": "YulAssignment",
															"src": "3250:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3262:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3262:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3273:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3273:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3258:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3258:3:4"
																},
																"nativeSrc": "3258:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3258:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3250:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3250:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3297:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3297:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3308:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3308:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3293:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3293:3:4"
																		},
																		"nativeSrc": "3293:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3293:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3316:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "3316:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3322:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3322:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3312:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3312:3:4"
																		},
																		"nativeSrc": "3312:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3286:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:4"
																},
																"nativeSrc": "3286:47:4",
																"nodeType": "YulFunctionCall",
																"src": "3286:47:4"
															},
															"nativeSrc": "3286:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "3286:47:4"
														},
														{
															"nativeSrc": "3342:139:4",
															"nodeType": "YulAssignment",
															"src": "3342:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3476:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "3476:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3350:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "3350:124:4"
																},
																"nativeSrc": "3350:131:4",
																"nodeType": "YulFunctionCall",
																"src": "3350:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3342:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3342:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3069:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3220:9:4",
														"nodeType": "YulTypedName",
														"src": "3220:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3235:4:4",
														"nodeType": "YulTypedName",
														"src": "3235:4:4",
														"type": ""
													}
												],
												"src": "3069:419:4"
											},
											{
												"body": {
													"nativeSrc": "3607:34:4",
													"nodeType": "YulBlock",
													"src": "3607:34:4",
													"statements": [
														{
															"nativeSrc": "3617:18:4",
															"nodeType": "YulAssignment",
															"src": "3617:18:4",
															"value": {
																"name": "pos",
																"nativeSrc": "3632:3:4",
																"nodeType": "YulIdentifier",
																"src": "3632:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3617:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "3617:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "3494:147:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3579:3:4",
														"nodeType": "YulTypedName",
														"src": "3579:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3584:6:4",
														"nodeType": "YulTypedName",
														"src": "3584:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3595:11:4",
														"nodeType": "YulTypedName",
														"src": "3595:11:4",
														"type": ""
													}
												],
												"src": "3494:147:4"
											},
											{
												"body": {
													"nativeSrc": "3753:8:4",
													"nodeType": "YulBlock",
													"src": "3753:8:4",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "3647:114:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3745:6:4",
														"nodeType": "YulTypedName",
														"src": "3745:6:4",
														"type": ""
													}
												],
												"src": "3647:114:4"
											},
											{
												"body": {
													"nativeSrc": "3930:235:4",
													"nodeType": "YulBlock",
													"src": "3930:235:4",
													"statements": [
														{
															"nativeSrc": "3940:90:4",
															"nodeType": "YulAssignment",
															"src": "3940:90:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4023:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4023:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4028:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4028:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "3947:75:4",
																	"nodeType": "YulIdentifier",
																	"src": "3947:75:4"
																},
																"nativeSrc": "3947:83:4",
																"nodeType": "YulFunctionCall",
																"src": "3947:83:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3940:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3940:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4128:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4128:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "4039:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "4039:88:4"
																},
																"nativeSrc": "4039:93:4",
																"nodeType": "YulFunctionCall",
																"src": "4039:93:4"
															},
															"nativeSrc": "4039:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "4039:93:4"
														},
														{
															"nativeSrc": "4141:18:4",
															"nodeType": "YulAssignment",
															"src": "4141:18:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4152:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4152:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4157:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4157:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4148:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4148:3:4"
																},
																"nativeSrc": "4148:11:4",
																"nodeType": "YulFunctionCall",
																"src": "4148:11:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4141:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4141:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "3767:398:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3918:3:4",
														"nodeType": "YulTypedName",
														"src": "3918:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3926:3:4",
														"nodeType": "YulTypedName",
														"src": "3926:3:4",
														"type": ""
													}
												],
												"src": "3767:398:4"
											},
											{
												"body": {
													"nativeSrc": "4359:191:4",
													"nodeType": "YulBlock",
													"src": "4359:191:4",
													"statements": [
														{
															"nativeSrc": "4370:154:4",
															"nodeType": "YulAssignment",
															"src": "4370:154:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4520:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4520:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "4377:141:4",
																	"nodeType": "YulIdentifier",
																	"src": "4377:141:4"
																},
																"nativeSrc": "4377:147:4",
																"nodeType": "YulFunctionCall",
																"src": "4377:147:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4370:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4370:3:4"
																}
															]
														},
														{
															"nativeSrc": "4534:10:4",
															"nodeType": "YulAssignment",
															"src": "4534:10:4",
															"value": {
																"name": "pos",
																"nativeSrc": "4541:3:4",
																"nodeType": "YulIdentifier",
																"src": "4541:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4534:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4534:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4171:379:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4346:3:4",
														"nodeType": "YulTypedName",
														"src": "4346:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4355:3:4",
														"nodeType": "YulTypedName",
														"src": "4355:3:4",
														"type": ""
													}
												],
												"src": "4171:379:4"
											},
											{
												"body": {
													"nativeSrc": "4662:61:4",
													"nodeType": "YulBlock",
													"src": "4662:61:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4684:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4684:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4692:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4692:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4680:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4680:3:4"
																		},
																		"nativeSrc": "4680:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4680:14:4"
																	},
																	{
																		"hexValue": "5769746864726177616c206661696c6564",
																		"kind": "string",
																		"nativeSrc": "4696:19:4",
																		"nodeType": "YulLiteral",
																		"src": "4696:19:4",
																		"type": "",
																		"value": "Withdrawal failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4673:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4673:6:4"
																},
																"nativeSrc": "4673:43:4",
																"nodeType": "YulFunctionCall",
																"src": "4673:43:4"
															},
															"nativeSrc": "4673:43:4",
															"nodeType": "YulExpressionStatement",
															"src": "4673:43:4"
														}
													]
												},
												"name": "store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
												"nativeSrc": "4556:167:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4654:6:4",
														"nodeType": "YulTypedName",
														"src": "4654:6:4",
														"type": ""
													}
												],
												"src": "4556:167:4"
											},
											{
												"body": {
													"nativeSrc": "4875:220:4",
													"nodeType": "YulBlock",
													"src": "4875:220:4",
													"statements": [
														{
															"nativeSrc": "4885:74:4",
															"nodeType": "YulAssignment",
															"src": "4885:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4951:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4951:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4956:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4956:2:4",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4892:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "4892:58:4"
																},
																"nativeSrc": "4892:67:4",
																"nodeType": "YulFunctionCall",
																"src": "4892:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4885:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4885:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5057:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5057:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																	"nativeSrc": "4968:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "4968:88:4"
																},
																"nativeSrc": "4968:93:4",
																"nodeType": "YulFunctionCall",
																"src": "4968:93:4"
															},
															"nativeSrc": "4968:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "4968:93:4"
														},
														{
															"nativeSrc": "5070:19:4",
															"nodeType": "YulAssignment",
															"src": "5070:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5081:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5081:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5086:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5086:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5077:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5077:3:4"
																},
																"nativeSrc": "5077:12:4",
																"nodeType": "YulFunctionCall",
																"src": "5077:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5070:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5070:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4729:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4863:3:4",
														"nodeType": "YulTypedName",
														"src": "4863:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4871:3:4",
														"nodeType": "YulTypedName",
														"src": "4871:3:4",
														"type": ""
													}
												],
												"src": "4729:366:4"
											},
											{
												"body": {
													"nativeSrc": "5272:248:4",
													"nodeType": "YulBlock",
													"src": "5272:248:4",
													"statements": [
														{
															"nativeSrc": "5282:26:4",
															"nodeType": "YulAssignment",
															"src": "5282:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5294:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5294:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5305:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5305:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5290:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5290:3:4"
																},
																"nativeSrc": "5290:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5290:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5282:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5282:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5329:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5329:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5340:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5340:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5325:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5325:3:4"
																		},
																		"nativeSrc": "5325:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5325:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5348:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "5348:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5354:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5354:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5344:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5344:3:4"
																		},
																		"nativeSrc": "5344:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5344:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5318:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5318:6:4"
																},
																"nativeSrc": "5318:47:4",
																"nodeType": "YulFunctionCall",
																"src": "5318:47:4"
															},
															"nativeSrc": "5318:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "5318:47:4"
														},
														{
															"nativeSrc": "5374:139:4",
															"nodeType": "YulAssignment",
															"src": "5374:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5508:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5508:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5382:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "5382:124:4"
																},
																"nativeSrc": "5382:131:4",
																"nodeType": "YulFunctionCall",
																"src": "5382:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5374:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5374:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5101:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5252:9:4",
														"nodeType": "YulTypedName",
														"src": "5252:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5267:4:4",
														"nodeType": "YulTypedName",
														"src": "5267:4:4",
														"type": ""
													}
												],
												"src": "5101:419:4"
											},
											{
												"body": {
													"nativeSrc": "5632:68:4",
													"nodeType": "YulBlock",
													"src": "5632:68:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5654:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5654:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5662:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5662:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5650:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5650:3:4"
																		},
																		"nativeSrc": "5650:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5650:14:4"
																	},
																	{
																		"hexValue": "4d757374206465706f736974206d6f7265207468616e2030",
																		"kind": "string",
																		"nativeSrc": "5666:26:4",
																		"nodeType": "YulLiteral",
																		"src": "5666:26:4",
																		"type": "",
																		"value": "Must deposit more than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5643:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5643:6:4"
																},
																"nativeSrc": "5643:50:4",
																"nodeType": "YulFunctionCall",
																"src": "5643:50:4"
															},
															"nativeSrc": "5643:50:4",
															"nodeType": "YulExpressionStatement",
															"src": "5643:50:4"
														}
													]
												},
												"name": "store_literal_in_memory_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032",
												"nativeSrc": "5526:174:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5624:6:4",
														"nodeType": "YulTypedName",
														"src": "5624:6:4",
														"type": ""
													}
												],
												"src": "5526:174:4"
											},
											{
												"body": {
													"nativeSrc": "5852:220:4",
													"nodeType": "YulBlock",
													"src": "5852:220:4",
													"statements": [
														{
															"nativeSrc": "5862:74:4",
															"nodeType": "YulAssignment",
															"src": "5862:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5928:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5928:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5933:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5933:2:4",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5869:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "5869:58:4"
																},
																"nativeSrc": "5869:67:4",
																"nodeType": "YulFunctionCall",
																"src": "5869:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5862:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5862:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6034:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6034:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032",
																	"nativeSrc": "5945:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "5945:88:4"
																},
																"nativeSrc": "5945:93:4",
																"nodeType": "YulFunctionCall",
																"src": "5945:93:4"
															},
															"nativeSrc": "5945:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "5945:93:4"
														},
														{
															"nativeSrc": "6047:19:4",
															"nodeType": "YulAssignment",
															"src": "6047:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6058:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6058:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6063:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6063:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6054:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6054:3:4"
																},
																"nativeSrc": "6054:12:4",
																"nodeType": "YulFunctionCall",
																"src": "6054:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6047:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6047:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5706:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5840:3:4",
														"nodeType": "YulTypedName",
														"src": "5840:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5848:3:4",
														"nodeType": "YulTypedName",
														"src": "5848:3:4",
														"type": ""
													}
												],
												"src": "5706:366:4"
											},
											{
												"body": {
													"nativeSrc": "6249:248:4",
													"nodeType": "YulBlock",
													"src": "6249:248:4",
													"statements": [
														{
															"nativeSrc": "6259:26:4",
															"nodeType": "YulAssignment",
															"src": "6259:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6271:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6271:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6282:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6282:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6267:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6267:3:4"
																},
																"nativeSrc": "6267:18:4",
																"nodeType": "YulFunctionCall",
																"src": "6267:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6259:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6259:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6306:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6306:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6317:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6317:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6302:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6302:3:4"
																		},
																		"nativeSrc": "6302:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6302:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6325:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "6325:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6331:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6331:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6321:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6321:3:4"
																		},
																		"nativeSrc": "6321:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6321:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6295:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6295:6:4"
																},
																"nativeSrc": "6295:47:4",
																"nodeType": "YulFunctionCall",
																"src": "6295:47:4"
															},
															"nativeSrc": "6295:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "6295:47:4"
														},
														{
															"nativeSrc": "6351:139:4",
															"nodeType": "YulAssignment",
															"src": "6351:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6485:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "6485:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6359:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "6359:124:4"
																},
																"nativeSrc": "6359:131:4",
																"nodeType": "YulFunctionCall",
																"src": "6359:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6351:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6351:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6078:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6229:9:4",
														"nodeType": "YulTypedName",
														"src": "6229:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6244:4:4",
														"nodeType": "YulTypedName",
														"src": "6244:4:4",
														"type": ""
													}
												],
												"src": "6078:419:4"
											},
											{
												"body": {
													"nativeSrc": "6609:75:4",
													"nodeType": "YulBlock",
													"src": "6609:75:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6631:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6631:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6639:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6639:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6627:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6627:3:4"
																		},
																		"nativeSrc": "6627:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:14:4"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "6643:33:4",
																		"nodeType": "YulLiteral",
																		"src": "6643:33:4",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6620:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:4"
																},
																"nativeSrc": "6620:57:4",
																"nodeType": "YulFunctionCall",
																"src": "6620:57:4"
															},
															"nativeSrc": "6620:57:4",
															"nodeType": "YulExpressionStatement",
															"src": "6620:57:4"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "6503:181:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6601:6:4",
														"nodeType": "YulTypedName",
														"src": "6601:6:4",
														"type": ""
													}
												],
												"src": "6503:181:4"
											},
											{
												"body": {
													"nativeSrc": "6836:220:4",
													"nodeType": "YulBlock",
													"src": "6836:220:4",
													"statements": [
														{
															"nativeSrc": "6846:74:4",
															"nodeType": "YulAssignment",
															"src": "6846:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6912:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6912:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6917:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6917:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6853:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "6853:58:4"
																},
																"nativeSrc": "6853:67:4",
																"nodeType": "YulFunctionCall",
																"src": "6853:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6846:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6846:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7018:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7018:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "6929:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "6929:88:4"
																},
																"nativeSrc": "6929:93:4",
																"nodeType": "YulFunctionCall",
																"src": "6929:93:4"
															},
															"nativeSrc": "6929:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "6929:93:4"
														},
														{
															"nativeSrc": "7031:19:4",
															"nodeType": "YulAssignment",
															"src": "7031:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7042:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7042:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7047:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7047:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7038:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7038:3:4"
																},
																"nativeSrc": "7038:12:4",
																"nodeType": "YulFunctionCall",
																"src": "7038:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7031:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7031:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6690:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6824:3:4",
														"nodeType": "YulTypedName",
														"src": "6824:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6832:3:4",
														"nodeType": "YulTypedName",
														"src": "6832:3:4",
														"type": ""
													}
												],
												"src": "6690:366:4"
											},
											{
												"body": {
													"nativeSrc": "7233:248:4",
													"nodeType": "YulBlock",
													"src": "7233:248:4",
													"statements": [
														{
															"nativeSrc": "7243:26:4",
															"nodeType": "YulAssignment",
															"src": "7243:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7255:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "7255:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7266:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7266:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7251:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7251:3:4"
																},
																"nativeSrc": "7251:18:4",
																"nodeType": "YulFunctionCall",
																"src": "7251:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7243:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7243:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7290:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7290:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7301:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7301:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7286:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7286:3:4"
																		},
																		"nativeSrc": "7286:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7286:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7309:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7309:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7315:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7315:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7305:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7305:3:4"
																		},
																		"nativeSrc": "7305:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7305:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7279:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7279:6:4"
																},
																"nativeSrc": "7279:47:4",
																"nodeType": "YulFunctionCall",
																"src": "7279:47:4"
															},
															"nativeSrc": "7279:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "7279:47:4"
														},
														{
															"nativeSrc": "7335:139:4",
															"nodeType": "YulAssignment",
															"src": "7335:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7469:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7469:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7343:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "7343:124:4"
																},
																"nativeSrc": "7343:131:4",
																"nodeType": "YulFunctionCall",
																"src": "7343:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7335:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7335:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7062:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7213:9:4",
														"nodeType": "YulTypedName",
														"src": "7213:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7228:4:4",
														"nodeType": "YulTypedName",
														"src": "7228:4:4",
														"type": ""
													}
												],
												"src": "7062:419:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"No funds to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must deposit more than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610058575f3560e01c806327e235e3146101045780633ccfd60b14610140578063715018a6146101565780638da5cb5b1461016c578063d0e30db014610196578063f2fde38b146101a057610100565b36610100573460025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546100a9919061073c565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4346040516100f6919061077e565b60405180910390a2005b5f5ffd5b34801561010f575f5ffd5b5061012a600480360381019061012591906107f5565b6101c8565b604051610137919061077e565b60405180910390f35b34801561014b575f5ffd5b506101546101dd565b005b348015610161575f5ffd5b5061016a6103ac565b005b348015610177575f5ffd5b506101806103bf565b60405161018d919061082f565b60405180910390f35b61019e6103e6565b005b3480156101ab575f5ffd5b506101c660048036038101906101c191906107f5565b6104db565b005b6002602052805f5260405f205f915090505481565b6101e561055f565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025f906108a2565b60405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f3373ffffffffffffffffffffffffffffffffffffffff16826040516102cf906108ed565b5f6040518083038185875af1925050503d805f8114610309576040519150601f19603f3d011682016040523d82523d5f602084013e61030e565b606091505b5050905080610352576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103499061094b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d583604051610398919061077e565b60405180910390a250506103aa6105ae565b565b6103b46105b7565b6103bd5f61063e565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103ee61055f565b5f3411610430576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610427906109b3565b60405180910390fd5b3460025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461047c919061073c565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4346040516104c9919061077e565b60405180910390a26104d96105ae565b565b6104e36105b7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610553575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161054a919061082f565b60405180910390fd5b61055c8161063e565b50565b6002600154036105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b90610a1b565b60405180910390fd5b6002600181905550565b60018081905550565b6105bf6106ff565b73ffffffffffffffffffffffffffffffffffffffff166105dd6103bf565b73ffffffffffffffffffffffffffffffffffffffff161461063c576106006106ff565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610633919061082f565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61074682610706565b915061075183610706565b92508282019050808211156107695761076861070f565b5b92915050565b61077881610706565b82525050565b5f6020820190506107915f83018461076f565b92915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107c48261079b565b9050919050565b6107d4816107ba565b81146107de575f5ffd5b50565b5f813590506107ef816107cb565b92915050565b5f6020828403121561080a57610809610797565b5b5f610817848285016107e1565b91505092915050565b610829816107ba565b82525050565b5f6020820190506108425f830184610820565b92915050565b5f82825260208201905092915050565b7f4e6f2066756e647320746f2077697468647261770000000000000000000000005f82015250565b5f61088c601483610848565b915061089782610858565b602082019050919050565b5f6020820190508181035f8301526108b981610880565b9050919050565b5f81905092915050565b50565b5f6108d85f836108c0565b91506108e3826108ca565b5f82019050919050565b5f6108f7826108cd565b9150819050919050565b7f5769746864726177616c206661696c65640000000000000000000000000000005f82015250565b5f610935601183610848565b915061094082610901565b602082019050919050565b5f6020820190508181035f83015261096281610929565b9050919050565b7f4d757374206465706f736974206d6f7265207468616e203000000000000000005f82015250565b5f61099d601883610848565b91506109a882610969565b602082019050919050565b5f6020820190508181035f8301526109ca81610991565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610a05601f83610848565b9150610a10826109d1565b602082019050919050565b5f6020820190508181035f830152610a32816109f9565b905091905056fea2646970667358221220e787964123e2c7257d84f86ec5808a1a7a74e2e11a83119bdb42082f183dff0864736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A0 JUMPI PUSH2 0x100 JUMP JUMPDEST CALLDATASIZE PUSH2 0x100 JUMPI CALLVALUE PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x73C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x154 PUSH2 0x1DD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x3AC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x3E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x55F JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP1 PUSH2 0x8ED JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x30E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x352 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x349 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x3AA PUSH2 0x5AE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x3BD PUSH0 PUSH2 0x63E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x55F JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x430 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x427 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x73C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x4D9 PUSH2 0x5AE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4E3 PUSH2 0x5B7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x553 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x55C DUP2 PUSH2 0x63E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59B SWAP1 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x5BF PUSH2 0x6FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5DD PUSH2 0x3BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x63C JUMPI PUSH2 0x600 PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x633 SWAP2 SWAP1 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x746 DUP3 PUSH2 0x706 JUMP JUMPDEST SWAP2 POP PUSH2 0x751 DUP4 PUSH2 0x706 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x769 JUMPI PUSH2 0x768 PUSH2 0x70F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x778 DUP2 PUSH2 0x706 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x791 PUSH0 DUP4 ADD DUP5 PUSH2 0x76F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7C4 DUP3 PUSH2 0x79B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D4 DUP2 PUSH2 0x7BA JUMP JUMPDEST DUP2 EQ PUSH2 0x7DE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7EF DUP2 PUSH2 0x7CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80A JUMPI PUSH2 0x809 PUSH2 0x797 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x817 DUP5 DUP3 DUP6 ADD PUSH2 0x7E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x829 DUP2 PUSH2 0x7BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x842 PUSH0 DUP4 ADD DUP5 PUSH2 0x820 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2066756E647320746F207769746864726177000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x88C PUSH1 0x14 DUP4 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP PUSH2 0x897 DUP3 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8B9 DUP2 PUSH2 0x880 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x8D8 PUSH0 DUP4 PUSH2 0x8C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x8E3 DUP3 PUSH2 0x8CA JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8F7 DUP3 PUSH2 0x8CD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177616C206661696C6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x935 PUSH1 0x11 DUP4 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP PUSH2 0x940 DUP3 PUSH2 0x901 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x962 DUP2 PUSH2 0x929 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D757374206465706F736974206D6F7265207468616E20300000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x99D PUSH1 0x18 DUP4 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP PUSH2 0x9A8 DUP3 PUSH2 0x969 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9CA DUP2 PUSH2 0x991 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA05 PUSH1 0x1F DUP4 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP PUSH2 0xA10 DUP3 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA32 DUP2 PUSH2 0x9F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAPN 0x87 SWAP7 COINBASE 0x23 0xE2 0xC7 0x25 PUSH30 0x84F86EC5808A1A7A74E2E11A83119BDB42082F183DFF0864736F6C634300 ADDMOD SAR STOP CALLER ",
							"sourceMap": "499:2034:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2468:9;2444:8;:20;2453:10;2444:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;2502:10;2492:32;;;2514:9;2492:32;;;;;;:::i;:::-;;;;;;;;499:2034;;;;;647:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1562:510;;;;;;;;;;;;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1170:206:3;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;647:43:3;;;;;;;;;;;;;;;;;:::o;1562:510::-;2261:21:1;:19;:21::i;:::-;1614:14:3::1;1631:8;:20;1640:10;1631:20;;;;;;;;;;;;;;;;1614:37;;1678:1;1669:6;:10;1661:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;1823:1;1800:8;:20;1809:10;1800:20;;;;;;;;;;;;;;;:24;;;;1912:12;1938:10;1930:24;;1962:6;1930:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1911:62;;;1991:7;1983:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;2046:10;2036:29;;;2058:6;2036:29;;;;;;:::i;:::-;;;;;;;;1604:468;;2303:20:1::0;:18;:20::i;:::-;1562:510:3:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1170:206:3:-;2261:21:1;:19;:21::i;:::-;1249:1:3::1;1237:9;:13;1229:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1313:9;1289:8;:20;1298:10;1289:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;1347:10;1337:32;;;1359:9;1337:32;;;;;;:::i;:::-;;;;;;;;2303:20:1::0;:18;:20::i;:::-;1170:206:3:o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;7:77:4:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:191;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;412:1;409;405:9;398:16;;433:3;430:1;427:10;424:36;;;440:18;;:::i;:::-;424:36;276:191;;;;:::o;473:118::-;560:24;578:5;560:24;:::i;:::-;555:3;548:37;473:118;;:::o;597:222::-;690:4;728:2;717:9;713:18;705:26;;741:71;809:1;798:9;794:17;785:6;741:71;:::i;:::-;597:222;;;;:::o;906:117::-;1015:1;1012;1005:12;1152:126;1189:7;1229:42;1222:5;1218:54;1207:65;;1152:126;;;:::o;1284:96::-;1321:7;1350:24;1368:5;1350:24;:::i;:::-;1339:35;;1284:96;;;:::o;1386:122::-;1459:24;1477:5;1459:24;:::i;:::-;1452:5;1449:35;1439:63;;1498:1;1495;1488:12;1439:63;1386:122;:::o;1514:139::-;1560:5;1598:6;1585:20;1576:29;;1614:33;1641:5;1614:33;:::i;:::-;1514:139;;;;:::o;1659:329::-;1718:6;1767:2;1755:9;1746:7;1742:23;1738:32;1735:119;;;1773:79;;:::i;:::-;1735:119;1893:1;1918:53;1963:7;1954:6;1943:9;1939:22;1918:53;:::i;:::-;1908:63;;1864:117;1659:329;;;;:::o;1994:118::-;2081:24;2099:5;2081:24;:::i;:::-;2076:3;2069:37;1994:118;;:::o;2118:222::-;2211:4;2249:2;2238:9;2234:18;2226:26;;2262:71;2330:1;2319:9;2315:17;2306:6;2262:71;:::i;:::-;2118:222;;;;:::o;2346:169::-;2430:11;2464:6;2459:3;2452:19;2504:4;2499:3;2495:14;2480:29;;2346:169;;;;:::o;2521:170::-;2661:22;2657:1;2649:6;2645:14;2638:46;2521:170;:::o;2697:366::-;2839:3;2860:67;2924:2;2919:3;2860:67;:::i;:::-;2853:74;;2936:93;3025:3;2936:93;:::i;:::-;3054:2;3049:3;3045:12;3038:19;;2697:366;;;:::o;3069:419::-;3235:4;3273:2;3262:9;3258:18;3250:26;;3322:9;3316:4;3312:20;3308:1;3297:9;3293:17;3286:47;3350:131;3476:4;3350:131;:::i;:::-;3342:139;;3069:419;;;:::o;3494:147::-;3595:11;3632:3;3617:18;;3494:147;;;;:::o;3647:114::-;;:::o;3767:398::-;3926:3;3947:83;4028:1;4023:3;3947:83;:::i;:::-;3940:90;;4039:93;4128:3;4039:93;:::i;:::-;4157:1;4152:3;4148:11;4141:18;;3767:398;;;:::o;4171:379::-;4355:3;4377:147;4520:3;4377:147;:::i;:::-;4370:154;;4541:3;4534:10;;4171:379;;;:::o;4556:167::-;4696:19;4692:1;4684:6;4680:14;4673:43;4556:167;:::o;4729:366::-;4871:3;4892:67;4956:2;4951:3;4892:67;:::i;:::-;4885:74;;4968:93;5057:3;4968:93;:::i;:::-;5086:2;5081:3;5077:12;5070:19;;4729:366;;;:::o;5101:419::-;5267:4;5305:2;5294:9;5290:18;5282:26;;5354:9;5348:4;5344:20;5340:1;5329:9;5325:17;5318:47;5382:131;5508:4;5382:131;:::i;:::-;5374:139;;5101:419;;;:::o;5526:174::-;5666:26;5662:1;5654:6;5650:14;5643:50;5526:174;:::o;5706:366::-;5848:3;5869:67;5933:2;5928:3;5869:67;:::i;:::-;5862:74;;5945:93;6034:3;5945:93;:::i;:::-;6063:2;6058:3;6054:12;6047:19;;5706:366;;;:::o;6078:419::-;6244:4;6282:2;6271:9;6267:18;6259:26;;6331:9;6325:4;6321:20;6317:1;6306:9;6302:17;6295:47;6359:131;6485:4;6359:131;:::i;:::-;6351:139;;6078:419;;;:::o;6503:181::-;6643:33;6639:1;6631:6;6627:14;6620:57;6503:181;:::o;6690:366::-;6832:3;6853:67;6917:2;6912:3;6853:67;:::i;:::-;6846:74;;6929:93;7018:3;6929:93;:::i;:::-;7047:2;7042:3;7038:12;7031:19;;6690:366;;;:::o;7062:419::-;7228:4;7266:2;7255:9;7251:18;7243:26;;7315:9;7309:4;7305:20;7301:1;7290:9;7286:17;7279:47;7343:131;7469:4;7343:131;:::i;:::-;7335:139;;7062:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "534200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balances(address)": "2780",
								"deposit()": "infinite",
								"owner()": "2558",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 499,
									"end": 2533,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 499,
									"end": 2533,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 499,
									"end": 2533,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 939,
									"end": 975,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 939,
									"end": 975,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 939,
									"end": 975,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 939,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 939,
									"end": 975,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 939,
									"end": 975,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 939,
									"end": 975,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 939,
									"end": 975,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 939,
									"end": 975,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 939,
									"end": 975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 939,
									"end": 975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 961,
									"end": 971,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 499,
									"end": 2533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 499,
									"end": 2533,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 499,
									"end": 2533,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 499,
									"end": 2533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 499,
									"end": 2533,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 499,
									"end": 2533,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 499,
									"end": 2533,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 499,
									"end": 2533,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 499,
									"end": 2533,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 499,
									"end": 2533,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 499,
									"end": 2533,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e787964123e2c7257d84f86ec5808a1a7a74e2e11a83119bdb42082f183dff0864736f6c634300081d0033",
									".code": [
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "27E235E3"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "3CCFD60B"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "D0E30DB0"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2477,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2452,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2463,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2444,
											"end": 2477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2512,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "PUSH",
											"source": 3,
											"value": "2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4"
										},
										{
											"begin": 2514,
											"end": 2523,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2492,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2524,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 2533,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 647,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 647,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 647,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1562,
											"end": 2072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1376,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1170,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1170,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1170,
											"end": 1376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1376,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1170,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1376,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 647,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 690,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1562,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1650,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1651,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1675,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1679,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1661,
											"end": 1704,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1661,
											"end": 1704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1819,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1820,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1824,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1948,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1930,
											"end": 1954,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 1968,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1930,
											"end": 1973,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 1973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 1973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 1973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 1998,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1983,
											"end": 2020,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1983,
											"end": 2020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2046,
											"end": 2056,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 2058,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2036,
											"end": 2065,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2065,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 2072,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 2072,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 2072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1376,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1170,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1246,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1250,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1229,
											"end": 1279,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1229,
											"end": 1279,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1313,
											"end": 1322,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1298,
											"end": 1308,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1289,
											"end": 1322,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1322,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1357,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4"
										},
										{
											"begin": 1359,
											"end": 1368,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1337,
											"end": 1369,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1369,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 270,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 90,
											"end": 270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 138,
											"end": 215,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 240,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 264,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 276,
											"end": 467,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 276,
											"end": 467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 316,
											"end": 319,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 353,
											"end": 354,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 335,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 369,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 369,
											"end": 389,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 369,
											"end": 389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 364,
											"end": 389,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 364,
											"end": 389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 405,
											"end": 414,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 398,
											"end": 414,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 398,
											"end": 414,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 433,
											"end": 436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 430,
											"end": 431,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 427,
											"end": 437,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 424,
											"end": 460,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 440,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 440,
											"end": 458,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 424,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 276,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 473,
											"end": 591,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 473,
											"end": 591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 560,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 560,
											"end": 584,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 560,
											"end": 584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 548,
											"end": 585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 473,
											"end": 591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 597,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 597,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 690,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 730,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 726,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 713,
											"end": 731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 705,
											"end": 731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 705,
											"end": 731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 809,
											"end": 810,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 807,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 794,
											"end": 811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 741,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 741,
											"end": 812,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 741,
											"end": 812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 597,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 906,
											"end": 1023,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 906,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1015,
											"end": 1016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1017,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1196,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1271,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1218,
											"end": 1272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 1328,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1350,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1508,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1386,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1477,
											"end": 1482,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1459,
											"end": 1483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1457,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1484,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1508,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1560,
											"end": 1565,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1576,
											"end": 1605,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1576,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1641,
											"end": 1646,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1614,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1769,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1755,
											"end": 1764,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1765,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 1770,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1773,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1963,
											"end": 1970,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1952,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 1961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1918,
											"end": 1971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1971,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 1981,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1659,
											"end": 1988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2099,
											"end": 2104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2081,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2079,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2106,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2211,
											"end": 2215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2251,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2330,
											"end": 2331,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2328,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2262,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2515,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2346,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2430,
											"end": 2441,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2470,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2459,
											"end": 2462,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2508,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2502,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2509,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2480,
											"end": 2509,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2480,
											"end": 2509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2515,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2515,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2515,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2515,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2691,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2521,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2661,
											"end": 2683,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F2066756E647320746F207769746864726177000000000000000000000000"
										},
										{
											"begin": 2657,
											"end": 2658,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2655,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2659,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2697,
											"end": 3063,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2697,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2924,
											"end": 2926,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2919,
											"end": 2922,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2860,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2927,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2860,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2853,
											"end": 2927,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2853,
											"end": 2927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2936,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3025,
											"end": 3028,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2936,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2936,
											"end": 3029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2936,
											"end": 3029,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2936,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3056,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3049,
											"end": 3052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3038,
											"end": 3057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3038,
											"end": 3057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2697,
											"end": 3063,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2697,
											"end": 3063,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2697,
											"end": 3063,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2697,
											"end": 3063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3488,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3069,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3275,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3322,
											"end": 3331,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3316,
											"end": 3320,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3332,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3308,
											"end": 3309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3306,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3286,
											"end": 3333,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3476,
											"end": 3480,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3350,
											"end": 3481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3481,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3350,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3488,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3641,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3494,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3617,
											"end": 3635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3617,
											"end": 3635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3641,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3641,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3761,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3647,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3767,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3929,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4028,
											"end": 4029,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4023,
											"end": 4026,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3947,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3947,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3947,
											"end": 4030,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3947,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3940,
											"end": 4030,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3940,
											"end": 4030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4128,
											"end": 4131,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4039,
											"end": 4132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4132,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4039,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4157,
											"end": 4158,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4148,
											"end": 4159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 4165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 4165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 4165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4550,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4171,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4355,
											"end": 4358,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4520,
											"end": 4523,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4377,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4377,
											"end": 4524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4377,
											"end": 4524,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4377,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4534,
											"end": 4544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4534,
											"end": 4544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4550,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4556,
											"end": 4723,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4556,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4696,
											"end": 4715,
											"name": "PUSH",
											"source": 4,
											"value": "5769746864726177616C206661696C6564000000000000000000000000000000"
										},
										{
											"begin": 4692,
											"end": 4693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4684,
											"end": 4690,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4673,
											"end": 4716,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4556,
											"end": 4723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4556,
											"end": 4723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 5095,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4729,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 4874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4892,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4956,
											"end": 4958,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4951,
											"end": 4954,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4892,
											"end": 4959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4959,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4892,
											"end": 4959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4885,
											"end": 4959,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4885,
											"end": 4959,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5057,
											"end": 5060,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4968,
											"end": 5061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 5061,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4968,
											"end": 5061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5086,
											"end": 5088,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5081,
											"end": 5084,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5089,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5089,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 5095,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 5095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 5095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 5095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5520,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5101,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5267,
											"end": 5271,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5305,
											"end": 5307,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5294,
											"end": 5303,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5290,
											"end": 5308,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5308,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5308,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5348,
											"end": 5352,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5340,
											"end": 5341,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5329,
											"end": 5338,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5325,
											"end": 5342,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5365,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5508,
											"end": 5512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5382,
											"end": 5513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5513,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5382,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5700,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5526,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5666,
											"end": 5692,
											"name": "PUSH",
											"source": 4,
											"value": "4D757374206465706F736974206D6F7265207468616E20300000000000000000"
										},
										{
											"begin": 5662,
											"end": 5663,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5654,
											"end": 5660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5650,
											"end": 5664,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5643,
											"end": 5693,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5706,
											"end": 6072,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5706,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5851,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5933,
											"end": 5935,
											"name": "PUSH",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 5928,
											"end": 5931,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5869,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5936,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5869,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5862,
											"end": 5936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5862,
											"end": 5936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5945,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 6034,
											"end": 6037,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5945,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5945,
											"end": 6038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5945,
											"end": 6038,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5945,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6065,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6058,
											"end": 6061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6054,
											"end": 6066,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6047,
											"end": 6066,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6047,
											"end": 6066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5706,
											"end": 6072,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5706,
											"end": 6072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5706,
											"end": 6072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5706,
											"end": 6072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6078,
											"end": 6497,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 6078,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6248,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6284,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6271,
											"end": 6280,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6267,
											"end": 6285,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6259,
											"end": 6285,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6259,
											"end": 6285,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6331,
											"end": 6340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6321,
											"end": 6341,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6317,
											"end": 6318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6306,
											"end": 6315,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6319,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6342,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 6359,
											"end": 6490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 6490,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 6359,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6351,
											"end": 6490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6351,
											"end": 6490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6078,
											"end": 6497,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6078,
											"end": 6497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6078,
											"end": 6497,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6078,
											"end": 6497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6684,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6503,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 6676,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 6639,
											"end": 6640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6627,
											"end": 6641,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6620,
											"end": 6677,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6690,
											"end": 7056,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 6690,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6832,
											"end": 6835,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 6917,
											"end": 6919,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6912,
											"end": 6915,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6853,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 6853,
											"end": 6920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6853,
											"end": 6920,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 6853,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6846,
											"end": 6920,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6846,
											"end": 6920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6929,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7018,
											"end": 7021,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6929,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6929,
											"end": 7022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6929,
											"end": 7022,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6929,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7047,
											"end": 7049,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7042,
											"end": 7045,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7038,
											"end": 7050,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6690,
											"end": 7056,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6690,
											"end": 7056,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6690,
											"end": 7056,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6690,
											"end": 7056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7062,
											"end": 7481,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 7062,
											"end": 7481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7228,
											"end": 7232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7266,
											"end": 7268,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7255,
											"end": 7264,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7251,
											"end": 7269,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7243,
											"end": 7269,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7243,
											"end": 7269,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7315,
											"end": 7324,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7309,
											"end": 7313,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7325,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7290,
											"end": 7299,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7286,
											"end": 7303,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7343,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7469,
											"end": 7473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7343,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 7343,
											"end": 7474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7343,
											"end": 7474,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7343,
											"end": 7474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7335,
											"end": 7474,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7335,
											"end": 7474,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7062,
											"end": 7481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7062,
											"end": 7481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7062,
											"end": 7481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7062,
											"end": 7481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"D/ddosAttack.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balances(address)": "27e235e3",
							"deposit()": "d0e30db0",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"DDOSAttackMitigator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balances(address)\":{\"notice\":\"Mapping from user address to their deposited Ether balance (in wei).\"},\"constructor\":{\"notice\":\"Constructor sets the deployer as the initial owner (if you wish to add admin logic).\"},\"deposit()\":{\"notice\":\"Users deposit Ether into the contract, which increments their balance in the mapping. The deposit function is external and nonReentrant to avoid reentrancy attacks.\"},\"withdraw()\":{\"notice\":\"Withdraw function that uses a pull approach. The user withdraws their balance themselves, preventing the contract from pushing funds to external addresses.\"}},\"notice\":\"A dynamic and optimized contract demonstrating a pull-payment pattern to mitigate DoS (or DDoS) attacks. Users deposit Ether, which is stored in a mapping. They later withdraw their own funds, preventing any external calls that could be malicious or cause blocking issues.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"D/ddosAttack.sol\":\"DDOSAttackMitigator\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"D/ddosAttack.sol\":{\"keccak256\":\"0x6aa8b602e1081e9f23cf716928ae650c414db0db62414d5756f50b32fb6edcab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47a887e3f44716362547f61a21e8abe3a061eb75db481ffa3367c2556139b93b\",\"dweb:/ipfs/QmVJ7PC8ojSeRp1RZ1zTdQBy3C2w4zoR4DMv3BHWiik7xt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "D/ddosAttack.sol:DDOSAttackMitigator",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 158,
								"contract": "D/ddosAttack.sol:DDOSAttackMitigator",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 256,
								"contract": "D/ddosAttack.sol:DDOSAttackMitigator",
								"label": "balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"balances(address)": {
								"notice": "Mapping from user address to their deposited Ether balance (in wei)."
							},
							"constructor": {
								"notice": "Constructor sets the deployer as the initial owner (if you wish to add admin logic)."
							},
							"deposit()": {
								"notice": "Users deposit Ether into the contract, which increments their balance in the mapping. The deposit function is external and nonReentrant to avoid reentrancy attacks."
							},
							"withdraw()": {
								"notice": "Withdraw function that uses a pull approach. The user withdraws their balance themselves, preventing the contract from pushing funds to external addresses."
							}
						},
						"notice": "A dynamic and optimized contract demonstrating a pull-payment pattern to mitigate DoS (or DDoS) attacks. Users deposit Ether, which is stored in a mapping. They later withdraw their own funds, preventing any external calls that could be malicious or cause blocking issues.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							242
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 243,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 242,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								242
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							242
						]
					},
					"id": 243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 220,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 219,
												"id": 222,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 242,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 229,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 228,
												"id": 231,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 242,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 237,
												"id": 239,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 242,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 243,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"D/ddosAttack.sol": {
				"ast": {
					"absolutePath": "D/ddosAttack.sol",
					"exportedSymbols": {
						"Context": [
							242
						],
						"DDOSAttackMitigator": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 245,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 381,
							"sourceUnit": 148,
							"src": "58:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 381,
							"sourceUnit": 213,
							"src": "111:62:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 248,
										"name": "Ownable",
										"nameLocations": [
											"531:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "531:7:3"
									},
									"id": 249,
									"nodeType": "InheritanceSpecifier",
									"src": "531:7:3"
								},
								{
									"baseName": {
										"id": 250,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"540:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "540:15:3"
									},
									"id": 251,
									"nodeType": "InheritanceSpecifier",
									"src": "540:15:3"
								}
							],
							"canonicalName": "DDOSAttackMitigator",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 247,
								"nodeType": "StructuredDocumentation",
								"src": "175:324:3",
								"text": "@title DDOSAttackMitigator\n @notice A dynamic and optimized contract demonstrating a pull-payment pattern to mitigate DoS (or DDoS) attacks.\n Users deposit Ether, which is stored in a mapping. They later withdraw their own funds, preventing any external calls\n that could be malicious or cause blocking issues."
							},
							"fullyImplemented": true,
							"id": 380,
							"linearizedBaseContracts": [
								380,
								212,
								147,
								242
							],
							"name": "DDOSAttackMitigator",
							"nameLocation": "508:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "562:80:3",
										"text": "@notice Mapping from user address to their deposited Ether balance (in wei)."
									},
									"functionSelector": "27e235e3",
									"id": 256,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "682:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 380,
									"src": "647:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 255,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 253,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "655:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "647:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 254,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "666:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4",
									"id": 262,
									"name": "Deposited",
									"nameLocation": "725:9:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "751:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "735:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "765:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "757:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "734:38:3"
									},
									"src": "719:54:3"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 268,
									"name": "Withdrawn",
									"nameLocation": "784:9:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "810:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "794:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "824:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "816:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:38:3"
									},
									"src": "778:54:3"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "973:2:3",
										"statements": []
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "838:96:3",
										"text": "@notice Constructor sets the deployer as the initial owner (if you wish to add admin logic)."
									},
									"id": 277,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 272,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "961:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "965:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "961:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 274,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 271,
												"name": "Ownable",
												"nameLocations": [
													"953:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "953:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "953:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "950:2:3"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "973:0:3"
									},
									"scope": 380,
									"src": "939:36:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "1219:157:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 284,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1237:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1241:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1237:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1249:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1237:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374206465706f736974206d6f7265207468616e2030",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1252:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032",
																"typeString": "literal_string \"Must deposit more than 0\""
															},
															"value": "Must deposit more than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032",
																"typeString": "literal_string \"Must deposit more than 0\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1229:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1229:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "1229:50:3"
											},
											{
												"expression": {
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 291,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "1289:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 294,
														"indexExpression": {
															"expression": {
																"id": 292,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1298:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1302:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1298:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1289:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 295,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1313:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1317:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1313:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1289:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "1289:33:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 300,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1347:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1351:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1347:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 302,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1359:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1363:5:3",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1359:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "1337:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1337:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "EmitStatement",
												"src": "1332:37:3"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "981:184:3",
										"text": "@notice Users deposit Ether into the contract, which increments their balance in the mapping.\n The deposit function is external and nonReentrant to avoid reentrancy attacks."
									},
									"functionSelector": "d0e30db0",
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 281,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 280,
												"name": "nonReentrant",
												"nameLocations": [
													"1206:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1206:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1206:12:3"
										}
									],
									"name": "deposit",
									"nameLocation": "1179:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1186:2:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:0:3"
									},
									"scope": 380,
									"src": "1170:206:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1604:468:3",
										"statements": [
											{
												"assignments": [
													314
												],
												"declarations": [
													{
														"constant": false,
														"id": 314,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "1622:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 358,
														"src": "1614:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1614:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 319,
												"initialValue": {
													"baseExpression": {
														"id": 315,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1631:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 318,
													"indexExpression": {
														"expression": {
															"id": 316,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1640:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1644:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1640:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1631:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1614:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 321,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "1669:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1678:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2066756e647320746f207769746864726177",
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1681:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																"typeString": "literal_string \"No funds to withdraw\""
															},
															"value": "No funds to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																"typeString": "literal_string \"No funds to withdraw\""
															}
														],
														"id": 320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1661:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1661:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "1661:43:3"
											},
											{
												"expression": {
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 327,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "1800:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 330,
														"indexExpression": {
															"expression": {
																"id": 328,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1809:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1813:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1809:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1800:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1823:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1800:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "1800:24:3"
											},
											{
												"assignments": [
													335,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1917:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 358,
														"src": "1912:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 334,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1912:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 346,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1970:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 338,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1938:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1942:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1938:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1930:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 336,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1930:8:3",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1930:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1950:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1930:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 342,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "1962:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1930:39:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1930:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1911:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1991:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c206661696c6564",
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2000:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																"typeString": "literal_string \"Withdrawal failed\""
															},
															"value": "Withdrawal failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																"typeString": "literal_string \"Withdrawal failed\""
															}
														],
														"id": 347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1983:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1983:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "1983:37:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 353,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2046:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2050:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2046:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 355,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "2058:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 352,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "2036:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2036:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "EmitStatement",
												"src": "2031:34:3"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "1382:175:3",
										"text": "@notice Withdraw function that uses a pull approach. The user withdraws their balance themselves,\n preventing the contract from pushing funds to external addresses."
									},
									"functionSelector": "3ccfd60b",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 311,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 310,
												"name": "nonReentrant",
												"nameLocations": [
													"1591:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1591:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1591:12:3"
										}
									],
									"name": "withdraw",
									"nameLocation": "1571:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1579:2:3"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1604:0:3"
									},
									"scope": 380,
									"src": "1562:510:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "2246:285:3",
										"statements": [
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 363,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "2444:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 366,
														"indexExpression": {
															"expression": {
																"id": 364,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2453:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2457:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2453:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2444:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 367,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2468:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2472:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2468:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2444:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "2444:33:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 372,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2502:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2506:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2502:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 374,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2514:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2518:5:3",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2514:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 371,
														"name": "Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "2492:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2492:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "EmitStatement",
												"src": "2487:37:3"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2078:136:3",
										"text": "@notice Fallback function to receive Ether from direct transfers.\n Internally calls deposit() to record the userâ€™s balance."
									},
									"id": 379,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:2:3"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2246:0:3"
									},
									"scope": 380,
									"src": "2219:312:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "499:2034:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								262,
								268
							]
						}
					],
					"src": "32:2502:3"
				},
				"id": 3
			}
		}
	}
}