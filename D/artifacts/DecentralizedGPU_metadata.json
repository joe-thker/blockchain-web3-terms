{
	"compiler": {
		"version": "0.8.29+commit.ab55807c"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "gpuId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "GPURegistered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "rentalId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "gpuId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "renter",
						"type": "address"
					}
				],
				"name": "GPURented",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "rentalId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "gpuId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "renter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountPaid",
						"type": "uint256"
					}
				],
				"name": "RentalEnded",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "rentalId",
						"type": "uint256"
					}
				],
				"name": "endRental",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "gpuId",
						"type": "uint256"
					}
				],
				"name": "getGPU",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "gpuId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "gpuSpecs",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "hourlyRateWei",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "available",
								"type": "bool"
							}
						],
						"internalType": "struct DecentralizedGPU.GPU",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "gpuOwner",
						"type": "address"
					}
				],
				"name": "getGPUsByOwner",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "rentalId",
						"type": "uint256"
					}
				],
				"name": "getRental",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "rentalId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "gpuId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "renter",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "startTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "endTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalPaid",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "active",
								"type": "bool"
							}
						],
						"internalType": "struct DecentralizedGPU.Rental",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "gpus",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "gpuId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "gpuSpecs",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "hourlyRateWei",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "available",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "ownerGPUs",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "gpuSpecs",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "hourlyRateWei",
						"type": "uint256"
					}
				],
				"name": "registerGPU",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "gpuId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "hoursToRent",
						"type": "uint256"
					}
				],
				"name": "rentGPU",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "rentals",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "rentalId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "gpuId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "renter",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "startTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalPaid",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"title": "DecentralizedGPU",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"endRental(uint256)": {
					"notice": "End GPU rental and mark GPU as available again"
				},
				"getGPU(uint256)": {
					"notice": "Fetch GPU details"
				},
				"getGPUsByOwner(address)": {
					"notice": "Fetch GPUs registered by an owner"
				},
				"getRental(uint256)": {
					"notice": "Fetch Rental details"
				},
				"registerGPU(string,uint256)": {
					"notice": "Register GPU resources dynamically"
				},
				"rentGPU(uint256,uint256)": {
					"notice": "Rent an available GPU dynamically"
				}
			},
			"notice": "Enables decentralized GPU resource sharing and renting dynamically.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"D/decentralizedGPU.sol": "DecentralizedGPU"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"D/decentralizedGPU.sol": {
			"keccak256": "0x9a84130ec14d8bb7a9597785ce1ea8b348861cabcfb34317e6b0a4b47d90df6f",
			"license": "MIT",
			"urls": [
				"bzz-raw://50e465c58b2baa08b392d06cca99bd585927d9ae45e9445794a9267a1e68892a",
				"dweb:/ipfs/QmdkZZGHY6BE5N3p47FxaNZB5BiWnLr5P1eKD9c7Yr6rmm"
			]
		}
	},
	"version": 1
}