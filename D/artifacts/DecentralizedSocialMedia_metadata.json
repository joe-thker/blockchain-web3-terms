{
	"compiler": {
		"version": "0.8.29+commit.ab55807c"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "postId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "author",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "content",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "PostCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "postId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "PostDeleted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "postId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "liker",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "likeCount",
						"type": "uint256"
					}
				],
				"name": "PostLiked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "postId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "newContent",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "PostUpdated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "content",
						"type": "string"
					}
				],
				"name": "createPost",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "postId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "postId",
						"type": "uint256"
					}
				],
				"name": "deletePost",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllPostIds",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "postId",
						"type": "uint256"
					}
				],
				"name": "likePost",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "likedBy",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nextPostId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "postIds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "posts",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "author",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "content",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "likeCount",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "postId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "newContent",
						"type": "string"
					}
				],
				"name": "updatePost",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"createPost(string)": {
					"params": {
						"content": "The content of the post."
					},
					"returns": {
						"postId": "The unique identifier of the new post."
					}
				},
				"deletePost(uint256)": {
					"params": {
						"postId": "The ID of the post to delete."
					}
				},
				"getAllPostIds()": {
					"returns": {
						"_0": "An array containing all post IDs."
					}
				},
				"likePost(uint256)": {
					"params": {
						"postId": "The ID of the post to like."
					}
				},
				"updatePost(uint256,string)": {
					"params": {
						"newContent": "The new content for the post.",
						"postId": "The ID of the post to update."
					}
				}
			},
			"title": "DecentralizedSocialMedia",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"createPost(string)": {
					"notice": "Create a new post."
				},
				"deletePost(uint256)": {
					"notice": "Delete a post (mark it as inactive)."
				},
				"getAllPostIds()": {
					"notice": "Retrieves all post IDs."
				},
				"likePost(uint256)": {
					"notice": "Like a post. Each address can like a specific post only once."
				},
				"updatePost(uint256,string)": {
					"notice": "Update an existing post's content."
				}
			},
			"notice": "A decentralized social media platform allowing users to create, update, delete, and like posts. The contract uses efficient data structures for minimal gas consumption and protects state-changing functions with ReentrancyGuard.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"D/decentralized social media.sol": "DecentralizedSocialMedia"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"D/decentralized social media.sol": {
			"keccak256": "0x33759ff60e86726f7ac215306ca11af9a1a0c8df4cf76e9162c7a73e1847cf88",
			"license": "MIT",
			"urls": [
				"bzz-raw://7acc0bb3e911acb763eaf957e30aa6a1dc458eeedbd2c63c81a3373b094c9d0a",
				"dweb:/ipfs/QmembxSyKzEYWaSxc3KmJYaezBWtRvxRvEcEtKHGagCs7U"
			]
		}
	},
	"version": 1
}