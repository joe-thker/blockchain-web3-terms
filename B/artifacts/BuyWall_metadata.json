{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_buyWallPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_initialPrice",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "executor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokensBought",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "purchasePrice",
						"type": "uint256"
					}
				],
				"name": "BuyWallExecuted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBuyWallPrice",
						"type": "uint256"
					}
				],
				"name": "BuyWallPriceUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "depositor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "FundsDeposited",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newPrice",
						"type": "uint256"
					}
				],
				"name": "PriceUpdated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "buyWallPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositFunds",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "executeBuyWall",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "tokensBought",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalFunds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_newBuyWallPrice",
						"type": "uint256"
					}
				],
				"name": "updateBuyWallPrice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_newPrice",
						"type": "uint256"
					}
				],
				"name": "updatePrice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_buyWallPrice": "The initial buy wall price.",
						"_initialPrice": "The initial market price."
					}
				},
				"executeBuyWall()": {
					"returns": {
						"tokensBought": "The number of tokens that could be purchased."
					}
				},
				"updateBuyWallPrice(uint256)": {
					"params": {
						"_newBuyWallPrice": "The new buy wall price."
					}
				},
				"updatePrice(uint256)": {
					"params": {
						"_newPrice": "The new market price."
					}
				}
			},
			"title": "BuyWall",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"constructor": {
					"notice": "Constructor sets the owner, initial buy wall price, and current price."
				},
				"depositFunds()": {
					"notice": "Deposits funds into the contract for executing the buy wall."
				},
				"executeBuyWall()": {
					"notice": "Executes the buy wall if the current market price is at or below the buy wall price. It calculates how many tokens can be bought with the available funds."
				},
				"updateBuyWallPrice(uint256)": {
					"notice": "Allows the owner to update the buy wall price."
				},
				"updatePrice(uint256)": {
					"notice": "Allows the owner to update the current market price."
				}
			},
			"notice": "This contract simulates a \"buy wall\" mechanism by holding funds that are used to purchase tokens automatically when the current market price falls to or below a specified threshold.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"B/buywall.sol": "BuyWall"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"B/buywall.sol": {
			"keccak256": "0xf2d215064bc70e8a65cf4b2a2d14ea208cb781cc45aba3d260ca16ccbf0bd4d1",
			"license": "MIT",
			"urls": [
				"bzz-raw://37cfb1012c2c5d84a34aca89be134845440f84bac44b5183c96a136e67654bc6",
				"dweb:/ipfs/QmYJmDw22kF6RWTpPWN7jkE5Fe8rz6Cikm7dDDdrtCFJv3"
			]
		}
	},
	"version": 1
}