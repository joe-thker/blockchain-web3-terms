{
	"id": "1001c54bfac2438208ccc55ab2448bbd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"B/blockHeaderInfo.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract BlockHeaderInfo {\n    // Define a struct to represent key elements of a block header.\n    struct BlockHeader {\n        uint256 number;       // Block number\n        uint256 timestamp;    // Block timestamp\n        uint256 difficulty;   // Block difficulty\n        address miner;        // Miner (coinbase) address\n        uint256 gasLimit;     // Block gas limit\n    }\n    \n    /// @notice Returns the current block header information.\n    /// @return header A struct containing the current block header details.\n    function getBlockHeader() external view returns (BlockHeader memory header) {\n        header.number = block.number;\n        header.timestamp = block.timestamp;\n        header.difficulty = block.difficulty;\n        header.miner = block.coinbase;\n        header.gasLimit = block.gaslimit;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"B/blockHeaderInfo.sol": {
				"BlockHeaderInfo": {
					"abi": [
						{
							"inputs": [],
							"name": "getBlockHeader",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "number",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "difficulty",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "miner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										}
									],
									"internalType": "struct BlockHeaderInfo.BlockHeader",
									"name": "header",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getBlockHeader()": {
								"returns": {
									"header": "A struct containing the current block header details."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"B/blockHeaderInfo.sol\":57:877  contract BlockHeaderInfo {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"B/blockHeaderInfo.sol\":57:877  contract BlockHeaderInfo {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8c6c86d1\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"B/blockHeaderInfo.sol\":583:875  function getBlockHeader() external view returns (BlockHeader memory header) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"B/blockHeaderInfo.sol\":632:657  BlockHeader memory header */\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n        /* \"B/blockHeaderInfo.sol\":685:697  block.number */\n      number\n        /* \"B/blockHeaderInfo.sol\":669:675  header */\n      dup2\n        /* \"B/blockHeaderInfo.sol\":669:682  header.number */\n      0x00\n      add\n        /* \"B/blockHeaderInfo.sol\":669:697  header.number = block.number */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"B/blockHeaderInfo.sol\":726:741  block.timestamp */\n      timestamp\n        /* \"B/blockHeaderInfo.sol\":707:713  header */\n      dup2\n        /* \"B/blockHeaderInfo.sol\":707:723  header.timestamp */\n      0x20\n      add\n        /* \"B/blockHeaderInfo.sol\":707:741  header.timestamp = block.timestamp */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"B/blockHeaderInfo.sol\":771:787  block.difficulty */\n      prevrandao\n        /* \"B/blockHeaderInfo.sol\":751:757  header */\n      dup2\n        /* \"B/blockHeaderInfo.sol\":751:768  header.difficulty */\n      0x40\n      add\n        /* \"B/blockHeaderInfo.sol\":751:787  header.difficulty = block.difficulty */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"B/blockHeaderInfo.sol\":812:826  block.coinbase */\n      coinbase\n        /* \"B/blockHeaderInfo.sol\":797:803  header */\n      dup2\n        /* \"B/blockHeaderInfo.sol\":797:809  header.miner */\n      0x60\n      add\n        /* \"B/blockHeaderInfo.sol\":797:826  header.miner = block.coinbase */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"B/blockHeaderInfo.sol\":854:868  block.gaslimit */\n      gaslimit\n        /* \"B/blockHeaderInfo.sol\":836:842  header */\n      dup2\n        /* \"B/blockHeaderInfo.sol\":836:851  header.gasLimit */\n      0x80\n      add\n        /* \"B/blockHeaderInfo.sol\":836:868  header.gasLimit = block.gaslimit */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"B/blockHeaderInfo.sol\":583:875  function getBlockHeader() external view returns (BlockHeader memory header) {... */\n      swap1\n      jump\t// out\n    tag_9:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_11:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:198   */\n    tag_12:\n        /* \"#utility.yul\":167:191   */\n      tag_20\n        /* \"#utility.yul\":185:190   */\n      dup2\n        /* \"#utility.yul\":167:191   */\n      tag_11\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":162:165   */\n      dup3\n        /* \"#utility.yul\":155:192   */\n      mstore\n        /* \"#utility.yul\":90:198   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":204:330   */\n    tag_13:\n        /* \"#utility.yul\":241:248   */\n      0x00\n        /* \"#utility.yul\":281:323   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":274:279   */\n      dup3\n        /* \"#utility.yul\":270:324   */\n      and\n        /* \"#utility.yul\":259:324   */\n      swap1\n      pop\n        /* \"#utility.yul\":204:330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":336:432   */\n    tag_14:\n        /* \"#utility.yul\":373:380   */\n      0x00\n        /* \"#utility.yul\":402:426   */\n      tag_23\n        /* \"#utility.yul\":420:425   */\n      dup3\n        /* \"#utility.yul\":402:426   */\n      tag_13\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":391:426   */\n      swap1\n      pop\n        /* \"#utility.yul\":336:432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":438:546   */\n    tag_15:\n        /* \"#utility.yul\":515:539   */\n      tag_25\n        /* \"#utility.yul\":533:538   */\n      dup2\n        /* \"#utility.yul\":515:539   */\n      tag_14\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":510:513   */\n      dup3\n        /* \"#utility.yul\":503:540   */\n      mstore\n        /* \"#utility.yul\":438:546   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1683   */\n    tag_16:\n        /* \"#utility.yul\":783:787   */\n      0xa0\n        /* \"#utility.yul\":778:781   */\n      dup3\n        /* \"#utility.yul\":774:788   */\n      add\n        /* \"#utility.yul\":872:876   */\n      0x00\n        /* \"#utility.yul\":865:870   */\n      dup3\n        /* \"#utility.yul\":861:877   */\n      add\n        /* \"#utility.yul\":855:878   */\n      mload\n        /* \"#utility.yul\":891:954   */\n      tag_27\n        /* \"#utility.yul\":948:952   */\n      0x00\n        /* \"#utility.yul\":943:946   */\n      dup6\n        /* \"#utility.yul\":939:953   */\n      add\n        /* \"#utility.yul\":925:937   */\n      dup3\n        /* \"#utility.yul\":891:954   */\n      tag_12\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":798:964   */\n      pop\n        /* \"#utility.yul\":1051:1055   */\n      0x20\n        /* \"#utility.yul\":1044:1049   */\n      dup3\n        /* \"#utility.yul\":1040:1056   */\n      add\n        /* \"#utility.yul\":1034:1057   */\n      mload\n        /* \"#utility.yul\":1070:1133   */\n      tag_28\n        /* \"#utility.yul\":1127:1131   */\n      0x20\n        /* \"#utility.yul\":1122:1125   */\n      dup6\n        /* \"#utility.yul\":1118:1132   */\n      add\n        /* \"#utility.yul\":1104:1116   */\n      dup3\n        /* \"#utility.yul\":1070:1133   */\n      tag_12\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":974:1143   */\n      pop\n        /* \"#utility.yul\":1231:1235   */\n      0x40\n        /* \"#utility.yul\":1224:1229   */\n      dup3\n        /* \"#utility.yul\":1220:1236   */\n      add\n        /* \"#utility.yul\":1214:1237   */\n      mload\n        /* \"#utility.yul\":1250:1313   */\n      tag_29\n        /* \"#utility.yul\":1307:1311   */\n      0x40\n        /* \"#utility.yul\":1302:1305   */\n      dup6\n        /* \"#utility.yul\":1298:1312   */\n      add\n        /* \"#utility.yul\":1284:1296   */\n      dup3\n        /* \"#utility.yul\":1250:1313   */\n      tag_12\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":1153:1323   */\n      pop\n        /* \"#utility.yul\":1406:1410   */\n      0x60\n        /* \"#utility.yul\":1399:1404   */\n      dup3\n        /* \"#utility.yul\":1395:1411   */\n      add\n        /* \"#utility.yul\":1389:1412   */\n      mload\n        /* \"#utility.yul\":1425:1488   */\n      tag_30\n        /* \"#utility.yul\":1482:1486   */\n      0x60\n        /* \"#utility.yul\":1477:1480   */\n      dup6\n        /* \"#utility.yul\":1473:1487   */\n      add\n        /* \"#utility.yul\":1459:1471   */\n      dup3\n        /* \"#utility.yul\":1425:1488   */\n      tag_15\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":1333:1498   */\n      pop\n        /* \"#utility.yul\":1584:1588   */\n      0x80\n        /* \"#utility.yul\":1577:1582   */\n      dup3\n        /* \"#utility.yul\":1573:1589   */\n      add\n        /* \"#utility.yul\":1567:1590   */\n      mload\n        /* \"#utility.yul\":1603:1666   */\n      tag_31\n        /* \"#utility.yul\":1660:1664   */\n      0x80\n        /* \"#utility.yul\":1655:1658   */\n      dup6\n        /* \"#utility.yul\":1651:1665   */\n      add\n        /* \"#utility.yul\":1637:1649   */\n      dup3\n        /* \"#utility.yul\":1603:1666   */\n      tag_12\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":1508:1676   */\n      pop\n        /* \"#utility.yul\":752:1683   */\n      pop\n        /* \"#utility.yul\":632:1683   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1689:2020   */\n    tag_7:\n        /* \"#utility.yul\":1836:1840   */\n      0x00\n        /* \"#utility.yul\":1874:1877   */\n      0xa0\n        /* \"#utility.yul\":1863:1872   */\n      dup3\n        /* \"#utility.yul\":1859:1878   */\n      add\n        /* \"#utility.yul\":1851:1878   */\n      swap1\n      pop\n        /* \"#utility.yul\":1888:2013   */\n      tag_33\n        /* \"#utility.yul\":2010:2011   */\n      0x00\n        /* \"#utility.yul\":1999:2008   */\n      dup4\n        /* \"#utility.yul\":1995:2012   */\n      add\n        /* \"#utility.yul\":1986:1992   */\n      dup5\n        /* \"#utility.yul\":1888:2013   */\n      tag_16\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":1689:2020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122063322f357e7cd722d7807b933dc578441ee2e6c7cadbec88b22047afc69688bf64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610211806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638c6c86d114610030575b600080fd5b61003861004e565b60405161004591906101c0565b60405180910390f35b6100566100b9565b43816000018181525050428160200181815250504481604001818152505041816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250504581608001818152505090565b6040518060a00160405280600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000819050919050565b610111816100fe565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061014282610117565b9050919050565b61015281610137565b82525050565b60a08201600082015161016e6000850182610108565b5060208201516101816020850182610108565b5060408201516101946040850182610108565b5060608201516101a76060850182610149565b5060808201516101ba6080850182610108565b50505050565b600060a0820190506101d56000830184610158565b9291505056fea264697066735822122063322f357e7cd722d7807b933dc578441ee2e6c7cadbec88b22047afc69688bf64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C6C86D1 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56 PUSH2 0xB9 JUMP JUMPDEST NUMBER DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PREVRANDAO DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP COINBASE DUP2 PUSH1 0x60 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP GASLIMIT DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111 DUP2 PUSH2 0xFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142 DUP3 PUSH2 0x117 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x152 DUP2 PUSH2 0x137 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x16E PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x108 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x181 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x108 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x194 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x108 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1A7 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x149 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1BA PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x108 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x158 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x322F357E PUSH29 0xD722D7807B933DC578441EE2E6C7CADBEC88B22047AFC69688BF64736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "57:820:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getBlockHeader_55": {
									"entryPoint": 78,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_BlockHeader_$12_memory_ptr_to_t_struct$_BlockHeader_$12_memory_ptr_fromStack": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_struct$_BlockHeader_$12_memory_ptr__to_t_struct$_BlockHeader_$12_memory_ptr__fromStack_reversed": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2023:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "145:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "162:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "185:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "167:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "167:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "155:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "155:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "133:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "140:3:1",
														"type": ""
													}
												],
												"src": "90:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "249:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "259:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "274:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "270:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "270:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "259:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "231:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "241:7:1",
														"type": ""
													}
												],
												"src": "204:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "381:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "391:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "420:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "402:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "402:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "391:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "363:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "373:7:1",
														"type": ""
													}
												],
												"src": "336:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "510:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "515:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "515:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "503:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "503:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "481:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "488:3:1",
														"type": ""
													}
												],
												"src": "438:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:931:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "762:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "778:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:4:1",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "774:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:14:1"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "766:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "798:166:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "835:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "865:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "872:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "861:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "861:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "855:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "839:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "925:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "943:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "948:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "939:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "939:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "891:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "891:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "891:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "974:169:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1014:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1044:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1051:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1040:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1040:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1034:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1034:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1018:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1104:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1122:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1127:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1118:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1118:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1070:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1070:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1070:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1153:170:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1194:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1224:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1231:4:1",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1214:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1214:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1198:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1284:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1302:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1307:4:1",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1298:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1298:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1250:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1250:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1250:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1333:165:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1369:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1399:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1406:4:1",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1395:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1395:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1389:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1373:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1459:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1477:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1482:4:1",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1473:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1425:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1425:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1425:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1508:168:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1547:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1577:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1584:4:1",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1573:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1573:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1567:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1567:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1551:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1637:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1655:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1660:4:1",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1651:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1651:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1603:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1603:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1603:63:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_BlockHeader_$12_memory_ptr_to_t_struct$_BlockHeader_$12_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "739:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "746:3:1",
														"type": ""
													}
												],
												"src": "632:1051:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1841:179:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1851:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1863:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1874:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1859:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1859:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1851:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1986:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1999:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2010:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1995:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1995:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_BlockHeader_$12_memory_ptr_to_t_struct$_BlockHeader_$12_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1888:97:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1888:125:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1888:125:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_BlockHeader_$12_memory_ptr__to_t_struct$_BlockHeader_$12_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1813:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1825:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1836:4:1",
														"type": ""
													}
												],
												"src": "1689:331:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct BlockHeaderInfo.BlockHeader -> struct BlockHeaderInfo.BlockHeader\n    function abi_encode_t_struct$_BlockHeader_$12_memory_ptr_to_t_struct$_BlockHeader_$12_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // number\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // timestamp\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // difficulty\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // miner\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // gasLimit\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_BlockHeader_$12_memory_ptr__to_t_struct$_BlockHeader_$12_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_struct$_BlockHeader_$12_memory_ptr_to_t_struct$_BlockHeader_$12_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80638c6c86d114610030575b600080fd5b61003861004e565b60405161004591906101c0565b60405180910390f35b6100566100b9565b43816000018181525050428160200181815250504481604001818152505041816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250504581608001818152505090565b6040518060a00160405280600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000819050919050565b610111816100fe565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061014282610117565b9050919050565b61015281610137565b82525050565b60a08201600082015161016e6000850182610108565b5060208201516101816020850182610108565b5060408201516101946040850182610108565b5060608201516101a76060850182610149565b5060808201516101ba6080850182610108565b50505050565b600060a0820190506101d56000830184610158565b9291505056fea264697066735822122063322f357e7cd722d7807b933dc578441ee2e6c7cadbec88b22047afc69688bf64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C6C86D1 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56 PUSH2 0xB9 JUMP JUMPDEST NUMBER DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PREVRANDAO DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP COINBASE DUP2 PUSH1 0x60 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP GASLIMIT DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111 DUP2 PUSH2 0xFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142 DUP3 PUSH2 0x117 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x152 DUP2 PUSH2 0x137 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x16E PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x108 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x181 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x108 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x194 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x108 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1A7 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x149 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1BA PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x108 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x158 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x322F357E PUSH29 0xD722D7807B933DC578441EE2E6C7CADBEC88B22047AFC69688BF64736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "57:820:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;583:292;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;632:25;;:::i;:::-;685:12;669:6;:13;;:28;;;;;726:15;707:6;:16;;:34;;;;;771:16;751:6;:17;;:36;;;;;812:14;797:6;:12;;:29;;;;;;;;;;;854:14;836:6;:15;;:32;;;;;583:292;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:108::-;167:24;185:5;167:24;:::i;:::-;162:3;155:37;90:108;;:::o;204:126::-;241:7;281:42;274:5;270:54;259:65;;204:126;;;:::o;336:96::-;373:7;402:24;420:5;402:24;:::i;:::-;391:35;;336:96;;;:::o;438:108::-;515:24;533:5;515:24;:::i;:::-;510:3;503:37;438:108;;:::o;632:1051::-;783:4;778:3;774:14;872:4;865:5;861:16;855:23;891:63;948:4;943:3;939:14;925:12;891:63;:::i;:::-;798:166;1051:4;1044:5;1040:16;1034:23;1070:63;1127:4;1122:3;1118:14;1104:12;1070:63;:::i;:::-;974:169;1231:4;1224:5;1220:16;1214:23;1250:63;1307:4;1302:3;1298:14;1284:12;1250:63;:::i;:::-;1153:170;1406:4;1399:5;1395:16;1389:23;1425:63;1482:4;1477:3;1473:14;1459:12;1425:63;:::i;:::-;1333:165;1584:4;1577:5;1573:16;1567:23;1603:63;1660:4;1655:3;1651:14;1637:12;1603:63;:::i;:::-;1508:168;752:931;632:1051;;:::o;1689:331::-;1836:4;1874:3;1863:9;1859:19;1851:27;;1888:125;2010:1;1999:9;1995:17;1986:6;1888:125;:::i;:::-;1689:331;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "105800",
								"executionCost": "153",
								"totalCost": "105953"
							},
							"external": {
								"getBlockHeader()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 877,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 877,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 877,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 877,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 877,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 877,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 877,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 877,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 877,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 877,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 877,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 877,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 877,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 877,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 877,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 877,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 877,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 877,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 877,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 877,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122063322f357e7cd722d7807b933dc578441ee2e6c7cadbec88b22047afc69688bf64736f6c63430008130033",
									".code": [
										{
											"begin": 57,
											"end": 877,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 877,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 877,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 877,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 877,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 877,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "PUSH",
											"source": 0,
											"value": "8C6C86D1"
										},
										{
											"begin": 57,
											"end": 877,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 877,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 877,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 583,
											"end": 875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 583,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 583,
											"end": 875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 583,
											"end": 875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 583,
											"end": 875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 583,
											"end": 875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 583,
											"end": 875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 583,
											"end": 875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 632,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 632,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 632,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 697,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 669,
											"end": 675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 669,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 669,
											"end": 697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 669,
											"end": 697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 669,
											"end": 697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 669,
											"end": 697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 669,
											"end": 697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 726,
											"end": 741,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 707,
											"end": 713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 707,
											"end": 723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 707,
											"end": 723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 707,
											"end": 741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 707,
											"end": 741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 707,
											"end": 741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 707,
											"end": 741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 707,
											"end": 741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 771,
											"end": 787,
											"name": "PREVRANDAO",
											"source": 0
										},
										{
											"begin": 751,
											"end": 757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 751,
											"end": 768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 751,
											"end": 787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 751,
											"end": 787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 751,
											"end": 787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 751,
											"end": 787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 751,
											"end": 787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 812,
											"end": 826,
											"name": "COINBASE",
											"source": 0
										},
										{
											"begin": 797,
											"end": 803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 797,
											"end": 809,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 797,
											"end": 809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 797,
											"end": 826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 797,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 797,
											"end": 826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 797,
											"end": 826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 797,
											"end": 826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 797,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 797,
											"end": 826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 797,
											"end": 826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 797,
											"end": 826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 797,
											"end": 826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 797,
											"end": 826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 854,
											"end": 868,
											"name": "GASLIMIT",
											"source": 0
										},
										{
											"begin": 836,
											"end": 842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 836,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 836,
											"end": 851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 836,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 836,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 836,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 836,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 836,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 583,
											"end": 875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 198,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 167,
											"end": 191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 185,
											"end": 190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 167,
											"end": 191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 167,
											"end": 191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 167,
											"end": 191,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 167,
											"end": 191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 162,
											"end": 165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 155,
											"end": 192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 204,
											"end": 330,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 204,
											"end": 330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 274,
											"end": 279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 270,
											"end": 324,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 259,
											"end": 324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 259,
											"end": 324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 204,
											"end": 330,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 204,
											"end": 330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 204,
											"end": 330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 204,
											"end": 330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 336,
											"end": 432,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 336,
											"end": 432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 373,
											"end": 380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 420,
											"end": 425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 402,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 402,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 402,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 402,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 391,
											"end": 426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 336,
											"end": 432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 336,
											"end": 432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 336,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 336,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 438,
											"end": 546,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 515,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 533,
											"end": 538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 515,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 515,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 515,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 510,
											"end": 513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 503,
											"end": 540,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 438,
											"end": 546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 438,
											"end": 546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 438,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 1683,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 632,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 778,
											"end": 781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 774,
											"end": 788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 872,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 861,
											"end": 877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 855,
											"end": 878,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 891,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 948,
											"end": 952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 946,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 939,
											"end": 953,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 925,
											"end": 937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 891,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 891,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 891,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 891,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 798,
											"end": 964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 1049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1057,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1127,
											"end": 1131,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1125,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1070,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1133,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1070,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1224,
											"end": 1229,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1307,
											"end": 1311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1305,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1250,
											"end": 1313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1313,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1250,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1410,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1399,
											"end": 1404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1412,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1477,
											"end": 1480,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1425,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1488,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1425,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 1498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1577,
											"end": 1582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1590,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1660,
											"end": 1664,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1655,
											"end": 1658,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1603,
											"end": 1666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1666,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1603,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 1683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 1683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 1683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 1683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 2020,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1689,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2010,
											"end": 2011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2008,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 1992,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1888,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 2013,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1888,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 2020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 2020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 2020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 2020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 2020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"B/blockHeaderInfo.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getBlockHeader()": "8c6c86d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getBlockHeader\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct BlockHeaderInfo.BlockHeader\",\"name\":\"header\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getBlockHeader()\":{\"returns\":{\"header\":\"A struct containing the current block header details.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getBlockHeader()\":{\"notice\":\"Returns the current block header information.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"B/blockHeaderInfo.sol\":\"BlockHeaderInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"B/blockHeaderInfo.sol\":{\"keccak256\":\"0x5ce4e3159137debe2e9be96f4b7a391e80de080992f27deadd573d431b8abb3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://758c65993b4324587202e3a28c5fa13f3c316475e57760bd6da5cc7e97535458\",\"dweb:/ipfs/QmbAFKhodcgrRwFzVD5UVbX8YkCnVCHcKXjVDKJs6JSpsd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getBlockHeader()": {
								"notice": "Returns the current block header information."
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "8417",
				"formattedMessage": "Warning: Since the VM version paris, \"difficulty\" was replaced by \"prevrandao\", which now returns a random number based on the beacon chain.\n  --> B/blockHeaderInfo.sol:19:29:\n   |\n19 |         header.difficulty = block.difficulty;\n   |                             ^^^^^^^^^^^^^^^^\n\n",
				"message": "Since the VM version paris, \"difficulty\" was replaced by \"prevrandao\", which now returns a random number based on the beacon chain.",
				"severity": "warning",
				"sourceLocation": {
					"end": 787,
					"file": "B/blockHeaderInfo.sol",
					"start": 771
				},
				"type": "Warning"
			}
		],
		"sources": {
			"B/blockHeaderInfo.sol": {
				"ast": {
					"absolutePath": "B/blockHeaderInfo.sol",
					"exportedSymbols": {
						"BlockHeaderInfo": [
							56
						]
					},
					"id": 57,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BlockHeaderInfo",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 56,
							"linearizedBaseContracts": [
								56
							],
							"name": "BlockHeaderInfo",
							"nameLocation": "66:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "BlockHeaderInfo.BlockHeader",
									"id": 12,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "number",
											"nameLocation": "193:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "185:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "185:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "239:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "231:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "231:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "difficulty",
											"nameLocation": "288:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "280:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "280:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "miner",
											"nameLocation": "338:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "330:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 8,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "330:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "gasLimit",
											"nameLocation": "396:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "388:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 10,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "388:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BlockHeader",
									"nameLocation": "163:11:0",
									"nodeType": "StructDefinition",
									"scope": 56,
									"src": "156:278:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "659:216:0",
										"statements": [
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 19,
															"name": "header",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BlockHeader_$12_memory_ptr",
																"typeString": "struct BlockHeaderInfo.BlockHeader memory"
															}
														},
														"id": 21,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "676:6:0",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "669:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 22,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "685:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "691:6:0",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "685:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "669:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "669:28:0"
											},
											{
												"expression": {
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 26,
															"name": "header",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "707:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BlockHeader_$12_memory_ptr",
																"typeString": "struct BlockHeaderInfo.BlockHeader memory"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "714:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "707:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 29,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "726:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "732:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "726:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "707:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "707:34:0"
											},
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 33,
															"name": "header",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "751:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BlockHeader_$12_memory_ptr",
																"typeString": "struct BlockHeaderInfo.BlockHeader memory"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "758:10:0",
														"memberName": "difficulty",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "751:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 36,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "777:10:0",
														"memberName": "difficulty",
														"nodeType": "MemberAccess",
														"src": "771:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "751:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "751:36:0"
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 40,
															"name": "header",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "797:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BlockHeader_$12_memory_ptr",
																"typeString": "struct BlockHeaderInfo.BlockHeader memory"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "804:5:0",
														"memberName": "miner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "797:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 43,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "812:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "818:8:0",
														"memberName": "coinbase",
														"nodeType": "MemberAccess",
														"src": "812:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "797:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "797:29:0"
											},
											{
												"expression": {
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 47,
															"name": "header",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "836:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BlockHeader_$12_memory_ptr",
																"typeString": "struct BlockHeaderInfo.BlockHeader memory"
															}
														},
														"id": 49,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "843:8:0",
														"memberName": "gasLimit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 11,
														"src": "836:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 50,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "854:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "860:8:0",
														"memberName": "gaslimit",
														"nodeType": "MemberAccess",
														"src": "854:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "836:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "836:32:0"
											}
										]
									},
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "444:134:0",
										"text": "@notice Returns the current block header information.\n @return header A struct containing the current block header details."
									},
									"functionSelector": "8c6c86d1",
									"id": 55,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBlockHeader",
									"nameLocation": "592:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "header",
												"nameLocation": "651:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "632:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BlockHeader_$12_memory_ptr",
													"typeString": "struct BlockHeaderInfo.BlockHeader"
												},
												"typeName": {
													"id": 16,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 15,
														"name": "BlockHeader",
														"nameLocations": [
															"632:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 12,
														"src": "632:11:0"
													},
													"referencedDeclaration": 12,
													"src": "632:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BlockHeader_$12_storage_ptr",
														"typeString": "struct BlockHeaderInfo.BlockHeader"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:27:0"
									},
									"scope": 56,
									"src": "583:292:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 57,
							"src": "57:820:0",
							"usedErrors": []
						}
					],
					"src": "32:846:0"
				},
				"id": 0
			}
		}
	}
}