{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_initialPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_slope",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"name": "TokenPurchased",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "buyOneToken",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCurrentPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "initialPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "slope",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_initialPrice": "The price of the first token in wei.",
						"_slope": "The incremental price increase per token minted in wei."
					}
				},
				"getCurrentPrice()": {
					"returns": {
						"price": "The current token price in wei."
					}
				}
			},
			"title": "BondingCurve",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"buyOneToken()": {
					"notice": "Allows a user to buy one token at the current price. Excess Ether sent is refunded."
				},
				"constructor": {
					"notice": "Constructor to set the initial price and slope."
				},
				"getCurrentPrice()": {
					"notice": "Returns the current price for the next token."
				}
			},
			"notice": "A simple linear bonding curve contract for token issuance. The token price increases linearly as more tokens are minted.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"B/bondingCurve.sol": "BondingCurve"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"B/bondingCurve.sol": {
			"keccak256": "0x72f35fcabb668e56cd0cb9c08f34de5c818de298211954b98acaf0d94b5affbe",
			"license": "MIT",
			"urls": [
				"bzz-raw://b09bae5b3b6f19566ae1b252a97a5ad5ab32ddbf84c86d973c480a983e165994",
				"dweb:/ipfs/QmbRoiir5Qmd6gypvHhXYsPqaHvtXmb9786sLEMaJX9iM5"
			]
		}
	},
	"version": 1
}