{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "reward",
						"type": "uint256"
					}
				],
				"name": "BountyCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "reward",
						"type": "uint256"
					}
				],
				"name": "RewardClaimed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "submitter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "submission",
						"type": "string"
					}
				],
				"name": "SubmissionReceived",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					}
				],
				"name": "WinnerSelected",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "bountyActive",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bountyReward",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cancelBounty",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "claimReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "createBounty",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rewardClaimed",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_winner",
						"type": "address"
					}
				],
				"name": "selectWinner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "submission",
						"type": "string"
					}
				],
				"name": "submitProposal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "winner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"createBounty()": {
					"details": "The bounty reward is set to the amount of Ether sent."
				},
				"selectWinner(address)": {
					"params": {
						"_winner": "The address of the selected winner."
					}
				},
				"submitProposal(string)": {
					"params": {
						"submission": "A string describing the proposal or solution."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"cancelBounty()": {
					"notice": "Allows the owner to cancel the bounty and refund the bounty reward."
				},
				"claimReward()": {
					"notice": "Allows the winner to claim the bounty reward."
				},
				"createBounty()": {
					"notice": "Owner creates a bounty by depositing Ether."
				},
				"selectWinner(address)": {
					"notice": "Owner selects a winner for the bounty."
				},
				"submitProposal(string)": {
					"notice": "Allows anyone to submit a proposal."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"B/bounty.sol": "BountyProgram"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"B/bounty.sol": {
			"keccak256": "0x4a0c4d1dd9967f6973cca9dd1974ae2518cb81e6e47e8c23b4c5bfaa9165e148",
			"license": "MIT",
			"urls": [
				"bzz-raw://b0cb1b12e403be05a9ac492565cce9fb6faa01e994901a2ba3827aa9055684a3",
				"dweb:/ipfs/QmUDSqKZoNiqjg3sGAEQAguWLSXCozzLRSDf4aun5AESHE"
			]
		}
	},
	"version": 1
}