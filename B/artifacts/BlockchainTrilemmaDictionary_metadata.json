{
	"compiler": {
		"version": "0.8.29+commit.ab55807c"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "newDefinition",
						"type": "string"
					}
				],
				"name": "DefinitionUpdated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "definition",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getDefinition",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "term",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "newDefinition",
						"type": "string"
					}
				],
				"name": "updateDefinition",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getDefinition()": {
					"returns": {
						"_0": "The definition as a string."
					}
				},
				"updateDefinition(string)": {
					"params": {
						"newDefinition": "The new definition string."
					}
				}
			},
			"title": "BlockchainTrilemmaDictionary",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"constructor": {
					"notice": "Constructor sets the contract owner and an initial definition of the blockchain trilemma."
				},
				"getDefinition()": {
					"notice": "Retrieves the definition of the blockchain trilemma."
				},
				"updateDefinition(string)": {
					"notice": "Allows the owner to update the definition."
				}
			},
			"notice": "A contract that stores and retrieves information about the blockchain trilemma.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"B/blockchainTrilemma.sol": "BlockchainTrilemmaDictionary"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"B/blockchainTrilemma.sol": {
			"keccak256": "0x1801454d545d4860cd7f7205211a16cf2f1f0e96f74ff0088f04e0d6369b8d67",
			"license": "MIT",
			"urls": [
				"bzz-raw://88a8effe50c13c65a4ca2d95180d55c960c847ec0abaaafc2c18384a1cb772a1",
				"dweb:/ipfs/QmbLV2PMdxtANq4tWQDwMCvKqEVG8R9JPN5eHDzQmC2cpZ"
			]
		}
	},
	"version": 1
}