{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_offerPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_expiry",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "payout",
						"type": "uint256"
					}
				],
				"name": "OfferAccepted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "OfferFunded",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenAmount",
						"type": "uint256"
					}
				],
				"name": "acceptOffer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "expiry",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fundOffer",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "offerPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawFunds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"acceptOffer(uint256)": {
					"details": "Token holders must approve this contract to spend their tokens beforehand.",
					"params": {
						"tokenAmount": "The number of tokens to sell."
					}
				},
				"constructor": {
					"details": "The contract should be deployed with sufficient Ether to cover expected payouts.",
					"params": {
						"_expiry": "The Unix timestamp when the offer expires.",
						"_offerPrice": "The offer price in wei per token.",
						"_tokenAddress": "The address of the ERC20 token."
					}
				}
			},
			"title": "BearHugOffer",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"acceptOffer(uint256)": {
					"notice": "Allows token holders to accept the bear hug offer."
				},
				"constructor": {
					"notice": "Constructor to initialize the bear hug offer."
				},
				"fundOffer()": {
					"notice": "Allows the owner to fund additional Ether into the contract."
				},
				"withdrawFunds()": {
					"notice": "Allows the owner to withdraw remaining funds after the offer expires."
				}
			},
			"notice": "A contract that simulates a bear hug offer for an ERC20 token. The offeror funds the contract with Ether and sets an offer price per token and an expiry time. Token holders can accept the offer to sell their tokens at the given price before the offer expires.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"B/bearhug.sol": "BearHugOffer"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"B/bearhug.sol": {
			"keccak256": "0x0d2318e14ef4039213605324022227f2cc7fbee48c6ecef57a1959f456fa5bc8",
			"license": "MIT",
			"urls": [
				"bzz-raw://39163931203f1e23d6a79f4a8ec938bbad1ea01bb8b96ba55d687284a6062416",
				"dweb:/ipfs/QmXK7QWVDVK2Upm1cpthkwoTgaBovnUn6CyDRxEgTZJ99A"
			]
		}
	},
	"version": 1
}