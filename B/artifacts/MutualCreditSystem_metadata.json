{
	"compiler": {
		"version": "0.8.29+commit.ab55807c"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "amount",
						"type": "int256"
					}
				],
				"name": "CreditIssued",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "CreditTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "CREDIT_LIMIT",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "creditBalance",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "getCreditBalance",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "int256",
						"name": "amount",
						"type": "int256"
					}
				],
				"name": "issueCredit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferCredit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getCreditBalance(address)": {
					"params": {
						"account": "The address of the account."
					},
					"returns": {
						"_0": "The credit balance (can be positive or negative)."
					}
				},
				"issueCredit(address,int256)": {
					"params": {
						"account": "The address to which credit is issued.",
						"amount": "The amount of credit to issue (must be positive)."
					}
				},
				"transferCredit(address,uint256)": {
					"params": {
						"amount": "The amount of credit to transfer (must be positive).",
						"to": "The recipient address."
					}
				}
			},
			"title": "MutualCreditSystem",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getCreditBalance(address)": {
					"notice": "Returns the current credit balance for a given account."
				},
				"issueCredit(address,int256)": {
					"notice": "Allows the owner to issue positive credit to a participant."
				},
				"transferCredit(address,uint256)": {
					"notice": "Allows a participant to transfer credit to another participant."
				}
			},
			"notice": "A simple blockchain mutual credit system where participants' balances can be positive or negative.         The contract owner can issue credit, and participants can transfer credit among themselves.         Negative balances are allowed up to a specified credit limit.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"B/blockchainMutualCredit.sol": "MutualCreditSystem"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"B/blockchainMutualCredit.sol": {
			"keccak256": "0xd4f14a78bc0402b2e065efc6bb5c579f852e506ebdbe3ce676eeb6b5fee0a5e2",
			"license": "MIT",
			"urls": [
				"bzz-raw://3cb95b6ad82c8a9594e5094de9bc0b47cfdd390b789a381e2525e5ede99f14e3",
				"dweb:/ipfs/QmNyY1o6S9DcsbYKySJ5m3fYdoy1kZ6CVDoiGwr2p9LTpY"
			]
		}
	},
	"version": 1
}